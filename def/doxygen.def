AutoGen Definitions dummy;
struct = {
  cp-id     = 'structd__tgt__list';
  cp-name   = 'd_tgt_list';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structd__tgt__list_1a9759507f86520e5e451fd0a4d132da89';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
d_rank_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'tl_ranks';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      sec-mem-desc-line = '171';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
array of ranks 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structd__tgt__list_1a789edcb837d0be34b80b87ab4e7d8717';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'tl_tgts';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      sec-mem-desc-line = '173';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
array of targets 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structd__tgt__list_1a7e593af908c108e81c670188f902f5bd';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'tl_nr';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      sec-mem-desc-line = '175';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
number of ranks & tgts 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
  cp-fileline  = '169';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Pool target list, each target is identified by rank & target
index within the rank
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__ace';
  cp-name   = 'daos_ace';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__ace_1a6317b2440af11c14a8c4189cfdcc8125';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dae_access_types';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      sec-mem-desc-line = '178';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Bitmap of daos_acl_access_type 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__ace_1ad4caefc1c56af1b877c22237a256635a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dae_principal_type';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      sec-mem-desc-line = '180';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
daos_acl_principal_type 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__ace_1a9485bb581370df52de2b97ae2bea18c4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dae_principal_len';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      sec-mem-desc-line = '182';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Length of the principal string 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__ace_1a00212696fa07661bd6d55fc2e788c3d7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dae_access_flags';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      sec-mem-desc-line = '184';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Bitmap of daos_acl_flags 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__ace_1a23d2c6dad00ec143499fb1064ee014e9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dae_reserv';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      sec-mem-desc-line = '186';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Reserved for 64-bit alignment 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__ace_1a149615817bceb595c503b09f0b4458e4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dae_allow_perms';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      sec-mem-desc-line = '188';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Bitmap of daos_acl_perm for the ALLOW access 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__ace_1a66c678b7cea61cb3002290022d2c12e6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dae_audit_perms';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      sec-mem-desc-line = '190';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Bitmap of daos_acl_perm for AUDIT access 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__ace_1a67e0fa42348390eb07ebdb33321d5bfa';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dae_alarm_perms';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      sec-mem-desc-line = '192';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Bitmap of daos_acl_perm for ALARM access 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__ace_1a6b40686de6c0d6c289474518a64aac00';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dae_principal';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      sec-mem-desc-line = '199';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Null-terminated string representing the principal name for specific
user/group.
Actual bytes allocated MUST be rounded up for 64-bit alignment.
Empty for special principals OWNER, OWNER_GROUP, and EVERYONE.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
  cp-fileline  = '176';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Access Control Entry for a given principal.
Each principal has at most one ACE that lists all their permissions in a
given Access Control List.
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__acl';
  cp-name   = 'daos_acl';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__acl_1a8b92aaaf0ee79993f673cd3e15cb8a8f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dal_ver';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      sec-mem-desc-line = '67';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Version of the table format 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__acl_1a5c04cc2fc0ae8019fef8799310c86eb9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dal_reserv';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      sec-mem-desc-line = '69';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
reserved for 64-bit alignment 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__acl_1a354ac032f3e15a3f048ebd55728207db';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dal_len';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      sec-mem-desc-line = '71';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
length of entries list in bytes 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__acl_1a763291a8e16a29a4a0020bfb925700b0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dal_ace';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      sec-mem-desc-line = '73';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
table of variable-length Access Control Entries (struct daos_ace) 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
  cp-fileline  = '65';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Header for the Access Control List, followed by the table of variable-length
Access Control Entries.
The entry list may be walked by inspecting the principal length and
calculating the entry's overall length from that.
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__anchor__t';
  cp-name   = 'daos_anchor_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__anchor__t_1a00ba20ce6c4029f1b8b1912f3a1627fc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'da_type';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      sec-mem-desc-line = '62';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
daos_anchor_type_t 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__anchor__t_1a96375363d60fa414eac39f5aa45524d9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'da_shard';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      sec-mem-desc-line = '63';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__anchor__t_1a5556c0ee730a964b4d1fc394c166e341';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'da_flags';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      sec-mem-desc-line = '64';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
see enum daos_anchor_flags 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__anchor__t_1ad27778836f2ee7932a37bbcadb3c5c15';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'da_sub_anchors';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      sec-mem-desc-line = '65';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
record the offset for each shards for EC object 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__anchor__t_1a036d94665b754053e2a3760256eb44f0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'da_buf';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      sec-mem-desc-line = '66';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
  cp-fileline  = '61';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Iteration Anchor 
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__array__close__t';
  cp-name   = 'daos_array_close_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__close__t_1aef20019954d183ed757cd90ac3288242';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '838';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Array open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '836';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Array close args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'daos_array_close_t';
        node-link = {
          node-link-id = 'structdaos__array__close__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
oh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__array__create__t';
  cp-name   = 'daos_array_create_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__create__t_1a7fe83fe613282d305d3aeacba805f901';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'coh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '802';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Container open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__create__t_1aaa43d8da43a7c933a007abe42e86aa1c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_obj_id_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oid';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '804';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Array ID. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__create__t_1a8df9d41740502f16e867061d9bc0c585';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'th';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '806';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Transaction open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__create__t_1aad2f0250f44e89c9b2673554265d8508';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'cell_size';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '808';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Size of array records. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__create__t_1a4d7d468ea49cde0fe1e1e4842a80333c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'chunk_size';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '810';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of records stored under 1 dkey. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__create__t_1abf0833e309cc0c2b147aa35b54a02ad7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '812';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returned array open handle 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '800';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Array create args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 2;
        node-label = 'daos_obj_id_t';
        node-link = {
          node-link-id = 'structdaos__obj__id__t';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'daos_array_create_t';
        node-link = {
          node-link-id = 'structdaos__array__create__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
oid
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
th
coh
oh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 3;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__array__destroy__t';
  cp-name   = 'daos_array_destroy_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__destroy__t_1aef20019954d183ed757cd90ac3288242';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '876';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Array open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__destroy__t_1a8df9d41740502f16e867061d9bc0c585';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'th';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '878';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Transaction open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '874';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Array destroy args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_array_destroy_t';
        node-link = {
          node-link-id = 'structdaos__array__destroy__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
th
oh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__array__get__size__t';
  cp-name   = 'daos_array_get_size_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__get__size__t_1aef20019954d183ed757cd90ac3288242';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '856';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Array open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__get__size__t_1a8df9d41740502f16e867061d9bc0c585';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'th';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '858';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Transaction open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__get__size__t_1a388912d6ab41a7faa2329bbe2ecd7c1a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_size_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'size';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '860';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returned array size in number of records. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '854';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Array get size args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_array_get_size_t';
        node-link = {
          node-link-id = 'structdaos__array__get__size__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
th
oh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__array__io__t';
  cp-name   = 'daos_array_io_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__io__t_1aef20019954d183ed757cd90ac3288242';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '844';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Array open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__io__t_1a8df9d41740502f16e867061d9bc0c585';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'th';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '846';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Transaction open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__io__t_1ad00acef50d5008ed0c4fb88f0515c54b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_array_iod_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'iod';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '848';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Array IO descriptos. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__io__t_1a170878ca472dc37d01dc1a98038b4a1e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
d_sg_list_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'sgl';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '850';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
memory descriptors. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '842';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Array read/write args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 3;
        node-label = 'daos_range_t';
        node-link = {
          node-link-id = 'structdaos__range__t';
        };
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_array_iod_t';
        node-link = {
          node-link-id = 'structdaos__array__iod__t';
        };
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
arr_rgs
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 4;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'daos_array_io_t';
        node-link = {
          node-link-id = 'structdaos__array__io__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
iod
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '4';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
th
oh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__array__iod__t';
  cp-name   = 'daos_array_iod_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__iod__t_1a2b9be7050a799f9975ba4c10baf150ee';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'arr_nr';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
      sec-mem-desc-line = '36';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of entries in arr_rgs 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__iod__t_1a028f318baa33edeb89b00ac8e0980454';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_range_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'arr_rgs';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
      sec-mem-desc-line = '38';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Array of ranges; each range defines a starting index and length. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__iod__t_1a561a6eebfef4bba81f150ff4403da844';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'arr_nr_short_read';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
      sec-mem-desc-line = '46';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__iod__t_1aed9a103214228bf973fa0f8b085b5801';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'arr_nr_read';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
      sec-mem-desc-line = '47';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
  cp-fileline  = '34';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
IO descriptor of ranges in a DAOS array object to access 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 2;
        node-label = 'daos_range_t';
        node-link = {
          node-link-id = 'structdaos__range__t';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'daos_array_iod_t';
        node-link = {
          node-link-id = 'structdaos__array__iod__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
arr_rgs
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__array__open__t';
  cp-name   = 'daos_array_open_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__open__t_1a7fe83fe613282d305d3aeacba805f901';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'coh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '818';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Container open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__open__t_1aaa43d8da43a7c933a007abe42e86aa1c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_obj_id_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oid';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '820';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Array ID, 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__open__t_1a8df9d41740502f16e867061d9bc0c585';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'th';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '822';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Transaction open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__open__t_1ac1b4d694fc07a39e06900e82872aac7f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mode';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '824';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Open mode. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__open__t_1ab8ea5e400513516256d3fc8ba879f1cc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'open_with_attr';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '826';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
flag whether cell and chunk size are user provided. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__open__t_1a581a985842e32cf931c3dccfcd2d3f3b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_size_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'cell_size';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '828';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Size of array records. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__open__t_1a2712263963de90e2ad40dc3c5530777f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_size_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'chunk_size';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '830';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number if records stored under 1 dkey. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__open__t_1abf0833e309cc0c2b147aa35b54a02ad7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '832';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returned Array open handle 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '816';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Array open args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 2;
        node-label = 'daos_obj_id_t';
        node-link = {
          node-link-id = 'structdaos__obj__id__t';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'daos_array_open_t';
        node-link = {
          node-link-id = 'structdaos__array__open__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
oid
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
th
coh
oh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 3;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__array__set__size__t';
  cp-name   = 'daos_array_set_size_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__set__size__t_1aef20019954d183ed757cd90ac3288242';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '866';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Array open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__set__size__t_1a8df9d41740502f16e867061d9bc0c585';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'th';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '868';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Transaction open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__array__set__size__t_1a3d21cb9e70cd023737ac2179c37a8dc8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'size';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '870';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
truncate size of the array. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '864';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Array set size args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_array_set_size_t';
        node-link = {
          node-link-id = 'structdaos__array__set__size__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
th
oh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__co__status';
  cp-name   = 'daos_co_status';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__co__status_1a557fdb386474bf33ced4b0b1077e1a4f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dcs_status';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      sec-mem-desc-line = '318';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
DAOS_PROP_CO_HEALTHY/DAOS_PROP_CO_UNCLEAN 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__co__status_1aab5c54316efdf9c59eddaca8e96ff2cc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dcs_flags';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      sec-mem-desc-line = '320';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
flags for DAOS internal usage, DAOS_PROP_CO_CLEAR 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__co__status_1aefe9e2249e5ec0508fd74728c31b6336';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dcs_pm_ver';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      sec-mem-desc-line = '322';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
pool map version when setting the dcs_status 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
  cp-fileline  = '316';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__cont__aggregate__t';
  cp-name   = 'daos_cont_aggregate_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__aggregate__t_1a7fe83fe613282d305d3aeacba805f901';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'coh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '379';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Container open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__aggregate__t_1a17de810d40610c8a151488f29fa63593';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_epoch_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'epoch';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '381';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Epoch to be aggregated to. Current time if 0.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '377';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Container aggregate args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_cont_aggregate_t';
        node-link = {
          node-link-id = 'structdaos__cont__aggregate__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
coh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__cont__alloc__oids__t';
  cp-name   = 'daos_cont_alloc_oids_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__alloc__oids__t_1a7fe83fe613282d305d3aeacba805f901';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'coh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '454';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Container open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__alloc__oids__t_1a1f8e94efa589d0f382b51ff31f291414';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'num_oids';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '456';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of unique IDs requested. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__alloc__oids__t_1a97c475f718cd4fbb4c94716dc248dcae';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oid';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '458';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
starting oid that was allocated up to oid + num_oids. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '452';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Container Object ID allocation args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_cont_alloc_oids_t';
        node-link = {
          node-link-id = 'structdaos__cont__alloc__oids__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
coh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__cont__close__t';
  cp-name   = 'daos_cont_close_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__close__t_1a7fe83fe613282d305d3aeacba805f901';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'coh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '322';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Container open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '320';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Container close args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'daos_cont_close_t';
        node-link = {
          node-link-id = 'structdaos__cont__close__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
coh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__cont__create__snap__t';
  cp-name   = 'daos_cont_create_snap_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__create__snap__t_1a7fe83fe613282d305d3aeacba805f901';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'coh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '481';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Container open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__create__snap__t_1a77b4d271ea4dd382d5334921f1cbcae3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'opts';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '483';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
bit flags, see enum daos_snapshot_opts 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__create__snap__t_1a627c0d024a3c1a700a06c76783d0630d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_epoch_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'epoch';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '485';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returned epoch of persistent snapshot taken. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__create__snap__t_1a5ac083a645d964373f022d03df4849c8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'name';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '487';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Optional null terminated name for snapshot. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '479';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Container snapshot creation args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_cont_create_snap_t';
        node-link = {
          node-link-id = 'structdaos__cont__create__snap__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
coh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__cont__create__t';
  cp-name   = 'daos_cont_create_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__create__t_1af65e0a5ef9986001524f96e09ae666a3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'poh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '288';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Pool open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__create__t_1a0c9cfc131b27ae3b98b1533bba4c58ef';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uuid_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'uuid';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '293';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Deprecated, the container UUID is generated by the DAOS system.
and returned in the cuuid field.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__create__t_1a8786d65cd566e6cbdb43d0afeca96a46';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_prop_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'prop';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '295';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Optional container properties. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__create__t_1a01970dd15c8ce4ca30e2bffa62a430b7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uuid_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'cuuid';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '297';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Optional returned the allocated container UUID 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '286';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Container create args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 2;
        node-label = 'daos_prop_t';
        node-link = {
          node-link-id = 'structdaos__prop__t';
        };
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
dpp_entries
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 3;
        node-label = 'daos_prop_entry';
        node-link = {
          node-link-id = 'structdaos__prop__entry';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'daos_cont_create_t';
        node-link = {
          node-link-id = 'structdaos__cont__create__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
prop
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '4';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
poh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 4;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__cont__del__attr__t';
  cp-name   = 'daos_cont_del_attr_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__del__attr__t_1a7fe83fe613282d305d3aeacba805f901';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'coh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '444';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Container open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__del__attr__t_1a76f11d9a0a47b94f72c2d0e77fb32240';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'n';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '446';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of attributes. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__del__attr__t_1a3e21e2c9e75716907b2090ca8fda0a60';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const char *const *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'names';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '448';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Array of \a n null-terminated attribute names. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '442';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Container attribute del args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_cont_del_attr_t';
        node-link = {
          node-link-id = 'structdaos__cont__del__attr__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
coh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__cont__delete__acl__t';
  cp-name   = 'daos_cont_delete_acl_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__delete__acl__t_1a7fe83fe613282d305d3aeacba805f901';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'coh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '369';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Container open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__delete__acl__t_1a1d127017fb298b889f4ba24752d08b8e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'type';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '371';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Principal type to be removed. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__delete__acl__t_1a52173b2eb03de17d5705163cb0a1bc85';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
d_string_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'name';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '373';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Name of principal to be removed. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '367';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Container ACL delete args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_cont_delete_acl_t';
        node-link = {
          node-link-id = 'structdaos__cont__delete__acl__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
coh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__cont__destroy__snap__t';
  cp-name   = 'daos_cont_destroy_snap_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__destroy__snap__t_1a7fe83fe613282d305d3aeacba805f901';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'coh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '493';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Container open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__destroy__snap__t_1aff303b52866241bcba5522498d7ab63e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_epoch_range_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'epr';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '495';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Epoch range of snapshots to destroy. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '491';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Container snapshot destroy args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_cont_destroy_snap_t';
        node-link = {
          node-link-id = 'structdaos__cont__destroy__snap__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
coh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
epr
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 3;
        node-label = 'daos_epoch_range_t';
        node-link = {
          node-link-id = 'structdaos__epoch__range__t';
        };
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__cont__destroy__t';
  cp-name   = 'daos_cont_destroy_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__destroy__t_1af65e0a5ef9986001524f96e09ae666a3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'poh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '328';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Pool open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__destroy__t_1a0c9cfc131b27ae3b98b1533bba4c58ef';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uuid_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'uuid';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '333';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Deprecated, container UUID replaced by UUID string or label via the
cont arg at the end of this structure.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__destroy__t_1a52de43b6faa0d9601f10db8b3826f11a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'force';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '335';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Force destroy even if there is outstanding open handles. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__destroy__t_1a3df0dff312cdb4ede73b41439c9e3f93';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'cont';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '337';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Container (UUID string or label) to destroy, API v1.3.0 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '326';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Container destroy args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_cont_destroy_t';
        node-link = {
          node-link-id = 'structdaos__cont__destroy__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
poh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__cont__get__attr__t';
  cp-name   = 'daos_cont_get_attr_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__get__attr__t_1a7fe83fe613282d305d3aeacba805f901';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'coh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '416';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Container open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__get__attr__t_1a76f11d9a0a47b94f72c2d0e77fb32240';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'n';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '418';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of attributes. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__get__attr__t_1a3e21e2c9e75716907b2090ca8fda0a60';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const char *const *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'names';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '420';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Array of \a n null-terminated attribute names. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__get__attr__t_1ac31e63060224a2873fe54edf02b58c2a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void *const *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'values';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '422';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Array of \a n buffers to store attribute values. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__get__attr__t_1a400fb89b01337e8e824c465ff6fed3c5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
size_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'sizes';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '424';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
[in]: Array of \a n buffer sizes. [out]: Array of actual sizes 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '414';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Container attribute get args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_cont_get_attr_t';
        node-link = {
          node-link-id = 'structdaos__cont__get__attr__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
coh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__cont__info__t';
  cp-name   = 'daos_cont_info_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__info__t_1aa2e9e3cdeff999df9c904624972873b9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uuid_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ci_uuid';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      sec-mem-desc-line = '49';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Container UUID 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__info__t_1a54b9828111b663e1e1adc9434a4e9ce9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_epoch_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ci_lsnapshot';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      sec-mem-desc-line = '51';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Epoch of latest persistent snapshot 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__info__t_1a3f12c45129a5bc4cd72c5844603b7fd6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ci_redun_fac';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      sec-mem-desc-line = '53';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Redundancy factor 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__info__t_1ad854e21a2c198d3fea306670bf68e8df';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ci_nsnapshots';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      sec-mem-desc-line = '55';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of snapshots 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__info__t_1a8dea7b1eaca56d5f135e01c56d7f4f2d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ci_pad';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      sec-mem-desc-line = '56';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
  cp-fileline  = '47';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Container information 
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__cont__list__attr__t';
  cp-name   = 'daos_cont_list_attr_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__list__attr__t_1a7fe83fe613282d305d3aeacba805f901';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'coh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '406';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Container open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__list__attr__t_1a1fe855c208bc17a51a4d34fefdb2d5b1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'buf';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '408';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Buffer containing concatenation of all attribute names. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__list__attr__t_1ae3c15c00c8f7ae14ae18501067cb5ac4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
size_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'size';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '410';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
[in]: Buffer size. [out]: Aggregate size of all attribute names. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '404';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Container attribute list args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_cont_list_attr_t';
        node-link = {
          node-link-id = 'structdaos__cont__list__attr__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
coh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__cont__list__snap__t';
  cp-name   = 'daos_cont_list_snap_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__list__snap__t_1a7fe83fe613282d305d3aeacba805f901';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'coh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '464';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Container open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__list__snap__t_1a6221fbfc5193b1c86f07e4d58ce1b87d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'nr';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '469';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__list__snap__t_1afa3ac1b94e8518e8baf13461fcb62dd6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_epoch_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'epochs';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '471';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
preallocated array of epochs to store snapshots. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__list__snap__t_1a26fc633cf551a2621e172633486c85ef';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char **
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'names';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '473';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
preallocated array of names of the snapshots. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__list__snap__t_1ac376c63cd592209e79c0b58caa5f105f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_anchor_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'anchor';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '475';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Hash anchor for the next call. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '462';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Container snapshot listing args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_cont_list_snap_t';
        node-link = {
          node-link-id = 'structdaos__cont__list__snap__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
anchor
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
coh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_anchor_t';
        node-link = {
          node-link-id = 'structdaos__anchor__t';
        };
      }; /* node */
      node = {
        node-id    = 3;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__cont__open__t';
  cp-name   = 'daos_cont_open_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__open__t_1af65e0a5ef9986001524f96e09ae666a3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'poh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '303';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Pool open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__open__t_1a0c9cfc131b27ae3b98b1533bba4c58ef';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uuid_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'uuid';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '308';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Deprecated, container UUID replaced by UUID string or label via the
cont arg at the end of this structure.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__open__t_1ac92588540e8c1d014a08cd8a45462b19';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'flags';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '310';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Open mode, represented by the DAOS_COO_ bits.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__open__t_1aa7432700fb01d32fa5d0b58fcdd8f39d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'coh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '312';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returned container open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__open__t_1af78dcd92d352ca0f2e933703cbaabcf6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_cont_info_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'info';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '314';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Optional, return container information. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__open__t_1a3df0dff312cdb4ede73b41439c9e3f93';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'cont';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '316';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Container (UUID string or label) to open, API v1.3.0 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '301';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Container open by cont arg (label or UUID string) 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_cont_open_t';
        node-link = {
          node-link-id = 'structdaos__cont__open__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
info
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
poh
coh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_cont_info_t';
        node-link = {
          node-link-id = 'structdaos__cont__info__t';
        };
      }; /* node */
      node = {
        node-id    = 3;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__cont__query__t';
  cp-name   = 'daos_cont_query_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__query__t_1a7fe83fe613282d305d3aeacba805f901';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'coh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '343';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Container open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__query__t_1af78dcd92d352ca0f2e933703cbaabcf6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_cont_info_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'info';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '345';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returned container information. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__query__t_1a8786d65cd566e6cbdb43d0afeca96a46';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_prop_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'prop';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '347';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Optional, returned container properties. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '341';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Container query args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 2;
        node-label = 'daos_cont_info_t';
        node-link = {
          node-link-id = 'structdaos__cont__info__t';
        };
      }; /* node */
      node = {
        node-id    = 3;
        node-label = 'daos_prop_t';
        node-link = {
          node-link-id = 'structdaos__prop__t';
        };
        node-child = {
          child-id = '4';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
dpp_entries
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 4;
        node-label = 'daos_prop_entry';
        node-link = {
          node-link-id = 'structdaos__prop__entry';
        };
      }; /* node */
      node = {
        node-id    = 5;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'daos_cont_query_t';
        node-link = {
          node-link-id = 'structdaos__cont__query__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
info
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
prop
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '5';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
coh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__cont__rollback__t';
  cp-name   = 'daos_cont_rollback_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__rollback__t_1a7fe83fe613282d305d3aeacba805f901';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'coh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '387';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Container open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__rollback__t_1a17de810d40610c8a151488f29fa63593';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_epoch_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'epoch';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '389';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Epoch of a persistent snapshot to rollback to. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '385';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Container rollback args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_cont_rollback_t';
        node-link = {
          node-link-id = 'structdaos__cont__rollback__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
coh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__cont__set__attr__t';
  cp-name   = 'daos_cont_set_attr_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__set__attr__t_1a7fe83fe613282d305d3aeacba805f901';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'coh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '430';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Container open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__set__attr__t_1a76f11d9a0a47b94f72c2d0e77fb32240';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'n';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '432';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of attributes. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__set__attr__t_1a3e21e2c9e75716907b2090ca8fda0a60';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const char *const *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'names';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '434';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Array of \a n null-terminated attribute names. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__set__attr__t_1aba795a6c45df1876682356f8325cceb9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const void *const *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'values';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '436';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Array of \a n attribute values. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__set__attr__t_1a2068054881032369315cb04fee18b903';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const size_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'sizes';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '438';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Array of \a n elements containing the sizes of attribute values. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '428';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Container attribute set args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_cont_set_attr_t';
        node-link = {
          node-link-id = 'structdaos__cont__set__attr__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
coh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__cont__set__prop__t';
  cp-name   = 'daos_cont_set_prop_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__set__prop__t_1a7fe83fe613282d305d3aeacba805f901';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'coh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '353';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Container open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__set__prop__t_1a8786d65cd566e6cbdb43d0afeca96a46';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_prop_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'prop';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '355';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Property entries to set/update. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '351';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Container set properties args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 2;
        node-label = 'daos_prop_t';
        node-link = {
          node-link-id = 'structdaos__prop__t';
        };
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
dpp_entries
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 3;
        node-label = 'daos_prop_entry';
        node-link = {
          node-link-id = 'structdaos__prop__entry';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'daos_cont_set_prop_t';
        node-link = {
          node-link-id = 'structdaos__cont__set__prop__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
prop
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '4';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
coh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 4;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__cont__subscribe__t';
  cp-name   = 'daos_cont_subscribe_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__subscribe__t_1a7fe83fe613282d305d3aeacba805f901';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'coh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '395';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Container open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__subscribe__t_1a627c0d024a3c1a700a06c76783d0630d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_epoch_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'epoch';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '400';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '393';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Container subscribe args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_cont_subscribe_t';
        node-link = {
          node-link-id = 'structdaos__cont__subscribe__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
coh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__cont__update__acl__t';
  cp-name   = 'daos_cont_update_acl_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__update__acl__t_1a7fe83fe613282d305d3aeacba805f901';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'coh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '361';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Container open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__cont__update__acl__t_1af343c8160c72116af8dbdca3248bc103';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct daos_acl *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'acl';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '363';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
ACL containing new/updated entries. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '359';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Container ACL update args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 3;
        node-label = 'daos_acl';
        node-link = {
          node-link-id = 'structdaos__acl';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'daos_cont_update_acl_t';
        node-link = {
          node-link-id = 'structdaos__cont__update__acl__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
coh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
acl
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__epoch__range__t';
  cp-name   = 'daos_epoch_range_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__epoch__range__t_1a3778052250f76c49455012c4cebf617a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_epoch_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'epr_lo';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      sec-mem-desc-line = '120';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Low bound of the epoch range 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__epoch__range__t_1ae3ddc7ae603c83801a8c5a54436a2248';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_epoch_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'epr_hi';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      sec-mem-desc-line = '122';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
High bound of the epoch range 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
  cp-fileline  = '118';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__event';
  cp-name   = 'daos_event';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__event_1a42b440f12fca71b54ea74177bfd52ac5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ev_error';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      sec-mem-desc-line = '135';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__event_1afef7806992a191bb7841e09ca603e487';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'space';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      sec-mem-desc-line = '138';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__event_1ad2f4012685ed20ba972f0cd384bccb9e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct daos_event::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ev_private';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      sec-mem-desc-line = '139';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Internal use, please do not modify 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__event_1a6c499080c6fa3323216c13d069e75027';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ev_debug';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      sec-mem-desc-line = '141';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Used for debugging 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
  cp-fileline  = '134';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Event and event queue
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__handle__t';
  cp-name   = 'daos_handle_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__handle__t_1a503ef373b83b95a8115732a2638ebef8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'cookie';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      sec-mem-desc-line = '77';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
  cp-fileline  = '76';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Generic handle for various DAOS components like container, object, etc. 
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__iod__t';
  cp-name   = 'daos_iod_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__iod__t_1a6340f19f00fce3a8f9fb7a17ba4bf19d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_key_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'iod_name';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      sec-mem-desc-line = '198';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
akey for this iod 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__iod__t_1aebabb6389b53be0d18e053f01e04c33b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_iod_type_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'iod_type';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      sec-mem-desc-line = '210';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__iod__t_1ae3fc1824baeb4c40877357dd0ff0b12a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'iod_size';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      sec-mem-desc-line = '212';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Size of the single value or the record size of the array 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__iod__t_1a1b2ba7548e5b5f9eceb3c5eb4dc047b7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'iod_flags';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      sec-mem-desc-line = '216';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Per akey conditional. If DAOS_COND_PER_AKEY not set, this is
ignored.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__iod__t_1ad59ad386392971bace24ac8419e73350';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'iod_nr';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      sec-mem-desc-line = '221';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__iod__t_1ae15eb1a8c6bbe2db55271734d4e400a6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_recx_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'iod_recxs';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      sec-mem-desc-line = '227';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
  cp-fileline  = '196';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
An I/O descriptor is a list of extents (effectively records associated with
contiguous array indices) to update/fetch in a particular array identified by
its akey.
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_iod_t';
        node-link = {
          node-link-id = 'structdaos__iod__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
iod_recxs
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_recx_t';
        node-link = {
          node-link-id = 'structdaos__recx__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__iom__t';
  cp-name   = 'daos_iom_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__iom__t_1a717d00b3530c67811a1588b27cfcf687';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_iod_type_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'iom_type';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      sec-mem-desc-line = '252';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
type of akey value (SV or AR)
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__iom__t_1aebb48726cb6ca4eb932a93fc1b45aa68';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'iom_nr';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      sec-mem-desc-line = '256';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of elements allocated in iom_recxs.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__iom__t_1aedb20b253c5cb7672f92b0eedecf1957';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'iom_nr_out';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      sec-mem-desc-line = '263';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of extents in the mapping. If iom_nr_out is greater than
iom_nr, iom_recxs will still be populated, but it will be a
truncated list.
1 for SV.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__iom__t_1a1f71a5a52a5c439a85dbe8471c50071a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'iom_flags';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      sec-mem-desc-line = '264';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__iom__t_1a554ccebf7848b5928efe5d0be11a4299';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'iom_size';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      sec-mem-desc-line = '266';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Size of the single value or the record size 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__iom__t_1ae2aa876e34e1594e40b4b48825ab1618';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_recx_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'iom_recx_lo';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      sec-mem-desc-line = '271';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The recx with the lowest offset within the requested extents
daos_io_desc::iod_recxs
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__iom__t_1ac8a444dbd22866ca106838a9c8082bbb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_recx_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'iom_recx_hi';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      sec-mem-desc-line = '277';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The recx with the highest offset within the requested extents
daos_io_desc::iod_recxs. It is set to zero for single value,
or there is only one returned recx.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__iom__t_1ae740ccca5fa0db507d676bdb06d6a8c6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_recx_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'iom_recxs';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      sec-mem-desc-line = '281';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
All the returned recxs within the requested extents. Must be
allocated and freed by caller.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
  cp-fileline  = '250';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
A I/O map represents the physical extent mapping inside an array for a
given range of indices.
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_iom_t';
        node-link = {
          node-link-id = 'structdaos__iom__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
iom_recx_hi
iom_recx_lo
iom_recxs
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_recx_t';
        node-link = {
          node-link-id = 'structdaos__recx__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__key__desc__t';
  cp-name   = 'daos_key_desc_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__key__desc__t_1abf51ea8a799cb106f76784e1f07e603b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'kd_key_len';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      sec-mem-desc-line = '310';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Key length 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__key__desc__t_1a0045348784e873fe5b436dc5187f34e3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'kd_val_type';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      sec-mem-desc-line = '315';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Flag for akey value types: DAOS_IOD_SINGLE, DAOS_IOD_ARRAY.
It is ignored for dkey enumeration.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
  cp-fileline  = '308';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Key descriptor used for key enumeration. The actual key and checksum are
stored in a separate buffer (i.e. sgl)
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__kv__close__t';
  cp-name   = 'daos_kv_close_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__kv__close__t_1aef20019954d183ed757cd90ac3288242';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '896';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
KV open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '894';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
KV close args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_kv_close_t';
        node-link = {
          node-link-id = 'structdaos__kv__close__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
oh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__kv__destroy__t';
  cp-name   = 'daos_kv_destroy_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__kv__destroy__t_1aef20019954d183ed757cd90ac3288242';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '902';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
KV open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__kv__destroy__t_1a8df9d41740502f16e867061d9bc0c585';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'th';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '904';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Transaction open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '900';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
KV destroy args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_kv_destroy_t';
        node-link = {
          node-link-id = 'structdaos__kv__destroy__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
th
oh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__kv__get__t';
  cp-name   = 'daos_kv_get_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__kv__get__t_1aef20019954d183ed757cd90ac3288242';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '910';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
KV open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__kv__get__t_1a8df9d41740502f16e867061d9bc0c585';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'th';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '912';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Transaction open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__kv__get__t_1a899a76dc5f03f0d4ea3793c339e07ee9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'flags';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '914';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Operation flags. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__kv__get__t_1acd3d88da3c0e0313c3645ff34f62f542';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'key';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '916';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Key. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__kv__get__t_1a11844455a0ac2f84beff06d9c6fe88d0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_size_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'buf_size';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '918';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Value buffer size. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__kv__get__t_1a5bc5fa69bee375df074734a2c4858604';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'buf';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '920';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Value buffer. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '908';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
KV get args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_kv_get_t';
        node-link = {
          node-link-id = 'structdaos__kv__get__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
th
oh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__kv__list__t';
  cp-name   = 'daos_kv_list_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__kv__list__t_1aef20019954d183ed757cd90ac3288242';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '954';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
KV open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__kv__list__t_1a8df9d41740502f16e867061d9bc0c585';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'th';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '956';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Transaction open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__kv__list__t_1a1c52a0f8b44ef73e6d5b670a1165b0db';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'nr';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '961';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__kv__list__t_1ad18e6de859bab889577e42129c68217c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_key_desc_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'kds';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '963';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
key descriptors. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__kv__list__t_1a170878ca472dc37d01dc1a98038b4a1e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
d_sg_list_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'sgl';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '965';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
memory descriptors. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__kv__list__t_1ac376c63cd592209e79c0b58caa5f105f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_anchor_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'anchor';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '967';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Hash anchor for the next call. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '952';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
KV list args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 2;
        node-label = 'daos_anchor_t';
        node-link = {
          node-link-id = 'structdaos__anchor__t';
        };
      }; /* node */
      node = {
        node-id    = 4;
        node-label = 'daos_key_desc_t';
        node-link = {
          node-link-id = 'structdaos__key__desc__t';
        };
      }; /* node */
      node = {
        node-id    = 3;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'daos_kv_list_t';
        node-link = {
          node-link-id = 'structdaos__kv__list__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
anchor
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
th
oh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '4';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
kds
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__kv__open__t';
  cp-name   = 'daos_kv_open_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__kv__open__t_1a7fe83fe613282d305d3aeacba805f901';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'coh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '884';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Container open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__kv__open__t_1aaa43d8da43a7c933a007abe42e86aa1c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_obj_id_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oid';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '886';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
KV ID, 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__kv__open__t_1ac1b4d694fc07a39e06900e82872aac7f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mode';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '888';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Open mode. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__kv__open__t_1abf0833e309cc0c2b147aa35b54a02ad7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '890';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returned KV open handle 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '882';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
KV open args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_kv_open_t';
        node-link = {
          node-link-id = 'structdaos__kv__open__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
oid
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
coh
oh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_obj_id_t';
        node-link = {
          node-link-id = 'structdaos__obj__id__t';
        };
      }; /* node */
      node = {
        node-id    = 3;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__kv__put__t';
  cp-name   = 'daos_kv_put_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__kv__put__t_1aef20019954d183ed757cd90ac3288242';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '926';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
KV open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__kv__put__t_1a8df9d41740502f16e867061d9bc0c585';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'th';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '928';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Transaction open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__kv__put__t_1a899a76dc5f03f0d4ea3793c339e07ee9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'flags';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '930';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Operation flags. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__kv__put__t_1acd3d88da3c0e0313c3645ff34f62f542';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'key';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '932';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Key. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__kv__put__t_1af690a5e43f182f75d4fcf438c0c826ef';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'buf_size';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '934';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Value size. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__kv__put__t_1a0ccd7535cf45ea4a389b855324c47142';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const void *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'buf';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '936';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Value buffer. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '924';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
KV put args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_kv_put_t';
        node-link = {
          node-link-id = 'structdaos__kv__put__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
th
oh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__kv__remove__t';
  cp-name   = 'daos_kv_remove_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__kv__remove__t_1aef20019954d183ed757cd90ac3288242';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '942';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
KV open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__kv__remove__t_1a8df9d41740502f16e867061d9bc0c585';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'th';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '944';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Transaction open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__kv__remove__t_1a899a76dc5f03f0d4ea3793c339e07ee9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'flags';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '946';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Operation flags. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__kv__remove__t_1acd3d88da3c0e0313c3645ff34f62f542';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'key';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '948';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Key. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '940';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
KV remove args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_kv_remove_t';
        node-link = {
          node-link-id = 'structdaos__kv__remove__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
th
oh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__mgmt__get__bs__state__t';
  cp-name   = 'daos_mgmt_get_bs_state_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__mgmt__get__bs__state__t_1aafb4e47bc006722deb58fd5e17531de3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'grp';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '274';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__mgmt__get__bs__state__t_1a0c9cfc131b27ae3b98b1533bba4c58ef';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uuid_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'uuid';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '275';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__mgmt__get__bs__state__t_1ace50bce9d6e7ed2958418778a6b1711f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'state';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '276';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '273';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Blobstore state query args 
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__obj__attr';
  cp-name   = 'daos_obj_attr';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__attr_1a8be2e844a3022a0520454382d51bae6b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
d_rank_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oa_rank';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      sec-mem-desc-line = '122';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Optional, affinity target for the object 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__attr_1a6a20e977249f05bd3a5be752ef073f33';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct daos_oclass_attr *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oa_oa';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      sec-mem-desc-line = '124';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Optional, class attributes of object with private class 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
  cp-fileline  = '120';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Object attributes (metadata).
\a oa_class and \a oa_oa are mutually exclusive.
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_obj_attr';
        node-link = {
          node-link-id = 'structdaos__obj__attr';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
oa_oa
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_oclass_attr';
        node-link = {
          node-link-id = 'structdaos__oclass__attr';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__obj__close__t';
  cp-name   = 'daos_obj_close_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__close__t_1aef20019954d183ed757cd90ac3288242';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '589';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Object open handle 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '587';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Object close args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'daos_obj_close_t';
        node-link = {
          node-link-id = 'structdaos__obj__close__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
oh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__obj__id__t';
  cp-name   = 'daos_obj_id_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__id__t_1a7d5f0296d3bb7765c8d9308942054033';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'lo';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      sec-mem-desc-line = '206';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__id__t_1a459bcbd0cf45328ef2754c4dab8b8b32';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'hi';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      sec-mem-desc-line = '207';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
  cp-fileline  = '205';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
ID of an object, 128 bits
The high 32-bit of daos_obj_id_t::hi are reserved for DAOS, the rest is
provided by the user and assumed to be unique inside a container.

See daos_obj.h for more details
It is put here because it's almost used by everyone.
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__obj__list__class__t';
  cp-name   = 'daos_obj_list_class_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__list__class__t_1a7fe83fe613282d305d3aeacba805f901';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'coh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '567';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Container open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__list__class__t_1a41d2211e3c5ffcb51bcf8fcd7cf5c09d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct daos_oclass_list *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'clist';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '569';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sink buffer for returned class list. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__list__class__t_1ac376c63cd592209e79c0b58caa5f105f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_anchor_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'anchor';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '571';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Hash anchor for the next call. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '565';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Object class list args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_obj_list_class_t';
        node-link = {
          node-link-id = 'structdaos__obj__list__class__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
anchor
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
coh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '4';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
clist
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_anchor_t';
        node-link = {
          node-link-id = 'structdaos__anchor__t';
        };
      }; /* node */
      node = {
        node-id    = 4;
        node-label = 'daos_oclass_list';
        node-link = {
          node-link-id = 'structdaos__oclass__list';
        };
        node-child = {
          child-id = '5';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
cl_cattrs
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 5;
        node-label = 'daos_oclass_attr';
        node-link = {
          node-link-id = 'structdaos__oclass__attr';
        };
      }; /* node */
      node = {
        node-id    = 3;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__obj__list__t';
  cp-name   = 'daos_obj_list_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__list__t_1aef20019954d183ed757cd90ac3288242';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '697';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Object open handle 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__list__t_1a8df9d41740502f16e867061d9bc0c585';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'th';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '699';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Transaction open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__list__t_1ab089b7883c4c375bdcdd7e4f7fada640';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_key_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dkey';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '701';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Distribution key. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__list__t_1ab032fc0d4a38d84ac9d0274512a2cf60';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_key_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'akey';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '703';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Attribute key. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__list__t_1a1c52a0f8b44ef73e6d5b670a1165b0db';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'nr';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '705';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
number of dkeys/akeys/kds entries 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__list__t_1ad18e6de859bab889577e42129c68217c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_key_desc_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'kds';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '707';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Key descriptors holding enumerated keys. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__list__t_1a170878ca472dc37d01dc1a98038b4a1e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
d_sg_list_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'sgl';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '709';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Scatter gather list for memory buffer. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__list__t_1a388912d6ab41a7faa2329bbe2ecd7c1a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_size_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'size';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '711';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
total buf size for sgl buf, in case it uses bulk transfer. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__list__t_1ac11b05f1987a9e2131617855453d1bb1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_iod_type_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'type';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '713';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
type of value. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__list__t_1a54d7bf469465b56d0ba9387586b74974';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_recx_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'recxs';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '715';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
record extents. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__list__t_1ab2a02b83b2477243a616d05ac4938705';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_epoch_range_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'eprs';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '717';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
epoch ranges 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__list__t_1ac376c63cd592209e79c0b58caa5f105f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_anchor_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'anchor';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '724';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__list__t_1a598f6fb316a8bc3d69f1b428e500284e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_anchor_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dkey_anchor';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '726';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
anchor for list_dkey. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__list__t_1add7cac4a39ef271f4190ae8b1c2d899f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_anchor_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'akey_anchor';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '728';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
anchor for list_akey. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__list__t_1a54f908cf4722e1872884f4a2567be290';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'versions';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '730';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
versions. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__list__t_1a2b0efd23c5b18e41e7612f378834db3b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
d_iov_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'csum';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '734';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Serialized checksum info for enumerated keys and data in sgl.
(for internal use only)
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__list__t_1a3f89e2bd7740e3dab2fcb22f339f9e3e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'incr_order';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '736';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
order. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '695';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Object list args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 5;
        node-label = 'daos_epoch_range_t';
        node-link = {
          node-link-id = 'structdaos__epoch__range__t';
        };
      }; /* node */
      node = {
        node-id    = 3;
        node-label = 'daos_anchor_t';
        node-link = {
          node-link-id = 'structdaos__anchor__t';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'daos_obj_list_t';
        node-link = {
          node-link-id = 'structdaos__obj__list__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
recxs
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
akey_anchor
anchor
dkey_anchor
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '4';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
th
oh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '5';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
eprs
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '6';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
kds
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 6;
        node-label = 'daos_key_desc_t';
        node-link = {
          node-link-id = 'structdaos__key__desc__t';
        };
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_recx_t';
        node-link = {
          node-link-id = 'structdaos__recx__t';
        };
      }; /* node */
      node = {
        node-id    = 4;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__obj__open__t';
  cp-name   = 'daos_obj_open_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__open__t_1a7fe83fe613282d305d3aeacba805f901';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'coh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '577';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Container open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__open__t_1aaa43d8da43a7c933a007abe42e86aa1c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_obj_id_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oid';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '579';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Object ID. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__open__t_1ac1b4d694fc07a39e06900e82872aac7f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mode';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '581';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Object open mode. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__open__t_1abf0833e309cc0c2b147aa35b54a02ad7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '583';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returned object handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '575';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Object open args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 2;
        node-label = 'daos_obj_id_t';
        node-link = {
          node-link-id = 'structdaos__obj__id__t';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'daos_obj_open_t';
        node-link = {
          node-link-id = 'structdaos__obj__open__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
oid
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
coh
oh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 3;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__obj__punch__t';
  cp-name   = 'daos_obj_punch_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__punch__t_1a8df9d41740502f16e867061d9bc0c585';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'th';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '602';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Transaction open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__punch__t_1aef20019954d183ed757cd90ac3288242';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '604';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Object open handle 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__punch__t_1ab089b7883c4c375bdcdd7e4f7fada640';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_key_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dkey';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '606';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Distribution Key. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__punch__t_1abc3026f5d7aeb0ad4f2f5bbf4996a651';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_key_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'akeys';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '608';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Array of attribute keys. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__punch__t_1a899a76dc5f03f0d4ea3793c339e07ee9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'flags';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '610';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Operation flags. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__punch__t_1a0df4720076d1674bb7e55ec5c4dcc6ed';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'akey_nr';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '612';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of akeys in \a akeys. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '600';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_obj_punch_t';
        node-link = {
          node-link-id = 'structdaos__obj__punch__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
th
oh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__obj__query__class__t';
  cp-name   = 'daos_obj_query_class_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__query__class__t_1a7fe83fe613282d305d3aeacba805f901';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'coh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '557';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Container open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__query__class__t_1a0a0851242238193058e72905887b5666';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_oclass_id_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'cid';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '559';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Object class ID. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__query__class__t_1ada9c80821116446255b52e7ca22b01ba';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct daos_oclass_attr *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'cattr';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '561';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Object class attributes. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '555';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Object class query args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_obj_query_class_t';
        node-link = {
          node-link-id = 'structdaos__obj__query__class__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
coh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
cattr
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 3;
        node-label = 'daos_oclass_attr';
        node-link = {
          node-link-id = 'structdaos__oclass__attr';
        };
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__obj__query__key__t';
  cp-name   = 'daos_obj_query_key_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__query__key__t_1aef20019954d183ed757cd90ac3288242';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '630';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Object open handle 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__query__key__t_1a8df9d41740502f16e867061d9bc0c585';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'th';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '632';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Transaction open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__query__key__t_1ab089b7883c4c375bdcdd7e4f7fada640';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_key_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dkey';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '637';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__query__key__t_1ab032fc0d4a38d84ac9d0274512a2cf60';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_key_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'akey';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '642';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__query__key__t_1a9922106dc181f822c487e65d4aa40662';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_recx_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'recx';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '644';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
max or min offset in key, and size of the extent at the offset. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__query__key__t_1a899a76dc5f03f0d4ea3793c339e07ee9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'flags';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '646';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Operation flags. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '628';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Object key query args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_obj_query_key_t';
        node-link = {
          node-link-id = 'structdaos__obj__query__key__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
recx
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
th
oh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_recx_t';
        node-link = {
          node-link-id = 'structdaos__recx__t';
        };
      }; /* node */
      node = {
        node-id    = 3;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__obj__query__t';
  cp-name   = 'daos_obj_query_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__query__t_1aef20019954d183ed757cd90ac3288242';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '618';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Object open handle 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__query__t_1a8df9d41740502f16e867061d9bc0c585';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'th';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '620';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Transaction open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__query__t_1a4b810c4909bb6175733c8c46f9440d0a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct daos_obj_attr *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oa';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '622';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returned object attributes. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__query__t_1a85bbd106accde080979d133d4dbb8b08';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
d_rank_list_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ranks';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '624';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Ordered list of ranks where the object is stored. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '616';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Object query args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 2;
        node-label = 'daos_obj_attr';
        node-link = {
          node-link-id = 'structdaos__obj__attr';
        };
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
oa_oa
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'daos_obj_query_t';
        node-link = {
          node-link-id = 'structdaos__obj__query__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
oa
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '4';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
th
oh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 3;
        node-label = 'daos_oclass_attr';
        node-link = {
          node-link-id = 'structdaos__oclass__attr';
        };
      }; /* node */
      node = {
        node-id    = 4;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__obj__register__class__t';
  cp-name   = 'daos_obj_register_class_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__register__class__t_1a7fe83fe613282d305d3aeacba805f901';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'coh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '547';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Container open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__register__class__t_1a0a0851242238193058e72905887b5666';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_oclass_id_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'cid';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '549';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Object class ID. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__register__class__t_1ada9c80821116446255b52e7ca22b01ba';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct daos_oclass_attr *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'cattr';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '551';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Object class attributes. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '545';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Object class register args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_obj_register_class_t';
        node-link = {
          node-link-id = 'structdaos__obj__register__class__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
coh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
cattr
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 3;
        node-label = 'daos_oclass_attr';
        node-link = {
          node-link-id = 'structdaos__oclass__attr';
        };
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__obj__rw__t';
  cp-name   = 'daos_obj_rw_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__rw__t_1a8df9d41740502f16e867061d9bc0c585';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'th';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '652';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Transaction open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__rw__t_1aef20019954d183ed757cd90ac3288242';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '654';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Object open handle 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__rw__t_1a899a76dc5f03f0d4ea3793c339e07ee9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'flags';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '656';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
API flags. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__rw__t_1ab089b7883c4c375bdcdd7e4f7fada640';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_key_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dkey';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '658';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Distribution Key. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__rw__t_1a23c6805f762bdf3d76bc0c9f17280387';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'nr';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '660';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of elements in \a iods and \a sgls. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__rw__t_1aed6f76317adc329b4113cbaf41dd679f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'extra_flags';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '662';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Internal flags. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__rw__t_1a0dbb8f12456ae53bb640697932b0a55e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_iod_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'iods';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '664';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
IO descriptor describing IO layout in the object. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__rw__t_1af5adc08952a4589da3b83871c54f8a72';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
d_sg_list_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'sgls';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '666';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Scatter / gather list for a memory descriptor. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__rw__t_1a9c25c6b87a1716bb85a40a0387f5219a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_iom_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ioms';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '668';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
IO Map - only valid for fetch. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__rw__t_1a6dea042256fcdbf3fd6e52be995678bd';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'extra_arg';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '670';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
extra arguments, for example obj_ec_fail_info for DIOF_EC_RECOV 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__rw__t_1a4262a8cfb8380358cc8af00d85101b90';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
d_iov_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'csum_iov';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '674';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Pre-allocated buffer to pack checksums into (Optional, intended for
internal use only
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '650';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Object fetch/update args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 2;
        node-label = 'daos_iod_t';
        node-link = {
          node-link-id = 'structdaos__iod__t';
        };
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
iod_recxs
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 5;
        node-label = 'daos_iom_t';
        node-link = {
          node-link-id = 'structdaos__iom__t';
        };
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
iom_recx_hi
iom_recx_lo
iom_recxs
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'daos_obj_rw_t';
        node-link = {
          node-link-id = 'structdaos__obj__rw__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
iods
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '4';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
th
oh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '5';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
ioms
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 3;
        node-label = 'daos_recx_t';
        node-link = {
          node-link-id = 'structdaos__recx__t';
        };
      }; /* node */
      node = {
        node-id    = 4;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__obj__sync__args';
  cp-name   = 'daos_obj_sync_args';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__sync__args_1aef20019954d183ed757cd90ac3288242';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'oh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '685';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Object open handle 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__sync__args_1a17de810d40610c8a151488f29fa63593';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_epoch_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'epoch';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '687';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
epoch. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__sync__args_1afd4dba31ae8bd29af4602b518d0ab400';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_epoch_t **
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'epochs_p';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '689';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
epochp. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__obj__sync__args_1a6221fbfc5193b1c86f07e4d58ce1b87d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'nr';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '691';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
nr. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '683';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Object sync args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_obj_sync_args';
        node-link = {
          node-link-id = 'structdaos__obj__sync__args';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
oh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__oclass__attr';
  cp-name   = 'daos_oclass_attr';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__oclass__attr_1a1787c3ebe216f351cc5e5657df4ed314';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
enum daos_obj_schema
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ca_schema';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
      sec-mem-desc-line = '717';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
reserved: object placement schema, used by placement algorithm 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__oclass__attr_1a5c04728f0f26559cbbd6e6f451875e36';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
enum daos_obj_resil
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ca_resil';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
      sec-mem-desc-line = '717';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Resilience method, replication or erasure code 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__oclass__attr_1a6912a44f91a6a741f46917baa388108a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ca_resil_degree';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
      sec-mem-desc-line = '565';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
reserved 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__oclass__attr_1a17e6e44a36d3526b3d40c17410603e8c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ca_grp_nr';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
      sec-mem-desc-line = '567';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Initial # redundancy group, unnecessary for some schemas 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__oclass__attr_1aea8e66a3714bc82fb0ad724c71467285';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'r_proto';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
      sec-mem-desc-line = '572';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Protocol of replicating, reserved 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__oclass__attr_1a2596b44c5152c9a7a4005a43886b0590';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'r_num';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
      sec-mem-desc-line = '574';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of replicas 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__oclass__attr_1a8c075d16ab2e3d15a9145ab4d09b24aa';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct daos_oclass_attr::__anonymous__::daos_rp_attr
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rp';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
      sec-mem-desc-line = '575';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__oclass__attr_1a5cc770c0b4ba4f4dc8a01d554984aca2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned short
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'e_k';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
      sec-mem-desc-line = '580';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
number of data cells (k) 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__oclass__attr_1a270236fe33067544b3302be503bb44df';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned short
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'e_p';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
      sec-mem-desc-line = '582';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
number of parity cells (p) 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__oclass__attr_1ad2bee4b5d002a0caa45e354df58aacfa';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'e_len';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
      sec-mem-desc-line = '584';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
length of each block of data (cell) 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__oclass__attr_1ab4385be38f8a364661b752d985edc3c7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct daos_oclass_attr::__anonymous__::daos_ec_attr
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ec';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
      sec-mem-desc-line = '585';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__oclass__attr_1a89d1859a797591e7d2bcd9bb5be4c8d9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
union daos_oclass_attr::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'u';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
      sec-mem-desc-line = '586';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
  cp-fileline  = '559';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Object class attributes 
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__oclass__list';
  cp-name   = 'daos_oclass_list';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__oclass__list_1a07b1e513e7b205f6fe1a3439604da2c2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'cl_nr';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
      sec-mem-desc-line = '600';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
List length, actual buffer size 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__oclass__list_1a6e14bb7ae93ef111f956cda8200a6c06';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'cl_nr_out';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
      sec-mem-desc-line = '602';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
List length, returned buffer size 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__oclass__list_1a7b46f661d8c0721149e5e7e9f12db845';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_oclass_id_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'cl_cids';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
      sec-mem-desc-line = '604';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Actual list of class IDs 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__oclass__list_1a308c28b277e3fdffadc2a423425fb1d1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct daos_oclass_attr *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'cl_cattrs';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
      sec-mem-desc-line = '606';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Attributes of each listed class, optional 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
  cp-fileline  = '598';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
List of object classes, used for class enumeration 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_oclass_list';
        node-link = {
          node-link-id = 'structdaos__oclass__list';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
cl_cattrs
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_oclass_attr';
        node-link = {
          node-link-id = 'structdaos__oclass__attr';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__oid__list';
  cp-name   = 'daos_oid_list';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__oid__list_1a0df42499795b9eadae234482031aa8b0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ol_nr';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      sec-mem-desc-line = '143';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Input/output number of oids 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__oid__list_1a31ef6443b9406bc40ec10bab1d1e6cdd';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ol_nr_out';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      sec-mem-desc-line = '144';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__oid__list_1ac1be02c7e0a58408259abb75ea2f2b24';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_obj_id_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ol_oids';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      sec-mem-desc-line = '146';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
OID buffer 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
  cp-fileline  = '141';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 2;
        node-label = 'daos_obj_id_t';
        node-link = {
          node-link-id = 'structdaos__obj__id__t';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'daos_oid_list';
        node-link = {
          node-link-id = 'structdaos__oid__list';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
ol_oids
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__pool__connect__t';
  cp-name   = 'daos_pool_connect_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__connect__t_1a0c9cfc131b27ae3b98b1533bba4c58ef';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uuid_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'uuid';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '147';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Deprecated, please pass the Pool label or UUID string via the pool
arg at the end of this structure
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__connect__t_1aafb4e47bc006722deb58fd5e17531de3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'grp';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '149';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Process set name of the DAOS servers managing the pool. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__connect__t_1ac92588540e8c1d014a08cd8a45462b19';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'flags';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '151';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Connect mode represented by the DAOS_PC_ bits. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__connect__t_1ab12b4c1b5d0fa473ea78d3bd89131589';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'poh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '153';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returned open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__connect__t_1ac8da9aadb56674709f5cf11ea3c24507';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_pool_info_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'info';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '155';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Optional, returned pool information. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__connect__t_1a8cae7709f27921f9baa6a1437a59581f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'pool';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '157';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Pool's label or UUID string to connect to, API v1.3.0 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '142';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
pool connect by UUID args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_pool_connect_t';
        node-link = {
          node-link-id = 'structdaos__pool__connect__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
poh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
info
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 5;
        node-label = 'daos_pool_space';
        node-link = {
          node-link-id = 'structdaos__pool__space';
        };
        node-child = {
          child-id = '6';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
ps_space
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 3;
        node-label = 'daos_pool_info_t';
        node-link = {
          node-link-id = 'structdaos__pool__info__t';
        };
        node-child = {
          child-id = '4';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
pi_rebuild_st
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '5';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
pi_space
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 6;
        node-label = 'daos_space';
        node-link = {
          node-link-id = 'structdaos__space';
        };
      }; /* node */
      node = {
        node-id    = 4;
        node-label = 'daos_rebuild_status';
        node-link = {
          node-link-id = 'structdaos__rebuild__status';
        };
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__pool__cont__info';
  cp-name   = 'daos_pool_cont_info';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__cont__info_1abf17bc72d1416da8d9a75fbc86e86280';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uuid_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'pci_uuid';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '166';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__cont__info_1ab1eb5e73eb63c4954762d2fbf78c35bf';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'pci_label';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '167';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
  cp-fileline  = '165';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
DAOS pool container information 
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__pool__del__attr__t';
  cp-name   = 'daos_pool_del_attr_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__del__attr__t_1af65e0a5ef9986001524f96e09ae666a3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'poh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '253';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Pool open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__del__attr__t_1a76f11d9a0a47b94f72c2d0e77fb32240';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'n';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '255';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of attributes. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__del__attr__t_1a3e21e2c9e75716907b2090ca8fda0a60';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const char *const *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'names';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '257';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Array of \a n null-terminated attribute names. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '251';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
pool del attributes args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'daos_pool_del_attr_t';
        node-link = {
          node-link-id = 'structdaos__pool__del__attr__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
poh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__pool__disconnect__t';
  cp-name   = 'daos_pool_disconnect_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__disconnect__t_1af65e0a5ef9986001524f96e09ae666a3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'poh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '163';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Pool open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '161';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
pool disconnect args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_pool_disconnect_t';
        node-link = {
          node-link-id = 'structdaos__pool__disconnect__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
poh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__pool__get__attr__t';
  cp-name   = 'daos_pool_get_attr_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__get__attr__t_1af65e0a5ef9986001524f96e09ae666a3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'poh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '225';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Pool open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__get__attr__t_1a76f11d9a0a47b94f72c2d0e77fb32240';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'n';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '227';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of attributes. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__get__attr__t_1a3e21e2c9e75716907b2090ca8fda0a60';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const char *const *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'names';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '229';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Array of \a n null-terminated attribute names. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__get__attr__t_1ac31e63060224a2873fe54edf02b58c2a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void *const *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'values';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '231';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Array of \a n buffers to store attribute values. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__get__attr__t_1a400fb89b01337e8e824c465ff6fed3c5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
size_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'sizes';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '233';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
[in]: Array of \a n buf sizes. [out]: Array of actual sizes. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '223';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
pool get attributes args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_pool_get_attr_t';
        node-link = {
          node-link-id = 'structdaos__pool__get__attr__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
poh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__pool__info__t';
  cp-name   = 'daos_pool_info_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__info__t_1a59e54b9261b587cedd76f8f79c313f34';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uuid_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'pi_uuid';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '145';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Pool UUID 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__info__t_1afc7f611bcdcf18ba183c009e472f4ebc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'pi_ntargets';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '147';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of targets 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__info__t_1a0cdbd513abacc6447da6a0556f4a423a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'pi_nnodes';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '149';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of nodes 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__info__t_1ae922e563f62764a70663fe1ad1e47861';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'pi_ndisabled';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '151';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of deactivated targets 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__info__t_1a67ee77d992f0f2be597eaa73739a44eb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'pi_map_ver';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '153';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Latest pool map version 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__info__t_1a4ced6f2dbd149346d3b6bac2d46d9688';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'pi_leader';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '155';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
current raft leader 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__info__t_1a7e2d4a6399f6a6c0173dffc941ea01f1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'pi_bits';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '157';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
pool info bits, see daos_pool_info_bit 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__info__t_1a52a790f75a9c4d388c635d02ca7e516d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct daos_pool_space
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'pi_space';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '157';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Space usage 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__info__t_1ab2cf5c5b165c32250af2f3e60b0074dc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct daos_rebuild_status
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'pi_rebuild_st';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '157';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
rebuild status 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
  cp-fileline  = '143';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Storage pool
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 3;
        node-label = 'daos_pool_space';
        node-link = {
          node-link-id = 'structdaos__pool__space';
        };
        node-child = {
          child-id = '4';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
ps_space
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'daos_pool_info_t';
        node-link = {
          node-link-id = 'structdaos__pool__info__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
pi_rebuild_st
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
pi_space
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 4;
        node-label = 'daos_space';
        node-link = {
          node-link-id = 'structdaos__space';
        };
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_rebuild_status';
        node-link = {
          node-link-id = 'structdaos__rebuild__status';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__pool__list__attr__t';
  cp-name   = 'daos_pool_list_attr_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__list__attr__t_1af65e0a5ef9986001524f96e09ae666a3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'poh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '215';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Pool open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__list__attr__t_1a1fe855c208bc17a51a4d34fefdb2d5b1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'buf';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '217';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Buffer containing concatenation of all attribute names. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__list__attr__t_1ae3c15c00c8f7ae14ae18501067cb5ac4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
size_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'size';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '219';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
[in]: Buffer size. [out]: Aggregate size of all attribute names 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '213';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
pool list attributes args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_pool_list_attr_t';
        node-link = {
          node-link-id = 'structdaos__pool__list__attr__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
poh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__pool__list__cont__t';
  cp-name   = 'daos_pool_list_cont_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__list__cont__t_1af65e0a5ef9986001524f96e09ae666a3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'poh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '205';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Pool open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__list__cont__t_1ad3b6545f4de5c48203bb8dc7e1803c49';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_size_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ncont';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '207';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
[in] length of \a cont_buf. [out] num of containers in the pool. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__list__cont__t_1a0e990ef4de3168c3cc6cab0dd39112c3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct daos_pool_cont_info *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'cont_buf';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '209';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Array of container structures. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '203';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
pool container list args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_pool_list_cont_t';
        node-link = {
          node-link-id = 'structdaos__pool__list__cont__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
cont_buf
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
poh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_pool_cont_info';
        node-link = {
          node-link-id = 'structdaos__pool__cont__info';
        };
      }; /* node */
      node = {
        node-id    = 3;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__pool__query__t';
  cp-name   = 'daos_pool_query_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__query__t_1af65e0a5ef9986001524f96e09ae666a3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'poh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '181';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Pool open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__query__t_1a9f55acd63b21c61714ce641623f9b2d2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
d_rank_list_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'tgts';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '183';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Optional, returned storage targets in this pool. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__query__t_1ac8da9aadb56674709f5cf11ea3c24507';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_pool_info_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'info';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '185';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Optional, returned pool information. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__query__t_1a8786d65cd566e6cbdb43d0afeca96a46';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_prop_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'prop';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '187';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Optional, returned pool properties. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '179';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
pool query args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 7;
        node-label = 'daos_pool_space';
        node-link = {
          node-link-id = 'structdaos__pool__space';
        };
        node-child = {
          child-id = '8';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
ps_space
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 5;
        node-label = 'daos_pool_info_t';
        node-link = {
          node-link-id = 'structdaos__pool__info__t';
        };
        node-child = {
          child-id = '6';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
pi_rebuild_st
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '7';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
pi_space
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_prop_t';
        node-link = {
          node-link-id = 'structdaos__prop__t';
        };
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
dpp_entries
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 8;
        node-label = 'daos_space';
        node-link = {
          node-link-id = 'structdaos__space';
        };
      }; /* node */
      node = {
        node-id    = 3;
        node-label = 'daos_prop_entry';
        node-link = {
          node-link-id = 'structdaos__prop__entry';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'daos_pool_query_t';
        node-link = {
          node-link-id = 'structdaos__pool__query__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
prop
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '4';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
poh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '5';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
info
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 6;
        node-label = 'daos_rebuild_status';
        node-link = {
          node-link-id = 'structdaos__rebuild__status';
        };
      }; /* node */
      node = {
        node-id    = 4;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__pool__query__target__t';
  cp-name   = 'daos_pool_query_target_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__query__target__t_1af65e0a5ef9986001524f96e09ae666a3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'poh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '193';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Pool open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__query__target__t_1ac0191a954af3d36b86e402530b70bbc8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'tgt_idx';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '195';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Single targets to query. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__query__target__t_1a725668728cdf219a18169482d866dbd7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
d_rank_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rank';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '197';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Rank of target to query. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__query__target__t_1a51366d52415efcb89e1f19cd28974a5d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_target_info_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'info';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '199';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returned storage information of target. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '191';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
pool target query args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 2;
        node-label = 'daos_target_info_t';
        node-link = {
          node-link-id = 'structdaos__target__info__t';
        };
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
ta_space
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '4';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
ta_perf
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 3;
        node-label = 'daos_space';
        node-link = {
          node-link-id = 'structdaos__space';
        };
      }; /* node */
      node = {
        node-id    = 4;
        node-label = 'daos_target_perf_t';
        node-link = {
          node-link-id = 'structdaos__target__perf__t';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'daos_pool_query_target_t';
        node-link = {
          node-link-id = 'structdaos__pool__query__target__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
info
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '5';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
poh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 5;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__pool__replicas__t';
  cp-name   = 'daos_pool_replicas_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__replicas__t_1a0c9cfc131b27ae3b98b1533bba4c58ef';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uuid_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'uuid';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '263';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
UUID of the pool. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__replicas__t_1a7142af3238843b1b28f5f93888d9b931';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'group';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '265';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Name of DAOS server process set managing the service. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__replicas__t_1aa2e2a20f76f0373beb2a556233cbaf5f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
d_rank_list_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'targets';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '267';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Ranks of the replicas to be added/removed. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__replicas__t_1a4e01f9ed4f764d7c92ecda734176f900';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
d_rank_list_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'failed';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '269';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Optional, list of ranks which could not be added/removed. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '261';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
pool add/remove replicas args 
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__pool__set__attr__t';
  cp-name   = 'daos_pool_set_attr_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__set__attr__t_1af65e0a5ef9986001524f96e09ae666a3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'poh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '239';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Pool open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__set__attr__t_1a76f11d9a0a47b94f72c2d0e77fb32240';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'n';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '241';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of attributes. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__set__attr__t_1a3e21e2c9e75716907b2090ca8fda0a60';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const char *const *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'names';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '243';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Array of \a n null-terminated attribute names. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__set__attr__t_1aba795a6c45df1876682356f8325cceb9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const void *const *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'values';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '245';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Array of \a n attribute values. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__set__attr__t_1a2068054881032369315cb04fee18b903';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const size_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'sizes';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '247';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Array of \a n elements containing the sizes of attribute values. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '237';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
pool set attributes args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_pool_set_attr_t';
        node-link = {
          node-link-id = 'structdaos__pool__set__attr__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
poh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__pool__space';
  cp-name   = 'daos_pool_space';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__space_1a3024e789e265da3f1add2f9d682674f2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct daos_space
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ps_space';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '74';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__space_1afcff047cd901677ad1f9b12809dc6ed7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ps_free_min';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '83';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__space_1a3397df7ae7b97004b3c80af6eb378f81';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ps_free_max';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '85';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__space_1ade887c361ed348a0399cbcd84bb047fe';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ps_free_mean';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '87';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__space_1aae50b455b85a84245ba2693fbb475065';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ps_ntargets';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '89';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__space_1a8e56e5445fc85be501df23d83a84cca4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ps_padding';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '90';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
  cp-fileline  = '79';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Pool space usage information 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_pool_space';
        node-link = {
          node-link-id = 'structdaos__pool__space';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
ps_space
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_space';
        node-link = {
          node-link-id = 'structdaos__space';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__pool__stop__svc__t';
  cp-name   = 'daos_pool_stop_svc_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__stop__svc__t_1af65e0a5ef9986001524f96e09ae666a3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'poh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '282';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Pool open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '280';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
pool service stop args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_pool_stop_svc_t';
        node-link = {
          node-link-id = 'structdaos__pool__stop__svc__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
poh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__pool__update__t';
  cp-name   = 'daos_pool_update_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__update__t_1a0c9cfc131b27ae3b98b1533bba4c58ef';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uuid_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'uuid';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '169';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
UUID of the pool. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__update__t_1aafb4e47bc006722deb58fd5e17531de3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'grp';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '171';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Process set name of the DAOS servers managing the pool 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__update__t_1afcc363aa1e5e2300d19ecfd1c88f3f44';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
d_rank_list_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'svc';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '173';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Pool service replica ranks (used by server only). 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__pool__update__t_1a8c5344fc1f3de1c0a590a576263f8559';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct d_tgt_list *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'tgts';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '175';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Target array 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '167';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
pool target update (add/exclude) args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_pool_update_t';
        node-link = {
          node-link-id = 'structdaos__pool__update__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
tgts
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'd_tgt_list';
        node-link = {
          node-link-id = 'structd__tgt__list';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__prop__co__roots';
  cp-name   = 'daos_prop_co_roots';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__prop__co__roots_1a2f3f2f218770b1c36eeda4ee0e041938';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_obj_id_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'cr_oids';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      sec-mem-desc-line = '210';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
  cp-fileline  = '209';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
first citizen objects of a container, stored as container property 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_prop_co_roots';
        node-link = {
          node-link-id = 'structdaos__prop__co__roots';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
cr_oids
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_obj_id_t';
        node-link = {
          node-link-id = 'structdaos__obj__id__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__prop__entry';
  cp-name   = 'daos_prop_entry';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__prop__entry_1afea8f463f4c91154d5bedb4ed072ed12';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dpe_type';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      sec-mem-desc-line = '348';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
property type, see enum daos_pool_props/daos_cont_props 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__prop__entry_1a98c2fd18400615b4e04f102eebedbabf';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dpe_reserv';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      sec-mem-desc-line = '350';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
reserved for future usage (for 64 bits alignment now) 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__prop__entry_1a86ac14a53b68554d5e4a06caedafadd4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dpe_val';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      sec-mem-desc-line = '356';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__prop__entry_1ae04adb4854b8f47d5110b395d4e7038a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
d_string_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dpe_str';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      sec-mem-desc-line = '357';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__prop__entry_1a8bcb9e7710f30da0fa828f55b9ca1188';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dpe_val_ptr';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      sec-mem-desc-line = '358';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__prop__entry_1a7bbd6f27866989a8a1c677aafe4dfde5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
union daos_prop_entry::__anonymous__
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '@21';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      sec-mem-desc-line = '359';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
value can be either a uint64_t, or a string, or any other type
data such as the struct daos_acl pointer.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
  cp-fileline  = '346';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__prop__t';
  cp-name   = 'daos_prop_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__prop__t_1abaa88a667aafa85fe5785ba8f409bd0d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dpp_nr';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      sec-mem-desc-line = '441';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
number of entries 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__prop__t_1a8f9f2695655a99356e3598844f97d949';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dpp_reserv';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      sec-mem-desc-line = '443';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
reserved for future usage (for 64 bits alignment now) 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__prop__t_1a221f1945559a651dd8acd252863a46eb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct daos_prop_entry *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dpp_entries';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      sec-mem-desc-line = '445';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
property entries array 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
  cp-fileline  = '439';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
daos properties, for pool or container 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_prop_t';
        node-link = {
          node-link-id = 'structdaos__prop__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
dpp_entries
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_prop_entry';
        node-link = {
          node-link-id = 'structdaos__prop__entry';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__range__t';
  cp-name   = 'daos_range_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__range__t_1a7dea11ba34bc55aa970313cb70702fed';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_off_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rg_idx';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
      sec-mem-desc-line = '28';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Index of the first record in the range 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__range__t_1a040bb23c8c89cc44c12fcf2af2f5123f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rg_len';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
      sec-mem-desc-line = '30';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of records in the range 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
  cp-fileline  = '26';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Range of contiguous records 
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__rebuild__status';
  cp-name   = 'daos_rebuild_status';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__rebuild__status_1a53402a8db445b6a296e44cc187167783';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rs_version';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '95';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
pool map version in rebuilding or last completed rebuild 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__rebuild__status_1a0e49c4e15a5939d0fafd5e0b589b2dcc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rs_seconds';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '97';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Time (Seconds) for the rebuild 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__rebuild__status_1a5f1aeeff061c055d0a9c265fc79a2523';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rs_errno';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '99';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
errno for rebuild failure 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__rebuild__status_1a54c93dc6788aa1b62e7b026e5dda3780';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rs_done';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '103';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
rebuild is done or not, it is valid only if @rs_version is non-zero
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__rebuild__status_1add9893d4451b0f9dd488c1eec20d60a1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rs_padding32';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '106';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__rebuild__status_1af7384f98aa463b1bdd438cb762d88a41';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rs_fail_rank';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '109';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__rebuild__status_1a3b8c61712359e69280549efacc68f14f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rs_toberb_obj_nr';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '115';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<h1>total to-be-rebuilt objects, it's non-zero and increase when</h1>
rebuilding in progress, when rs_done is 1 it will not change anymore
and should equal to rs_obj_nr. With both rs_toberb_obj_nr and
rs_obj_nr the user can know the progress of the rebuilding.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__rebuild__status_1a8ba115f9315f1de96220939baf7e8be2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rs_obj_nr';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '117';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<h1>rebuilt objects, it's non-zero only if rs_done is 1</h1>
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__rebuild__status_1a721fda8845cd9a064c691a979f5ac2ca';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rs_rec_nr';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '119';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<h1>rebuilt records, it's non-zero only if rs_done is 1</h1>
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__rebuild__status_1a40a55e247da425a1ed29c522bdb6b05a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rs_size';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '122';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
rebuild space cost 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
  cp-fileline  = '93';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__recx__t';
  cp-name   = 'daos_recx_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__recx__t_1ab9d444e68abbef4c531b20c7ea655632';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rx_idx';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      sec-mem-desc-line = '172';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Indice of the first record in the extent 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__recx__t_1a4e59e78b6556122c19cf04c6d1ba8e28';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rx_nr';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      sec-mem-desc-line = '178';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of contiguous records in the extent
If \a rx_nr is equal to 1, the extent is composed of a single record
at indice \a rx_idx
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
  cp-fileline  = '170';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Record

A record is an atomic blob of arbitrary length which is always
fetched/updated as a whole. The size of a record can change over time.
A record is uniquely identified by the following composite key:
- the distribution key (aka dkey) denotes a set of arrays co-located on the
  same storage targets. The dkey has an arbitrary size.
- the attribute key (aka akey) distinguishes individual arrays. Likewise, the
  akey has a arbitrary size.
- the index within an array discriminates individual records. The index
  is an integer that ranges from zero to infinity. A range of indices
  identifies a contiguous set of records called extent. All records inside an
  extent must have the same size.
A record extent is a range of contiguous records of the same size inside an
array. \a rx_idx is the first array index of the extent and \a rx_nr is the
number of records covered by the extent.
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__set__params__t';
  cp-name   = 'daos_set_params_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__set__params__t_1aafb4e47bc006722deb58fd5e17531de3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'grp';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '130';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Process set name of the DAOS servers managing the pool 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__set__params__t_1a725668728cdf219a18169482d866dbd7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
d_rank_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rank';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '132';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Ranks to set parameter. -1 means setting on all servers 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__set__params__t_1a3c9e1911e32476da4aa8b1951b3b634c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'key_id';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '134';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
key ID of the parameter 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__set__params__t_1a4e630859cc0e2a22bd6acf39a6a8e218';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'value';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '136';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
value of the parameter 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__set__params__t_1af718f46e2108c284c21e3446a360faad';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'value_extra';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '138';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
optional extra value to set the fail 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '128';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
mgmt set params 
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__space';
  cp-name   = 'daos_space';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__space_1a1e3bd06ace2bc099fcf21cedf2981cee';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 's_total';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '65';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__space_1a531934b771ab500f8c10b20371e6f5ff';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 's_free';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '67';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
  cp-fileline  = '63';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Pool target space usage information 
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__target__info__t';
  cp-name   = 'daos_target_info_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__target__info__t_1a1196f555c8743f4177275039423fbc2a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_target_type_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ta_type';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '72';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__target__info__t_1a94bb364a68a0f72e10d887cd87cefb2c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_target_state_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ta_state';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '73';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__target__info__t_1a6faa443726761243e5ba71c36fe611a4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_target_perf_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ta_perf';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '74';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__target__info__t_1acb16b4eba38943d2a0464cf5ea6c5544';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct daos_space
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ta_space';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '74';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
  cp-fileline  = '71';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Target information 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_target_info_t';
        node-link = {
          node-link-id = 'structdaos__target__info__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
ta_space
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
ta_perf
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_space';
        node-link = {
          node-link-id = 'structdaos__space';
        };
      }; /* node */
      node = {
        node-id    = 3;
        node-label = 'daos_target_perf_t';
        node-link = {
          node-link-id = 'structdaos__target__perf__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__target__perf__t';
  cp-name   = 'daos_target_perf_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__target__perf__t_1a819b717d29c6c488a332fefeeb3815ba';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'foo';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      sec-mem-desc-line = '53';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
TODO: storage/network bandwidth, latency etc 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
  cp-fileline  = '51';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Description of target performance 
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__tx__abort__t';
  cp-name   = 'daos_tx_abort_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__tx__abort__t_1a8df9d41740502f16e867061d9bc0c585';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'th';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '519';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Transaction open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '517';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Transaction abort args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'daos_tx_abort_t';
        node-link = {
          node-link-id = 'structdaos__tx__abort__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
th
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__tx__close__t';
  cp-name   = 'daos_tx_close_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__tx__close__t_1a8df9d41740502f16e867061d9bc0c585';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'th';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '535';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Transaction open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '533';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Transaction close args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_tx_close_t';
        node-link = {
          node-link-id = 'structdaos__tx__close__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
th
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__tx__commit__t';
  cp-name   = 'daos_tx_commit_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__tx__commit__t_1a8df9d41740502f16e867061d9bc0c585';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'th';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '511';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Transaction open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__tx__commit__t_1a773b39d480759f67926cb18ae2219281';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'flags';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '513';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Control commit behavior, such as retry. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '509';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Transaction commit args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_tx_commit_t';
        node-link = {
          node-link-id = 'structdaos__tx__commit__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
th
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__tx__open__snap__t';
  cp-name   = 'daos_tx_open_snap_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__tx__open__snap__t_1a7fe83fe613282d305d3aeacba805f901';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'coh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '525';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Container open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__tx__open__snap__t_1a17de810d40610c8a151488f29fa63593';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_epoch_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'epoch';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '527';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Epoch of persistent snapshot to read from. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__tx__open__snap__t_1afe354de0e9d0f58ea97b79df58c30bcc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'th';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '529';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returned transaction open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '523';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Transaction snapshot open args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_tx_open_snap_t';
        node-link = {
          node-link-id = 'structdaos__tx__open__snap__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
th
coh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__tx__open__t';
  cp-name   = 'daos_tx_open_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__tx__open__t_1a7fe83fe613282d305d3aeacba805f901';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'coh';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '501';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Container open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__tx__open__t_1afe354de0e9d0f58ea97b79df58c30bcc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'th';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '503';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returned transaction open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__tx__open__t_1a899a76dc5f03f0d4ea3793c339e07ee9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'flags';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '505';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Transaction flags. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '499';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Transaction Open args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_tx_open_t';
        node-link = {
          node-link-id = 'structdaos__tx__open__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
th
coh
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdaos__tx__restart__t';
  cp-name   = 'daos_tx_restart_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdaos__tx__restart__t_1a8df9d41740502f16e867061d9bc0c585';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'th';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      sec-mem-desc-line = '541';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Transaction open handle. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  cp-fileline  = '539';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Transaction restart args 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'daos_tx_restart_t';
        node-link = {
          node-link-id = 'structdaos__tx__restart__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
th
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_handle_t';
        node-link = {
          node-link-id = 'structdaos__handle__t';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdfs__attr__t';
  cp-name   = 'dfs_attr_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdfs__attr__t_1a83f871acfb094f9af728200928e142da';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'da_id';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      sec-mem-desc-line = '62';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Optional user ID for DFS container. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdfs__attr__t_1a99f0686f082c91df320c81a642ec949b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'da_chunk_size';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      sec-mem-desc-line = '64';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Default Chunk size for all files in container 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdfs__attr__t_1af3603cd1c7440c516bb372e91a0670a5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_oclass_id_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'da_oclass_id';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      sec-mem-desc-line = '66';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Default Object Class for all objects in the container 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdfs__attr__t_1a73ad14cfecf638b05eaa683f14698664';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_prop_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'da_props';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      sec-mem-desc-line = '68';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
DAOS properties on the DFS container 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdfs__attr__t_1a639f1f675e340c3809bb5442e5e909dd';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'da_mode';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      sec-mem-desc-line = '74';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
  cp-fileline  = '60';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
struct holding attributes for a DFS container 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'dfs_attr_t';
        node-link = {
          node-link-id = 'structdfs__attr__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
da_props
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_prop_t';
        node-link = {
          node-link-id = 'structdaos__prop__t';
        };
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
dpp_entries
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 3;
        node-label = 'daos_prop_entry';
        node-link = {
          node-link-id = 'structdaos__prop__entry';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdfs__iod__t';
  cp-name   = 'dfs_iod_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdfs__iod__t_1a4acbee12deb5235cacef8566e230d108';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'iod_nr';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      sec-mem-desc-line = '80';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of entries in dfs_rgs 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdfs__iod__t_1a32c4a60a2e1dbbb63df2a8f28cb627f2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_range_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'iod_rgs';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      sec-mem-desc-line = '82';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Array of ranges; each range defines a starting index and length. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
  cp-fileline  = '78';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
IO descriptor of ranges in a file to access 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 2;
        node-label = 'daos_range_t';
        node-link = {
          node-link-id = 'structdaos__range__t';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'dfs_iod_t';
        node-link = {
          node-link-id = 'structdfs__iod__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
iod_rgs
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structdfs__obj__info__t';
  cp-name   = 'dfs_obj_info_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdfs__obj__info__t_1aae575a86d6452cbcd9c1344e36c0b71f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_oclass_id_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'doi_oclass_id';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      sec-mem-desc-line = '87';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
object class 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structdfs__obj__info__t_1aecfb7a0dfa0086df894c4745a9f8ec3e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'doi_chunk_size';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      sec-mem-desc-line = '89';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
chunk size 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
  cp-fileline  = '85';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structduns__attr__t';
  cp-name   = 'duns_attr_t';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structduns__attr__t_1a32d05946dea4e65b637400b0a80642ff';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_cont_layout_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'da_type';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_uns.h';
      sec-mem-desc-line = '53';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
IN/OUT: Container layout (POSIX, HDF5, Python, etc.) 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structduns__attr__t_1af3603cd1c7440c516bb372e91a0670a5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_oclass_id_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'da_oclass_id';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_uns.h';
      sec-mem-desc-line = '55';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
IN: (Optional) For a POSIX container, set a default object class for all objects. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structduns__attr__t_1a99f0686f082c91df320c81a642ec949b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'da_chunk_size';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_uns.h';
      sec-mem-desc-line = '57';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
IN: (Optional) For a POSIX container, set a default chunk size for all files. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structduns__attr__t_1a73ad14cfecf638b05eaa683f14698664';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
daos_prop_t *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'da_props';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_uns.h';
      sec-mem-desc-line = '59';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
IN: (Optional Container props to be added with duns_path_create 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structduns__attr__t_1a5556c0ee730a964b4d1fc394c166e341';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'da_flags';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_uns.h';
      sec-mem-desc-line = '66';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
IN: access flags

DUNS_NO_PREFIX
DUNS_NO_REVERSE_LOOKUP
DUNS_NO_CHECK_PATH:
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structduns__attr__t_1a51c6bc0f6cccfa26ea27ad342c9b1366';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'da_pool';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_uns.h';
      sec-mem-desc-line = '74';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
OUT: Pool UUID or label string.

On duns_resolve_path(), a UUID string is returned for the pool that was stored on that
path. If the path is a direct path, we parse the first entry (pool) in the path as either
a UUID or a label. This can be used in daos_pool_connect() regardless of whether it's a
UUID or label.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structduns__attr__t_1a94c125230620d30cd20feb104bc6f5c8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'da_cont';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_uns.h';
      sec-mem-desc-line = '83';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
OUT: Container UUID or label string.

On duns_resolve_path(), a UUID string is returned for the container that was stored on
that path. If the path is a direct path, we parse the second entry (cont) in the path as
either a UUID or a label. This can be used in daos_cont_open() regardless of whether it's
a UUID or label. on duns_create_path(), the uuid of the container created is also
populated in this field.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structduns__attr__t_1ae60b72f5c1cfb5453ca27c4229177e90';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'da_sys';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_uns.h';
      sec-mem-desc-line = '89';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
OUT: DAOS System Name. (The UNS does not maintain this yet, and this is not set)

On duns_resolve_path(), the daos system name is returned that can be used on
daos_pool_connect().
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structduns__attr__t_1af0f842f991aa29359ee887439833444b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'da_rel_path';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_uns.h';
      sec-mem-desc-line = '98';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
OUT: Relative component of path from where the UNS entry is located (returned on
duns_resolve_path()).

This is returned if the UNS entry is not the last entry in the path, and the UNS library
performs a reverse lookup to find a UNS entry in the path. To check only the last entry
in the path and not return this relative path to that entry, set DUNS_NO_REVERSE_LOOKUP
on \a da_flags.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structduns__attr__t_1a8f477678a941562c30f7c9e90b970bdb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'da_on_lustre';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_uns.h';
      sec-mem-desc-line = '100';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
OUT: This is set to true if path is on Lustre filesystem 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structduns__attr__t_1a08d3b868354a0ef0467f4fe179eac548';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'da_no_prefix';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_uns.h';
      sec-mem-desc-line = '106';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
IN: (Deprecated - use flags) String does not include daos:// prefix

Path that is passed does not have daos: prefix but is direct: (/pool/cont/xyz) and does
not need to parse a path for the UNS attrs.  This is usually set to false.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structduns__attr__t_1a41bedeb8f489555294077744e941c9ef';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uuid_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'da_puuid';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_uns.h';
      sec-mem-desc-line = '112';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
IN/OUT: (Deprecated) Pool UUID of the container to be created in duns_create_path().

The pool UUID is now obtained from the pool handle in duns_create_path(). The pool UUID
is returned as a string in \a da_pool with duns_resolve_path().
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structduns__attr__t_1afc6bc2480780108746dddb38a10b932e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uuid_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'da_cuuid';
      sec-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_uns.h';
      sec-mem-desc-line = '119';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
IN/OUT: (Deprecated) Optional UUID of the cont to be created in duns_create_path().

The UUID will be used to create the container in duns_create_path() if set, otherwise a
random one will be generated. The cont UUID or label is returned as a string in \a
da_cont with duns_resolve_path().
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_uns.h';
  cp-fileline  = '51';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
struct that has the values to make the connection from the UNS to DAOS 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'duns_attr_t';
        node-link = {
          node-link-id = 'structduns__attr__t';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
da_props
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'daos_prop_t';
        node-link = {
          node-link-id = 'structdaos__prop__t';
        };
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
dpp_entries
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 3;
        node-label = 'daos_prop_entry';
        node-link = {
          node-link-id = 'structdaos__prop__entry';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
file = {
  file-id   = 'daos_8h';
  file-name = 'daos.h';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___d_a_o_s_a_p_i_1ga4b2c21607fd4af8c6ccd0bceffb9f779';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_init';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos.h';
      func-mem-desc-line = '41';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Initialize the DAOS library.
Should be invoked prior to any DAOS calls. Can be called multiple times.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___d_a_o_s_a_p_i_1gadceda4e95d7551e4baa746d3d49d9393';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_fini';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos.h';
      func-mem-desc-line = '50';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Finalize the DAOS library.
Should be invoked only when daos_init() was previously successfully executed.
An internal reference count is maintained by the library that will tear down
the DAOS stack on the last call to daos_fini()
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
DAOS API
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'daos__api_8h';
  file-name = 'daos_api.h';
    enum = {
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'daos__api_8h_1a06fc87d81c62e9abb8790b6e5713c55b';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = '@0';
      enum-mem-enum = { enum-name = DAOS_TF_RDONLY; enum-value = '= (1 << 0)'; };
      enum-mem-enum = { enum-name = DAOS_TF_ZERO_COPY; enum-value = '= (1 << 1)'; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_api.h';
      enum-mem-desc-line = '20';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
Flags for daos_tx_open 
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__api_8h_1abc4655c8429eff6b7a5637027ec3dbb2';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
d_rank_list_t *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_rank_list_parse';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'str';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'sep';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_api.h';
      func-mem-desc-line = '45';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Generate a rank list from a string with a separator argument. This is a
convenience function to generate the rank list.

@param [in]  str string with the rank list
@param [in]  sep separator of the ranks in \a str.
        dmg uses ":" as the separator.

\return     allocated rank list that user is responsible to free
        with d_rank_list_free().
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__api_8h_1a85fc0f9f93c742cfa39b65ac71c9ec07';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_tx_open';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_api.h';
      func-mem-desc-line = '65';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Open a transaction on a container handle. The resulting transaction handle
can be used for IOs in this container that need to be committed
transactionally.

@param [in]  coh Container handle.
@param [out] th  Returned transaction handle.
@param [in]  flags   Transaction flags (DAOS_TF_RDONLY, etc.).
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     0 if Success, negative if failed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__api_8h_1a4cb7e867cfd999985945c5d5e4fedac3';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_tx_commit';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_api.h';
      func-mem-desc-line = '87';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Commit the transaction. If the operation succeeds, the transaction handle
cannot be used for any new IO. If -DER_TX_RESTART is returned, the caller
needs to restart the transaction with the same transaction handle, by
calling daos_tx_restart, re-executing the caller code for this transaction,
and calling daos_tx_commit again.

@param [in]  th  Transaction handle to commit.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     0 if Success, negative if failed.
        Possible error values include:
        -DER_NO_HDL     invalid transaction handle.
        -DER_INVAL      Invalid parameter
        -DER_TX_RESTART transaction needs to restart (e.g.,
                due to conflicts).
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__api_8h_1aeeed38f424e4808a8343899d650339b3';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_tx_open_snap';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_epoch_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'epoch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_api.h';
      func-mem-desc-line = '105';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create a read-only transaction from a snapshot. This does not create the
snapshot, but only a read transaction to be able to read from a snapshot
created with daos_cont_create_snap. If the user passes an epoch that is not
snapshoted, or the snapshot was deleted, reads using that transaction may
get undefined results.

@param [in]  coh Container handle.
@param [in]  epoch   Epoch of snapshot to read from.
@param [out] th  Returned read only transaction handle.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     0 if Success, negative if failed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__api_8h_1a40cf0b9f0976d3173d55b2bce33a91f8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_tx_abort';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_api.h';
      func-mem-desc-line = '119';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Abort all modifications on the transaction. The transaction handle cannot be
used for any new IO.

@param [in]  th  Transaction handle to abort.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     0 if Success, negative if failed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__api_8h_1acc1b2d05cbf0cb9ed6a4dc843d97fb82';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_tx_close';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_api.h';
      func-mem-desc-line = '131';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Close the transaction handle. This is a local operation, no RPC involved.

@param [in]  th  Transaction handle to free.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     0 if Success, negative if failed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__api_8h_1abcc4cc9d5c82aae3be3a3076bcb7e9e1';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_tx_restart';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_api.h';
      func-mem-desc-line = '149';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Restart the transaction after encountering a -DER_TX_RESTART error. This
drops all the IOs that have been issued via the transaction handle. Whether
the restarted transaction observes any conflicting modifications committed
after this transaction was originally opened is undefined. If callers would
like to retry transactions for their own purposes, they shall open new
transactions instead. This is a local operation, no RPC involved.


@param [in]  th  Transaction handle to be restarted.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     0 if Success, negative if failed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__api_8h_1a3a50870fb708e8044d112a8ec7af5100';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_tx_hdl2epoch';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_epoch_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'epoch';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_api.h';
      func-mem-desc-line = '166';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Return the epoch associated with the transaction handle. An epoch may not be
available at the beginning of the transaction, but one shall be available
after the transaction successfully commits.

This function is specific to the current implementation. It should only be
used for testing and debugging purposes.

@param [in]  th  Transaction handle.
@param [out] epoch   Returned epoch value.

\return     0 if Success, negative if failed.
@retval -DER_UNINIT An epoch is not available yet.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__api_8h_1a66f2deaee46805a5e80d0d4cb1e00fa3';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_anchor_init';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_anchor_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'anchor';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'opts';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_api.h';
      func-mem-desc-line = '175';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Initialize an iteratror anchor.

@param [in]  anchor  Anchor to be initialized
@param [in]  opts    (reserved) Initialization options
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__api_8h_1a758bd47cfb714849b2fb981071839a88';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_anchor_fini';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_anchor_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'anchor';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_api.h';
      func-mem-desc-line = '190';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Finalizie an iteratror anchor, free resources allocated
during the iteration.

@param [in]  anchor  Anchor to be finialized
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__api_8h_1af7279dfc0be9b6dc2566eda1e7a4455a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static bool
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_anchor_is_eof';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_anchor_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'anchor';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_api.h';
      func-mem-desc-line = '199';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
End of the iteration
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_api.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
DAOS API methods
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'daos__array_8h';
  file-name = 'daos_array.h';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___arrays_1ga6975d949d7369f8ff6f7c9e5cb3d2cd3';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static int
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(deprecated)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
      func-mem-desc-line = '67';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Deprecated - use daos_array_generate_oid()
Convenience function to generate a DAOS object ID by encoding the private
DAOS bits of the object address space.

@param [in,out]
    oid [in]: Object ID with low 96 bits set and unique inside
        the container. [out]: Fully populated DAOS object
        identifier with the the low 96 bits untouched and the
        DAOS private bits (the high 32 bits) encoded.
@param [in]  cid Class Identifier
@param [in]  add_attr
        Indicate whether the user would maintain the array
        cell and chunk size (false), or the metadata should
        be stored in the obj (true).
@param [in]  args    Reserved.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___arrays_1ga7802e29d354450453b50026c61285cb0';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-name = 'if';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
add_attr
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
      func-mem-desc-line = '75';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___arrays_1ga388590c581f5c43b13d22df4ed6131b4';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_array_generate_oid';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_obj_id_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oid';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'add_attr';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_oclass_id_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'cid';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_oclass_hints_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'hints';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'args';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
      func-mem-desc-line = '120';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Convenience function to generate a DAOS Array object ID by encoding the private DAOS bits of the
object address space.

@param [in]  coh Container open handle.
@param [in,out]
    oid [in]: Object ID with low 96 bits set and unique inside the container.
        [out]: Fully populated DAOS object identifier with the low 96 bits untouched
        and the DAOS private bits (the high 32 bits) encoded.
@param [in]  add_attr
        Indicate whether the user would maintain the array cell and chunk size
        (false), or the metadata should be stored in the obj (true).
@param [in]  cid Class Identifier. This setting is for advanced users who are knowledgeable
        on the specific oclass being set and what that means for the object in the
        current system and the container it's in. Setting this to 0 (unknown) will
        check if there are any hints specified and use an oclass accordingly. If
        there are no hints specified we use the container properties to select the
        object class.
@param [in]   hints  Optional hints to select oclass with redundancy type and sharding. This will
        be ignored if cid is not OC_UNKNOWN (0).
@param [in]  args    Reserved.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___arrays_1gaeed8064a0c8949b7547660a09404ac8f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_array_create';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_obj_id_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oid';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'cell_size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'chunk_size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
      func-mem-desc-line = '169';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create an Array object. This opens a DAOS object and adds metadata under a special akey to define
the cell size and chunk size. Further access to that object using the handle will use that
metadata to store the array elements.

The metadata of the array is stored under a special AKEY in DKEY 0. This means that this is a
generic array object with it's metadata tracked in the DAOS object. The feat bits in the oid must
set DAOS_OF_DKEY_UINT64 | DAOS_OF_KV_FLAT | DAOS_OF_ARRAY.  If the feat bits does not set
DAOS_OF_ARRAY, the user would be responsible for remembering the array metadata since DAOS will
not store those, and should not call this API since nothing will be written to the array
object. daos_array_open_with_attrs() can be used to get an array OH in that case to access with
the Array APIs.

@param [in]  coh Container open handle.
@param [in]  oid Object ID. It is required that the feat for dkey type
        be set to DAOS_OF_KV_FLAT | DAOS_OF_DKEY_UINT64 |
        DAOS_OF_ARRAY.
@param [in]  th  Transaction handle.
@param [in]  cell_size
        Record size of the array.
@param [in]  chunk_size
        Number of contiguous records to store per DKey before
        moving to a different dkey.
@param [out] oh  Returned array object open handle.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid container handle
        -DER_INVAL  Invalid parameter
        -DER_EXIST  Array already exists
        -DER_UNREACH    Network is unreachable
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___arrays_1ga309d54604a2e97fddd1b9396ed61cb3d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_array_open';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_obj_id_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oid';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mode';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'cell_size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'chunk_size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
      func-mem-desc-line = '202';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Open an Array object. If the array has not been created before (no array metadata exists), this
will fail.

@param [in]  coh Container open handle.
@param [in]  oid Object ID. It is required that the feat for dkey type
        be set to DAOS_OF_KV_FLAT | DAOS_OF_DKEY_UINT64 |
        DAOS_OF_ARRAY.
@param [in]  th  Transaction handle.
@param [in]  mode    Open mode: DAOS_OO_RO/RW
@param [out] cell_size
        Record size of the array.
@param [out] chunk_size
        Contiguous bytes to store per DKey before moving to a
        different dkey.
@param [out] oh  Returned array object open handle.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid container handle
        -DER_INVAL  Invalid parameter
        -DER_NO_PERM    Permission denied
        -DER_NONEXIST   Cannot find object
        -DER_UNREACH    Network is unreachable
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___arrays_1ga9c841c2fb4b79566dfe4edff46a7e1bb';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_array_open_with_attr';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_obj_id_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oid';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mode';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'cell_size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'chunk_size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
      func-mem-desc-line = '235';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Open an Array object with the array attributes specified by the user. This is
the same as the create call if the object does not exist, except that nothing
is updated in the object, and the API just returns an OH to the user. If the
array was accessed with different cell_size and chunk_size before, accessing
it again will introduce corruption in the array data.

@param [in]  coh Container open handle.
@param [in]  oid Object ID. It is required that the feat for dkey type
        be set to DAOS_OF_DKEY_UINT64 | DAOS_OF_KV_FLAT.
@param [in]  th  Transaction handle.
@param [in]  mode    Open mode: DAOS_OO_RO/RW
@param [in]  cell_size
        Record size of the array.
@param [in]  chunk_size
        Contiguous bytes to store per DKey before moving to a
        different dkey.
@param [out] oh  Returned array object open handle.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid container handle
        -DER_INVAL  Invalid parameter
        -DER_NO_PERM    Permission denied
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___arrays_1ga17971d649a2052cb44cfb4a3ddd36e18';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_array_local2global';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
d_iov_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'glob';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
      func-mem-desc-line = '261';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Convert a local array handle to global representation data which can be
shared with peer processes.
If glob->iov_buf is set to NULL, the actual size of the global handle is
returned through glob->iov_buf_len.
This function does not involve any communication and does not block.

@param [in]  oh  valid local array object open handle to be shared
@param [out] glob    pointer to iov of the buffer to store handle information

\return     These values will be returned:
        non-blocking mode:
        0       Success
        -DER_INVAL  Invalid parameter
        -DER_NO_HDL Array handle is nonexistent
        -DER_TRUNC  Buffer in \a glob is too short, larger
                buffer required. In this case the
                required buffer size is returned through
                glob->iov_buf_len.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___arrays_1ga98d549b722a6164b6c500b9811e2b52d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_array_global2local';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
d_iov_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'glob';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mode';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
      func-mem-desc-line = '281';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create a local array open handle for global representation data. This handle
has to be closed with daos_array_close().

@param [in]  coh Container open handle the array belongs to
@param [in]  glob    Global (shared) representation of a collective handle
        to be extracted
@param [in]  mode    Option to change the object open mode.
        Pass 0 to inherit the global mode.
@param [out] oh  Returned local array open handle

\return     These values will be returned:
        non-blocking mode:
        0       Success
        -DER_INVAL  Invalid parameter
        -DER_NO_HDL Container handle is nonexistent
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___arrays_1ga28fed60c9a468122c8c54dbdb8b8ec0c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_array_close';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
      func-mem-desc-line = '297';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Close an opened array object.

@param [in]  oh  Array object open handle.
@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid object open handle
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___arrays_1ga036a9c34cb863dba486097576cc45400';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_array_read';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_array_iod_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'iod';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
d_sg_list_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'sgl';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
      func-mem-desc-line = '322';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Read data from an array object.

@param [in]  oh  Array object open handle.
@param [in]  th  Transaction handle.
@param [in]  iod IO descriptor of ranges to read from the array.
@param [in]  sgl A scatter/gather list (sgl) to the store array data.
        Buffer sizes do not have to match the individual range
        sizes as long as the total size does. User allocates the
        buffer(s) and sets the length of each buffer.
@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid object open handle
        -DER_INVAL  Invalid parameter
        -DER_UNREACH    Network is unreachable
        -DER_REC2BIG    Record is too large and can't be
                fit into output buffer
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___arrays_1gab011b04b0f1cce149f677b07e7295c58';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_array_write';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_array_iod_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'iod';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
d_sg_list_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'sgl';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
      func-mem-desc-line = '347';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Write data to an array object.

@param [in]  oh  Array object open handle.
@param [in]  th  Transaction handle.
@param [in]  iod IO descriptor of ranges to write to the array.
@param [in]  sgl A scatter/gather list (sgl) to the store array data.
        Buffer sizes do not have to match the individual range
        sizes as long as the total size does.
@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid object open handle
        -DER_INVAL  Invalid parameter
        -DER_UNREACH    Network is unreachable
        -DER_REC2BIG    Record is too large and can't be
                fit into output buffer
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___arrays_1ga8129cd2cc09b3e6f7fcf6dd9d792a635';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_array_get_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
      func-mem-desc-line = '367';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Query the number of records in the array object.

@param [in]  oh  Array object open handle.
@param [in]  th  Transaction handle.
@param [out] size    Returned array size (number of records).
@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid object open handle
        -DER_INVAL  Invalid parameter
        -DER_UNREACH    Network is unreachable
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___arrays_1ga4b5b648c935a34d9f3e5d0de1e1641d8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_array_set_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
      func-mem-desc-line = '390';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Set the array size (truncate) in records. If array is shrinking, we punch
dkeys/records above the required size. If the array is epxanding, we insert 1
record at the corresponding size. This is NOT equivalent to an allocate.


@param [in]  oh  Array object open handle.
@param [in]  th  Transaction handle.
@param [in]  size    Size (number of records) to set array to.
@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid object open handle
        -DER_INVAL  Invalid parameter
        -DER_UNREACH    Network is unreachable
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___arrays_1gad922154fcc6593928cf36005c203d1ec';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_array_destroy';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
      func-mem-desc-line = '415';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destroy the array object by punching all data (keys) in the array object
including the metadata associated with the array. daos_obj_punch() is called
underneath. The oh still needs to be closed with a call to
daos_array_close(), but any other access with that handle, or other array
open handles, will fail. The destroy will happen regardless of any open
handle, so it's the user responsibility to ensure that there is no further
access to the array before the destroy is called.

@param [in]  oh  Array object open handle.
@param [in]  th  Transaction handle.
@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid object open handle
        -DER_INVAL  Invalid parameter
        -DER_UNREACH    Network is unreachable
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___arrays_1gaa2e69755706bafcf5670a5e55c1900c9';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_array_punch';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_array_iod_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'iod';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
      func-mem-desc-line = '434';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Punch a hole in the array indicated by the range in the iod.

@param [in]  oh  Array object open handle.
@param [in]  th  Transaction handle.
@param [in]  iod IO descriptor of ranges to punch in the array.
@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid object open handle
        -DER_INVAL  Invalid parameter
        -DER_UNREACH    Network is unreachable
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___arrays_1ga3baced5fa05df343d638896b47fb73d6';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_array_get_attr';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'chunk_size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'cell_size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
      func-mem-desc-line = '453';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Retrieve array cell and chunk size from an open handle.

@param [in]  oh  Array object open handle.
@param [out] chunk_size
        Chunk size of the array.
@param [out] cell_size
        Cell size of the array.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid object open handle
        -DER_INVAL  Invalid parameter
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'group___arrays_1ga7200a91365daec3337f4562089300d31';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static int daos_oclass_id_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'cid';
      var-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
      var-mem-desc-line = '68';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'group___arrays_1gac4f83505ff130d566cb7b40645bf9c61';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static int daos_oclass_id_t bool
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'add_attr';
      var-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
      var-mem-desc-line = '68';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'group___arrays_1ga5b92f9dd0825ec678f19d3b853be080d';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static int daos_oclass_id_t bool uint32_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'args';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
{
	static daos_ofeat_t	feat
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
      var-mem-desc-line = '68';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'group___arrays_1ga772bb37caf561d1653d9f9a631e1ba33';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'hdr';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= ((uint64_t)OID_FMT_VER << OID_FMT_VER_SHIFT)
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
      var-mem-desc-line = '71';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_
| Upper bits contain
| OID_FMT_VER_BITS (version)         |
| OID_FMT_FEAT_BITS (object features) |
| OID_FMT_CLASS_BITS (object class)  |
| 96-bit for upper layer ...         |
_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'group___arrays_1gaabfccb0e136cba3e5331959a54a614eb';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-name = 'feat';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= DAOS_OF_DKEY_UINT64 | DAOS_OF_KV_FLAT
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
      var-mem-desc-line = '73';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'group___arrays_1ga3e47cb96fe9d5e9c2fd2148684947648';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
oid
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'hi';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= hdr
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
      var-mem-desc-line = '92';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'group___arrays_1ga9717e7bbecb906637e86cef6da3d83c2';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-name = 'return';
      var-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
      var-mem-desc-line = '94';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_array.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
DAOS Array

The DAOS Array API provides a 1-D array implementation over the DAOS object
data model.
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'daos__cont_8h';
  file-name = 'daos_cont.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___containers_1gaab23e66f2eb2bac0b001547b3fdf8587';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_COO_RO';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(1U << 0)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      define-mem-desc-line = '38';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
DAOS_COO_RO opens the container for reading only. This flag conflicts with
DAOS_COO_RW.

DAOS_COO_RW opens the container for reading and writing. This flag conflicts
with DAOS_COO_RO.

DAOS_COO_NOSLIP disables the automatic epoch slip at epoch commit time. See
daos_epoch_commit().

DAOS_COO_FORCE skips the check to see if the pool meets the redundancy
factor/level requirements of the container.
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___containers_1ga11ee11e5a4bb4ec779ee2f6a01ed96cc';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_COO_RW';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(1U << 1)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      define-mem-desc-line = '39';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___containers_1ga26bfa27ac1eafe57a6efb365d4db7ec2';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_COO_NOSLIP';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(1U << 2)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      define-mem-desc-line = '40';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___containers_1ga64c5c8c269cb03333bafeba9cd847992';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_COO_FORCE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(1U << 3)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      define-mem-desc-line = '41';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___containers_1ga35cb86400b82c1386a6ca4bbd3a1b1d4';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_COO_NBITS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(4)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      define-mem-desc-line = '43';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___containers_1gade251344bf9a9a2955f03ada21ecc36a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_COO_MASK';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((1U << DAOS_COO_NBITS) - 1)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      define-mem-desc-line = '44';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___containers_1gafb8acd391dfbeecb6895e66a997781ed';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_SNAPSHOT_MAX_LEN';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
128
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      define-mem-desc-line = '578';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___containers_1ga426a8e88774116475ff60291e3a1280d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'daos_cont_open';
      define-mem-param  = {
        define-mem-def-name = 'poh';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'co';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = '...';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
	({								\
		int _ret;						\
		char _str[37];						\
		const char *__str = NULL;				\
		if (d_is_string(co)) {					\
			__str = (const char *)(co);			\
		} else if (d_is_uuid(co)) {				\
			uuid_unparse((unsigned char *)(co), _str);	\
			__str = _str;					\
		}							\
		_ret = daos_cont_open2((poh), __str, __VA_ARGS__);	\
		_ret;							\
	})
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      define-mem-desc-line = '741';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
for backward compatility, support old api where a const uuid_t was used instead of a string to
identify the container.
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___containers_1ga9ced37f2791e33caa4fa5e3a33527a25';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'daos_cont_destroy';
      define-mem-param  = {
        define-mem-def-name = 'poh';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'co';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = '...';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
	({								\
		int _ret;						\
		char _str[37];						\
		const char *__str = NULL;				\
		if (d_is_string(co)) {					\
			__str = (const char *)(co);			\
		} else if (d_is_uuid(co)) {				\
			uuid_unparse((unsigned char *)(co), _str);	\
			__str = _str;					\
		}							\
		_ret = daos_cont_destroy2((poh), __str, __VA_ARGS__);	\
		_ret;							\
	})
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      define-mem-desc-line = '760';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
for backward compatility, support old api where a const uuid_t was used instead of a string to
identify the container.
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___containers_1gadfaa5fb3ea11125d20df71a0fd416a85';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'daos_cont_create';
      define-mem-param  = {
        define-mem-def-name = 'poh';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'co';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = '...';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
	({								\
		int _ret;						\
		uuid_t *_u;						\
		if (d_is_uuid(co)) {					\
			_u = (uuid_t *)((unsigned char *)(co));		\
			_ret = daos_cont_create((poh), _u,		\
						__VA_ARGS__);		\
		} else {						\
			_u = (uuid_t *)(co);				\
			_ret = daos_cont_create2((poh), _u,		\
						 __VA_ARGS__);		\
		}							\
		_ret;							\
	})
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      define-mem-desc-line = '779';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
for backward compatility, support old api where a const uuid_t was required to be passed in for
the container to be created.
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    enum = {
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___containers_1gaa9db6759d54439124fe8d210d2c0254e';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = 'daos_snapshot_opts';
      enum-mem-enum = { enum-name = DAOS_SNAP_OPT_CR; enum-value = '= (1 << 0)'; };
      enum-mem-enum = { enum-name = DAOS_SNAP_OPT_OIT; enum-value = '= (1 << 1)'; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      enum-mem-desc-line = '597';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1gabc4655c8429eff6b7a5637027ec3dbb2';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
d_rank_list_t *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_rank_list_parse';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'str';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'sep';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '73';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Generate a rank list from a string with a separator argument. This is a
convenience function to generate the rank list required by
daos_pool_connect().

@param [in]  str string with the rank list
@param [in]  sep separator of the ranks in \a str.
        dmg uses ":" as the separator.

\return     allocated rank list that user is responsible to free
        with d_rank_list_free().
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1ga2d32bebaa76e264a8825074b360c2f2d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_local2global';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
d_iov_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'glob';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '96';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Convert a local container handle to global representation data which can be
shared with peer processes.
If glob->iov_buf is set to NULL, the actual size of the global handle is
returned through glob->iov_buf_len.
This function does not involve any communication and does not block.

@param [in]  coh valid local container handle to be shared
@param [out] glob    pointer to iov of the buffer to store handle information

\return     These values will be returned:
        non-blocking mode:
        0       Success
        -DER_INVAL  Invalid parameter
        -DER_NO_HDL Container handle is nonexistent
        -DER_TRUNC  Buffer in \a glob is too short, larger
                buffer required. In this case the
                required buffer size is returned through
                glob->iov_buf_len.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1gaa780e37e03ace1bb78baec4ca2096c75';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_global2local';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
d_iov_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'glob';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '113';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create a local container handle for global representation data.

@param [in]  poh Pool connection handle the container belong to
@param [in]  glob    Global (shared) representation of a collective handle
        to be extracted
@param [out] coh Returned local container handle

\return     These values will be returned:
        non-blocking mode:
        0       Success
        -DER_INVAL  Invalid parameter
        -DER_NO_HDL Pool handle is nonexistent
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1ga4ab958d41ed9ec62e6533027ba2927a9';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_create';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uuid_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'uuid';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_prop_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'cont_prop';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '143';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create a new container on the storage pool connected by \a poh.  The label (along with other
container properties) can be passed via the \a cont_prop.
If no label is specified, a container without any labels will be created. In this case, the only
way to identify the newly created container will be via its UUID. It is thus recommended to pass
a \a uuid argumnent so that the UUID allocated to the container can be returned to the caller.

@param [in]  poh Pool connection handle.
@param [out] uuid    Optional, pointer to uuid_t to hold the implementation-generated container
        UUID.
@param [in]  cont_prop
        Optional, container properties pointer
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_INVAL  Invalid parameter
        -DER_NO_HDL Invalid pool handle
        -DER_NO_PERM    Permission denied
        -DER_UNREACH    network is unreachable
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1gab6e2e5a40108c1ac45c936009201564b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_create_with_label';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'label';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_prop_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'cont_prop';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uuid_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'uuid';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '170';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create a new container with label \a label on the storage pool connected
by \a poh. Helper method built over the regular daos_cont_create().

@param [in]  poh Pool connection handle.
@param [in]  label   Required, label property of the new container.
        Supersedes any label specified in \a cont_prop.
@param [in]  cont_prop
        Optional, container properties pointer
        that if specified must not include an entry
        with type DAOS_PROP_CO_LABEL.
@param [out] uuid    Optional, pointer to uuid_t to hold the
            implementation-generated container UUID.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_INVAL  Invalid parameter
        -DER_NO_HDL Invalid pool handle
        -DER_NO_PERM    Permission denied
        -DER_UNREACH    network is unreachable
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1gac79ad39c83ee600516d907e14b5496c1';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_open';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'cont';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_cont_info_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'info';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '198';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Open an existing container identified by \a cont, a label or UUID string.
Upon successful completion, \a coh and \a info, both of which shall be
allocated by the caller, return the container handle and the latest
container information respectively.

@param [in]  poh Pool connection handle.
@param [in]  cont    Label or UUID string to identify the container.
@param [in]  flags   Open mode, represented by the DAOS_COO_ bits.
@param [out] coh Returned open handle.
@param [out] info    Optional, return container information
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_INVAL  Invalid parameter
        -DER_UNREACH    Network is unreachable
        -DER_NO_PERM    Permission denied
        -DER_NONEXIST   Container is nonexistent
        -DER_RF     #failures exceed RF, data possibly lost
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1ga619e6f50a6272f421a6967d5a54d7686';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_close';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '217';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Close a container handle. Upon successful completion, the container handle's
epoch hold (i.e., if LHE < DAOS_EPOCH_MAX) is released, and any uncommitted
updates from the container handle are discarded.

@param [in]  coh Container open handle.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_UNREACH    Network is unreachable
        -DER_NO_HDL Invalid container handle
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1ga6d214b26c932fc9cfe2cd78be970caba';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_destroy';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'cont';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'force';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '245';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destroy a container identified by \a cont, a label or UUID string associated
with the container. All objects within this container will be destroyed.
If there is at least one container opener, and \a force is set to zero, then
the operation completes with DER_BUSY. Otherwise, the container is destroyed
when the operation completes.

@param [in]  poh Pool connection handle.
@param [in]  cont    Label or UUID string to idenfity the container to
        destroy
@param [in]  force   Container destroy will return failure if the container
        is still busy (outstanding open handles). This parameter
        will force the destroy to proceed even if there is an
        outstanding open handle.
@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_PERM    Permission denied
        -DER_UNREACH    Network is unreachable
        -DER_NONEXIST   Container is nonexistent
        -DER_BUSY   Pool is busy
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1gafe40750c587a6bd761f8735160152e4c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_query';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'container';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_cont_info_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'info';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_prop_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'cont_prop';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '277';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Query container information.

@param [in]  coh Container open handle.
@param [out] info    Returned container information.
@param [out] cont_prop
        Optional, returned container properties
        If it is NULL, then needs not query the properties.
        If cont_prop is non-NULL but its dpp_entries is NULL,
        will query all pool properties, DAOS internally
        allocates the needed buffers and assign pointer to
        dpp_entries.
        If cont_prop's dpp_nr > 0 and dpp_entries is non-NULL,
        will query the properties for specific dpe_type(s), DAOS
        internally allocates the needed buffer for dpe_str or
        dpe_val_ptr, if the dpe_type with immediate value then
        will directly assign it to dpe_val.
        User can free the associated buffer by calling
        daos_prop_free().
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_INVAL  Invalid parameter
        -DER_UNREACH    Network is unreachable
        -DER_NO_HDL Invalid container handle
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1gad08f81ef557291516c1f9ec335c84cb0';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_get_acl';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'container';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_prop_t **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'acl_prop';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '300';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Query the container Access Control List and ownership properties.

@param [in]  coh Container open handle.

@param [out] acl_prop
        Newly allocated daos_prop_t containing the ACL, owner,
        and owner-group properties of the container.
        Caller must free it with daos_prop_free().
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_INVAL  Invalid parameter
        -DER_UNREACH    Network is unreachable
        -DER_NO_HDL Invalid container handle
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1gaf276a397e5990736e5f243937e983d71';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_set_prop';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_prop_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'prop';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '319';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets the container properties.

@param [in]  coh Container handle
@param [in]  prop    Property entries to update
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_INVAL  Invalid parameter
        -DER_NO_PERM    Permission denied
        -DER_UNREACH    Network is unreachable
        -DER_NO_HDL Invalid container handle
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1gaeab1776ae06542dbac5d2c5f0868bf81';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_status_clear';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '338';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Clear container status, to clear container's DAOS_PROP_CO_STATUS property
from DAOS_PROP_CO_UNCLEAN status to DAOS_PROP_CO_HEALTHY (with same purpose
with "daos cont set-prop --properties=status:healthy --pool= --cont= ".

@param [in]  coh Container handle
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_UNREACH    Network is unreachable
        -DER_NO_HDL Invalid container handle
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1ga36c2f6d5365282a3eb64395d376d9e89';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_overwrite_acl';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_acl *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'acl';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '357';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Overwrites the container ACL with a new one.

@param [in]  coh Container handle
@param [in]  acl New ACL to write
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_INVAL  Invalid parameter
        -DER_NO_PERM    Permission denied
        -DER_UNREACH    Network is unreachable
        -DER_NO_HDL Invalid container handle
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1ga2c7c585a946df6da3b556b539391af3d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_update_acl';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_acl *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'acl';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '381';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Add new entries and/or update existing entries in a container's ACL.

If an entry already exists in the container's ACL for a principal in the
passed-in ACL, the entry will be replaced with the new one. Otherwise, a
new entry will be added.

@param [in]  coh Container handle
@param [in]  acl ACL containing new/updated entries
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_INVAL  Invalid parameter
        -DER_NO_PERM    Permission denied
        -DER_UNREACH    Network is unreachable
        -DER_NO_HDL Invalid container handle
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1ga1ca2bc0480e7f871cf50f5500daa82ec';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_delete_acl';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
enum daos_acl_principal_type
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'type';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
d_string_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '404';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Remove a principal's entry from a container's ACL.

@param [in]  coh Container handle
@param [in]  type    Principal type to be removed
@param [in]  name    Name of principal to be removed (if type is user or
        group)
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_INVAL  Invalid parameter
        -DER_NO_PERM    Permission denied
        -DER_UNREACH    Network is unreachable
        -DER_NO_HDL Invalid container handle
        -DER_NOMEM  Out of memory
        -DER_NONEXIST   Principal is not in the ACL
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1ga30e8564681522eca4077b15900c3c867';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_set_owner';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
d_string_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'user';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
d_string_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'group';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '426';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Update a container's owner user and/or owner group.

@param [in]  coh Container handle
@param [in]  user    New owner user (NULL if not updating)
@param [in]  group   New owner group (NULL if not updating)
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_INVAL  Invalid parameter
        -DER_NO_PERM    Permission denied
        -DER_UNREACH    Network is unreachable
        -DER_NO_HDL Invalid container handle
        -DER_NOMEM  Out of memory
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1ga2b7eefa0f54fdf10306902d5ee1ef8b6';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_list_attr';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'buffer';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '446';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
List the names of all user-defined container attributes.

@param [in]  coh Container handle.
@param [out] buffer  Buffer containing concatenation of all attribute
        names, each being null-terminated. No truncation is
        performed and only full names will be returned.
        NULL is permitted in which case only the aggregate
        size will be retrieved.
@param [in,out]
    size    [in]: Buffer size. [out]: Aggregate size of all
        attribute names (excluding terminating null characters),
        regardless of the actual buffer size.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1gac4bb5e6daaa823d4e06a8ac00846286f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_get_attr';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'n';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char const *const
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'names';
        func-mem-param-array = '[]';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *const
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'buffers';
        func-mem-param-array = '[]';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'sizes';
        func-mem-param-array = '[]';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '468';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Retrieve a list of user-defined container attribute values.

@param [in]  coh Container handle
@param [in]  n   Number of attributes
@param [in]  names   Array of \a n null-terminated attribute names.
@param [out] buffers Array of \a n buffers to store attribute values.
        Attribute values larger than corresponding buffer sizes
        will be truncated. NULL values are permitted and will be
        treated identical to zero-length buffers, in which case
        only the sizes of attribute values will be retrieved.
@param [in,out]
    sizes   [in]: Array of \a n buffer sizes. [out]: Array of actual
        sizes of \a n attribute values, regardless of given
        buffer sizes.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1ga0e96331dd7cc4f930938a4bcf146f74e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_set_attr';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'n';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char const *const
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'names';
        func-mem-param-array = '[]';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void const *const
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'values';
        func-mem-param-array = '[]';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t const
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'sizes';
        func-mem-param-array = '[]';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '484';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create or update a list of user-defined container attributes.

@param [in]  coh Container handle
@param [in]  n   Number of attributes
@param [in]  names   Array of \a n null-terminated attribute names.
@param [in]  values  Array of \a n attribute values
@param [in]  sizes   Array of \a n elements containing the sizes of
        respective attribute values.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1ga22d9e94cba3233caedef8d46019b6607';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_del_attr';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'n';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char const *const
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'names';
        func-mem-param-array = '[]';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '507';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Delete a list of user-defined container attributes.

@param [in]  coh Container handle
@param [in]  n   Number of attributes
@param [in]  names   Array of \a n null-terminated attribute names.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_INVAL  Invalid parameter
        -DER_NO_PERM    Permission denied
        -DER_UNREACH    Network is unreachable
        -DER_NO_HDL Invalid container handle
        -DER_NOMEM  Out of memory
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1gaa774a851cf98ae75dc7ed075ac4e814b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_alloc_oids';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_oids';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint64_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oid';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '533';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Allocate a unique set of 64 bit unsigned integers to be used for object ID
generation for that container. This is an optional helper function for
applications to use to guarantee unique object IDs on the container when more
than 1 client are accessing objects on the container. The highest used ID is
tracked in the container metadata for future access to that container. This
doesn't guarantee that the IDs allocated are sequential; and several ID
ranges could be discarded at container close.

@param [in]  coh Container open handle.
@param [in]  num_oids
        Number of unique IDs requested.
@param [out] oid starting oid that was allocated up to oid + num_oids.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid container open handle
        -DER_UNREACH    Network is unreachable
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1gaa6d5e5ebaf5ae854b97785eabc86419a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_aggregate';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_epoch_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'epoch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '546';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Trigger aggregation to specified epoch

@param [in]  coh Container handle
@param [in]  epoch   Epoch to be aggregated to. Current time will be used
        when 0 is specified.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1gad009b4e58db4cccc38f3d5a6d5732897';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_rollback';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_epoch_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'epoch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '557';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Rollback to a specific persistent snapshot.

@param [in]  coh Container handle
@param [in]  epoch   Epoch of a persistent snapshot to rollback to.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1gafab4df174d6e1a48b343d0d5a13e7038';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_subscribe';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_epoch_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'epoch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '576';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Subscribe to the container snapshot state. If user specifies a valid epoch,
the call will return once a persistent snapshot has been taken at that epoch
or a greater one. The epoch value will be updated with that epoch. If
multiple snapshots exist at an epoch greater than the one specified, the
lowest one will be returned in the epoch value. If the epoch value passed in
is 0, this call will return the lowest persistent snapshot on the container,
if any exist, otherwise will just wait till a persistent snapshot is created.

@param [in]  coh Container handle
@param [in,out]
    epoch   [in]: Epoch of snapshot to wait for. [out]: epoch of
        persistent snapshot that was taken.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1ga0aa2756744ae5f6afd756946927126c7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_create_snap';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_epoch_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'epoch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '594';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create a persistent snapshot at the current epoch and return it. The epoch
that is returned can be used to create a read only transaction to read data
from that persistent snapshot. Optionally the snapshot can be given a name as
an attribute which can be retrieved with daos_cont_list_snap(). Name length
can't exceed DAOS_SNAPSHOT_MAX_LEN.

@param [in]  coh Container handle
@param [out] epoch   returned epoch of persistent snapshot taken.
@param [in]  name    Optional null terminated name for snapshot.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1ga86a37dccb956c087c2b7bdd923944ff0';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_create_snap_opt';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_epoch_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'epoch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
enum daos_snapshot_opts
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'opts';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '620';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Advanced snapshot function, it can do different things based bits set
in \a opts:
- DAOS_SNAP_OPT_CR
  create a snapshot at the current epoch and return it.
- DAOS_SNAP_OPT_OIT
  create object ID table (OIT) for the snapshot

@param [in]  coh Container handle
@param [out] epoch   returned epoch of persistent snapshot taken.
@param [in]  name    Optional null terminated name for snapshot.
@param [in]  opts    Bit flags, see daos_snapshot_opts
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1ga7e166976d2bbd06192bcdcd47f4d5462';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_list_snap';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'nr';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_epoch_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'epochs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'names';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_anchor_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'anchor';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '643';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
List all the snapshots of a container and optionally retrieve the snapshot
name of each one if it was given at create time.

@param [in]  coh Container handle
@param [in,out]
    nr  [in]: Number of snapshots in epochs and names.
        [out]: Actual number of snapshots returned.
@param [out] epochs  preallocated array of epochs to store snapshots.
@param [out] names   preallocated array of names of the snapshots.
        DAOS_SNAPSHOT_MAX_LEN can be used for each name
        size if not known.
@param [in,out]
    anchor  Hash anchor for the next call, it should be set to
        zeroes for the first call, it should not be changed
        by caller between calls.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1ga794403da19e79aaed193c0ab187951ed';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_destroy_snap';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_epoch_range_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'epr';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '660';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destroy a snapshot. The epoch corresponding to the snapshot is not
discarded, but may be aggregated.

@param [in]  coh Container handle
@param [in]  epr Epoch range of snapshots to destroy.
        If epr_lo == epr_hi delete 1 snapshot at epr_lo/hi.
        If epr_lo == 0, delete all snapshots <= epr_hi.
        If epr_hi == DAOS_EPOCH_MAX, delete all snapshots
        >= epr_lo.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1gaaae23040ee2aff624b7f57673fca6c4f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_open2';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'cont';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_cont_info_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'info';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '668';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Backward compatibility code.
Please don't use directly
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1ga1db046abea95899206095e4980ca3225';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_destroy2';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'cont';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'force';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '676';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Backward compatibility code.
Please don't use directly
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1ga27a3d91f483a2a17218778f67a621af1';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_create2';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uuid_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'uuid';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_prop_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'cont_prop';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '683';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Backward compatibility code.
Please don't use directly
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___containers_1ga7de71b30130199c32b95bf323feb1eb1';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_cont_create1';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uuid_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'uuid';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_prop_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'cont_prop';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
      func-mem-desc-line = '685';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_cont.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
DAOS API methods
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'daos__errno_8h';
  file-name = 'daos_errno.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___g_u_r_t_1gaa9c72a58ad27ce61fffe0511cc0787ec';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'D_FOREACH_GURT_ERR';
      define-mem-param  = {
        define-mem-def-name = 'ACTION';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
	/** no permission */						\
	ACTION(DER_NO_PERM,		(DER_ERR_GURT_BASE + 1),	\
	       Operation not permitted)					\
	/** invalid handle */						\
	ACTION(DER_NO_HDL,		(DER_ERR_GURT_BASE + 2),	\
	       Invalid handle)						\
	/** invalid parameters */					\
	ACTION(DER_INVAL,		(DER_ERR_GURT_BASE + 3),	\
	       Invalid parameters)					\
	/** entity already exists */					\
	ACTION(DER_EXIST,		(DER_ERR_GURT_BASE + 4),	\
	       Entity already exists)					\
	/** nonexistent entity */					\
	ACTION(DER_NONEXIST,		(DER_ERR_GURT_BASE + 5),	\
	       The specified entity does not exist)			\
	/** unreachable node */						\
	ACTION(DER_UNREACH,		(DER_ERR_GURT_BASE + 6),	\
	       Unreachable node)					\
	/** no space on storage target */				\
	ACTION(DER_NOSPACE,		(DER_ERR_GURT_BASE + 7),	\
	       No space on storage target)				\
	/** already did sth */						\
	ACTION(DER_ALREADY,		(DER_ERR_GURT_BASE + 8),	\
	       Operation already performed)				\
	/** NO memory */						\
	ACTION(DER_NOMEM,		(DER_ERR_GURT_BASE + 9),	\
	       Out of memory)						\
	/** Function not implemented */					\
	ACTION(DER_NOSYS,		(DER_ERR_GURT_BASE + 10),	\
	       Function not implemented)				\
	/** timed out */						\
	ACTION(DER_TIMEDOUT,		(DER_ERR_GURT_BASE + 11),	\
	       Time out)						\
	/** Busy */							\
	ACTION(DER_BUSY,		(DER_ERR_GURT_BASE + 12),	\
	       Device or resource busy)					\
	/** Try again */						\
	ACTION(DER_AGAIN,		(DER_ERR_GURT_BASE + 13),	\
	       Try again)						\
	/** incompatible protocol */					\
	ACTION(DER_PROTO,		(DER_ERR_GURT_BASE + 14),	\
	       Incompatible protocol)					\
	/** not initialized */						\
	ACTION(DER_UNINIT,		(DER_ERR_GURT_BASE + 15),	\
	       Device or resource not initialized)			\
	/** buffer too short (larger buffer needed) */			\
	ACTION(DER_TRUNC,		(DER_ERR_GURT_BASE + 16),	\
	       Buffer too short)					\
	/** data too long for defined data type or buffer size */	\
	ACTION(DER_OVERFLOW,		(DER_ERR_GURT_BASE + 17),	\
	       Data too long for defined data type or buffer size)	\
	/** operation canceled */					\
	ACTION(DER_CANCELED,		(DER_ERR_GURT_BASE + 18),	\
	       Operation canceled)					\
	/** Out-Of-Group or member list */				\
	ACTION(DER_OOG,			(DER_ERR_GURT_BASE + 19),	\
	       Out of group or member list)				\
	/** transport layer mercury error */				\
	ACTION(DER_HG,			(DER_ERR_GURT_BASE + 20),	\
	       Transport layer mercury error)				\
	/** RPC or protocol version not registered */			\
	ACTION(DER_UNREG,		(DER_ERR_GURT_BASE + 21),	\
	       RPC or protocol version not registered)			\
	/** failed to generate an address string */			\
	ACTION(DER_ADDRSTR_GEN,		(DER_ERR_GURT_BASE + 22),	\
	       Failed to generate an address string)			\
	/** PMIx layer error */						\
	ACTION(DER_PMIX,		(DER_ERR_GURT_BASE + 23),	\
	       PMIx layer error)					\
	/** IV callback - cannot handle locally */			\
	ACTION(DER_IVCB_FORWARD,	(DER_ERR_GURT_BASE + 24),	\
	       Incast variable unavailable locally. Must forward)	\
	/** miscellaneous error */					\
	ACTION(DER_MISC,		(DER_ERR_GURT_BASE + 25),	\
	       Miscellaneous error)					\
	/** Bad path name */						\
	ACTION(DER_BADPATH,		(DER_ERR_GURT_BASE + 26),	\
	       Bad path name)						\
	/** Not a directory */						\
	ACTION(DER_NOTDIR,		(DER_ERR_GURT_BASE + 27),	\
	       Not a directory)						\
	/** corpc failed */						\
	ACTION(DER_CORPC_INCOMPLETE,	(DER_ERR_GURT_BASE + 28),	\
	       Collective RPC failed)					\
	/** no rank is subscribed to RAS */				\
	ACTION(DER_NO_RAS_RANK,		(DER_ERR_GURT_BASE + 29),	\
	       No rank is subscribed to RAS)				\
	/** service group not attached */				\
	ACTION(DER_NOTATTACH,		(DER_ERR_GURT_BASE + 30),	\
	       Service group not attached)				\
	/** version mismatch */						\
	ACTION(DER_MISMATCH,		(DER_ERR_GURT_BASE + 31),	\
	       Version mismatch)					\
	/** rank has been excluded */					\
	ACTION(DER_EXCLUDED,		(DER_ERR_GURT_BASE + 32),	\
	       Rank has been excluded)					\
	/** user-provided RPC handler didn't send reply back */		\
	ACTION(DER_NOREPLY,		(DER_ERR_GURT_BASE + 33),	\
	       User provided RPC handler did not send reply back)	\
	/** denial-of-service */					\
	ACTION(DER_DOS,			(DER_ERR_GURT_BASE + 34),       \
	       Denial of service)					\
	/** Incorrect target for the RPC  */				\
	ACTION(DER_BAD_TARGET,		(DER_ERR_GURT_BASE + 35),	\
	       Incorrect target for the RPC)				\
	/** Group versioning mismatch */				\
	ACTION(DER_GRPVER,		(DER_ERR_GURT_BASE + 36),	\
	       Group versioning mismatch)				\
	/** HLC synchronization error */				\
	ACTION(DER_HLC_SYNC,		(DER_ERR_GURT_BASE + 37),	\
	       HLC synchronization error)				\
	/** No shared memory available */				\
	ACTION(DER_NO_SHMEM,		(DER_ERR_GURT_BASE + 38),	\
	       Not enough shared memory free)				\
	/** Failed to add metric */					\
	ACTION(DER_ADD_METRIC_FAILED,   (DER_ERR_GURT_BASE + 39),	\
	       Failed to add the specified metric)			\
	/** Duration start/end mismatch */				\
	ACTION(DER_DURATION_MISMATCH,   (DER_ERR_GURT_BASE + 40),	\
	       Duration end not paired with duration start)		\
	/** Operation not permitted on metric type*/			\
	ACTION(DER_OP_NOT_PERMITTED,    (DER_ERR_GURT_BASE + 41),	\
	       Operation not permitted for metric type provided)	\
	/** Metric path name exceeds permitted length*/			\
	ACTION(DER_EXCEEDS_PATH_LEN,    (DER_ERR_GURT_BASE + 42),	\
	       Path name exceeds permitted length)			\
	/** Metric was not found.*/					\
	ACTION(DER_METRIC_NOT_FOUND,    (DER_ERR_GURT_BASE + 43),	\
	       Read failed because metric not found)			\
	/** Invalid user/group permissions.*/				\
	ACTION(DER_SHMEM_PERMS,         (DER_ERR_GURT_BASE + 44),	\
	       Unable to access shared memory segment due to		\
	       incompatible user or group permissions)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_errno.h';
      define-mem-desc-line = '27';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___g_u_r_t_1gadac50d4f561897772d3f415279ccfe15';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'D_FOREACH_DAOS_ERR';
      define-mem-param  = {
        define-mem-def-name = 'ACTION';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
	/** Generic I/O error */					\
	ACTION(DER_IO,			(DER_ERR_DAOS_BASE + 1),	\
	       I/O error)						\
	/** Memory free error */					\
	ACTION(DER_FREE_MEM,		(DER_ERR_DAOS_BASE + 2),	\
	       Memory free error)					\
	/** Entry not found */						\
	ACTION(DER_ENOENT,		(DER_ERR_DAOS_BASE + 3),	\
	       Entity not found)					\
	/** Unknown object type */					\
	ACTION(DER_NOTYPE,		(DER_ERR_DAOS_BASE + 4),	\
	       Unknown object type)					\
	/** Unknown object schema */					\
	ACTION(DER_NOSCHEMA,		(DER_ERR_DAOS_BASE + 5),	\
	       Unknown object schema)					\
	/** Object is not local */					\
	ACTION(DER_NOLOCAL,		(DER_ERR_DAOS_BASE + 6),	\
	       Object is not local)					\
	/** stale pool map version */					\
	ACTION(DER_STALE,		(DER_ERR_DAOS_BASE + 7),	\
	       Stale pool map version)					\
	/** Not service leader */					\
	ACTION(DER_NOTLEADER,		(DER_ERR_DAOS_BASE + 8),	\
	       Not service leader)					\
	/** * Target create error */					\
	ACTION(DER_TGT_CREATE,		(DER_ERR_DAOS_BASE + 9),	\
	       Target create error)					\
	/** Epoch is read-only */					\
	ACTION(DER_EP_RO,		(DER_ERR_DAOS_BASE + 10),	\
	       Epoch is read only)					\
	/** Epoch is too old, all data have been recycled */		\
	ACTION(DER_EP_OLD,		(DER_ERR_DAOS_BASE + 11),	\
	       Epoch is too old. All data have been recycled)		\
	/** Key is too large */						\
	ACTION(DER_KEY2BIG,		(DER_ERR_DAOS_BASE + 12),	\
	       Key is too large)					\
	/** Record is too large */					\
	ACTION(DER_REC2BIG,		(DER_ERR_DAOS_BASE + 13),	\
	       Record is too large)					\
	/** IO buffers can't match object extents */			\
	ACTION(DER_IO_INVAL,		(DER_ERR_DAOS_BASE + 14),	\
	       I/O buffers do not match object extents)			\
	/** Event queue is busy */					\
	ACTION(DER_EQ_BUSY,		(DER_ERR_DAOS_BASE + 15),	\
	       Event queue is busy)					\
	/** Domain of cluster component can't match */			\
	ACTION(DER_DOMAIN,		(DER_ERR_DAOS_BASE + 16),	\
	       Domain of cluster component do not match)		\
	/** Service should shut down */					\
	ACTION(DER_SHUTDOWN,		(DER_ERR_DAOS_BASE + 17),	\
	       Service should shut down)				\
	/** Operation now in progress */				\
	ACTION(DER_INPROGRESS,		(DER_ERR_DAOS_BASE + 18),	\
	       Operation now in progress)				\
	/** Not applicable. */						\
	ACTION(DER_NOTAPPLICABLE,	(DER_ERR_DAOS_BASE + 19),	\
	       Not applicable)						\
	/** Not a service replica */					\
	ACTION(DER_NOTREPLICA,		(DER_ERR_DAOS_BASE + 20),	\
	       Not a service replica)					\
	/** Checksum error */						\
	ACTION(DER_CSUM,		(DER_ERR_DAOS_BASE + 21),	\
	       Checksum error)						\
	/** Unsupported durable format */				\
	ACTION(DER_DF_INVAL,		(DER_ERR_DAOS_BASE + 22),	\
	       Unsupported durable format)				\
	/** Incompatible durable format version */			\
	ACTION(DER_DF_INCOMPT,		(DER_ERR_DAOS_BASE + 23),	\
	       Incompatible durable format version)			\
	/** Record size error */					\
	ACTION(DER_REC_SIZE,		(DER_ERR_DAOS_BASE + 24),	\
	       Record size error)					\
	/** Used to indicate a transaction should restart */		\
	ACTION(DER_TX_RESTART,		(DER_ERR_DAOS_BASE + 25),	\
	       Transaction should restart)				\
	/** Data lost or not recoverable */				\
	ACTION(DER_DATA_LOSS,		(DER_ERR_DAOS_BASE + 26),	\
	       Data lost or not recoverable)				\
	/** Operation canceled (non-crt) */				\
	ACTION(DER_OP_CANCELED,		(DER_ERR_DAOS_BASE + 27),	\
	       Operation canceled)					\
	/** TX is not committed, not sure whether committable or not */	\
	ACTION(DER_TX_BUSY,		(DER_ERR_DAOS_BASE + 28),	\
	       TX is not committed)					\
	/** Agent is incompatible with libdaos */			\
	ACTION(DER_AGENT_INCOMPAT,	(DER_ERR_DAOS_BASE + 29),	\
	       Agent is incompatible with libdaos)			\
	/** Multiple shards locate on the same target */		\
	ACTION(DER_SHARDS_OVERLAP,	(DER_ERR_DAOS_BASE + 30),	\
	       Shards overlap)						\
	/** #failures exceed RF(Redundancy Factor), data possibly lost */ \
	ACTION(DER_RF,			(DER_ERR_DAOS_BASE + 31),	\
	       Failures exceed RF)					\
	/** Re-fetch again, an internal error code used in EC deg-fetch */ \
	ACTION(DER_FETCH_AGAIN,		(DER_ERR_DAOS_BASE + 32),	\
	       Fetch again)						\
	/** Hit uncertain DTX, may need to try with other replica. */	\
	ACTION(DER_TX_UNCERTAIN,	(DER_ERR_DAOS_BASE + 33),	\
	       TX status is uncertaion)					\
	/** Communicatin issue with agent. */				\
	ACTION(DER_AGENT_COMM,		(DER_ERR_DAOS_BASE + 34),	\
	       Agent communication error)				\
	/** ID mismatch */						\
	ACTION(DER_ID_MISMATCH,		(DER_ERR_DAOS_BASE + 35),	\
	       ID mismatch)						\
	/** Retry with other target, an internal error code used in EC deg-fetch. */ \
	ACTION(DER_TGT_RETRY,		(DER_ERR_DAOS_BASE + 36),	\
		Retry with other target)				\
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_errno.h';
      define-mem-desc-line = '163';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
TODO: add more error numbers 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___g_u_r_t_1gab15ab808cd23b4ed3e602fd1deb6840e';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'D_FOREACH_ERR_RANGE';
      define-mem-param  = {
        define-mem-def-name = 'ACTION';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
	ACTION(GURT,	1000)		\
	ACTION(DAOS,	2000)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_errno.h';
      define-mem-desc-line = '274';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Defines the gurt error codes 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___g_u_r_t_1gae250daede0c57da3d6f031b0ea7ab384';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'D_DEFINE_ERRNO';
      define-mem-param  = {
        define-mem-def-name = 'name';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'value';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'desc';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
name = value,
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_errno.h';
      define-mem-desc-line = '278';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___g_u_r_t_1gab7a69ecbcf8e6fe84ef83401c747578c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'D_DEFINE_ERRSTR';
      define-mem-param  = {
        define-mem-def-name = 'name';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'value';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'desc';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
#name,
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_errno.h';
      define-mem-desc-line = '279';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___g_u_r_t_1ga040a6cd98f0157db825f0fa6d47ab5c6';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'D_DEFINE_ERRDESC';
      define-mem-param  = {
        define-mem-def-name = 'name';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'value';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'desc';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
#desc,
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_errno.h';
      define-mem-desc-line = '280';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___g_u_r_t_1gaeb8164d7aa7c931d723f5e1f720a1220';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'D_DEFINE_RANGE_ERRNO';
      define-mem-param  = {
        define-mem-def-name = 'name';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'base';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
	enum {							\
		DER_ERR_##name##_BASE		=	(base),	\
		D_FOREACH_##name##_ERR(D_DEFINE_ERRNO)		\
		DER_ERR_##name##_LIMIT,				\
	};
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_errno.h';
      define-mem-desc-line = '282';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___g_u_r_t_1ga26427764f0838c19f92bf1520f362f2a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'D_DEFINE_RANGE_ERRSTR';
      define-mem-param  = {
        define-mem-def-name = 'name';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
	static const char * const g_##name##_error_strings[] = {\
		D_FOREACH_##name##_ERR(D_DEFINE_ERRSTR)		\
	}; \
	static const char * const g_##name##_strerror[] = {	\
		D_FOREACH_##name##_ERR(D_DEFINE_ERRDESC)	\
	};
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_errno.h';
      define-mem-desc-line = '289';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___g_u_r_t_1ga7cf8f4650b80bb82b7665d0075e6ceea';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'D_REGISTER_RANGE';
      define-mem-param  = {
        define-mem-def-name = 'name';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
	d_errno_register_range(DER_ERR_##name##_BASE,	\
			       DER_ERR_##name##_LIMIT,	\
			       g_##name##_error_strings,\
			       g_##name##_strerror)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_errno.h';
      define-mem-desc-line = '300';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Macro to register a range defined using D_DEFINE_RANGE macros 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___g_u_r_t_1ga76611e335e067a33ca0f29c44d23edb5';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'D_DEREGISTER_RANGE';
      define-mem-param  = {
        define-mem-def-name = 'name';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
d_errno_deregister_range(DER_ERR_##name##_BASE)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_errno.h';
      define-mem-desc-line = '307';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Macro to deregister a range defined using D_DEFINE_RANGE macros 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___g_u_r_t_1gaa97303543fb142b9ce6c96855d214ded';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DER_SUCCESS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_errno.h';
      define-mem-desc-line = '310';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___g_u_r_t_1ga1e8878c22df202d90ffc25bf825488a2';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DER_UNKNOWN';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(DER_ERR_GURT_BASE + 500000)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_errno.h';
      define-mem-desc-line = '311';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'daos__errno_8h_1ac3352cd2760598fcd425976ac8e1cb29';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DO_PRAGMA';
      define-mem-param  = {
        define-mem-def-name = 'str';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
_Pragma(#str)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_errno.h';
      define-mem-desc-line = '356';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'daos__errno_8h_1a6ad03c05fc56452c8db18f5d1a4ee8d7';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DEPRECATE_ERROR';
      define-mem-param  = {
        define-mem-def-name = 'olde';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'newe';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
({								\
	DO_PRAGMA(message(#olde " is deprecated, use " #newe)); \
	newe;							\
})
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_errno.h';
      define-mem-desc-line = '357';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'daos__errno_8h_1ad4ddab31c34f7b686952f0fb88076eae';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DER_EVICTED';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
DEPRECATE_ERROR(DER_EVICTED, DER_EXCLUDED)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_errno.h';
      define-mem-desc-line = '362';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'daos__errno_8h_1ac5661eb1ac3a4d55889190340602c889';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DF_RC';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
"%s(%d): '%s'"
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_errno.h';
      define-mem-desc-line = '365';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'daos__errno_8h_1aae7938f3e2427913bbece3dc60a432b8';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DP_RC';
      define-mem-param  = {
        define-mem-def-name = 'rc';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
d_errstr(rc), rc, d_errdesc(rc)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_errno.h';
      define-mem-desc-line = '366';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___g_u_r_t_1ga24bb9b0d69b8724bc7ff9f02481ffaec';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'd_errstr';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rc';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_errno.h';
      func-mem-desc-line = '319';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Return a string associated with a registered gurt errno

@param [in]  rc  The error code

\return String value for error code or DER_UNKNOWN
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___g_u_r_t_1gaa85a73840aea4680b8885a65576290c3';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'd_errno_register_range';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'start';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'end';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *const *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'error_strings';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *const *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'strerror';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_errno.h';
      func-mem-desc-line = '334';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Register error codes with gurt.  Use D_REGISTER_RANGE.

@param [in]  start       Start of error range. Actual errors start at
            \p start + 1
@param [in]  end     End of range. All error codes should be less
            than \p end
@param [in]  error_strings   Array of strings. Must be one per
            code in the range
@param [in]  strerror    Array of strings. Must be one per
            code in the range

\return 0 on success, otherwise error code
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___g_u_r_t_1ga964fe46c46a4e09346312bb1d1686ed2';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'd_errno_deregister_range';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'start';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_errno.h';
      func-mem-desc-line = '342';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
De-register error codes with gurt.  Use D_DEREGISTER_RANGE.

@param [in]  start   Start of error range
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___g_u_r_t_1gacfdb5cd08a3f82d362bf5fb7ca473ae1';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'd_errdesc';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'errnum';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_errno.h';
      func-mem-desc-line = '351';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Return an error description string associated with a registered gurt errno.

@param [in]  errnum  The error code

\return     The error description string, or an "Unknown
        error nnn" message if the error number is unknown.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_errno.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'daos__event_8h';
  file-name = 'daos_event.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___events_1gaf8c317a42292b61c93aae91e59118a46';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'container_of';
      define-mem-param  = {
        define-mem-def-name = 'ptr';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'type';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'member';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((type *)((char *)(ptr)-(char *)(&((type *)0)->member)))
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_event.h';
      define-mem-desc-line = '46';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___events_1gadc5a410e279ad82988128abd3cef7341';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_EQ_DESTROY_FORCE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_event.h';
      define-mem-desc-line = '60';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    typedef = {
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group___events_1gac1a5e2f9c2884a5c5458d1296fb4845e';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
int(*
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'daos_event_comp_cb_t';
      typedef-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_event.h';
      typedef-mem-desc-line = '193';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___events_1ga956ad4221966854537303c68fc479aaa';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_eq_create';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'eqh';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_event.h';
      func-mem-desc-line = '58';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create an Event Queue.

@param eq [OUT] Returned EQ handle

\return     Zero on success, negative value if error
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___events_1gac7dfb4851d3cffdb311ae18d19e63af7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_eq_destroy';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'eqh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_event.h';
      func-mem-desc-line = '71';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destroy an Event Queue, it waits on -EBUSY if EQ is not empty.

@param eqh [IN] EQ to finalize
@param ev [IN]  Pointer to completion event
@param flags [IN]   Flags to indicate the behavior of the destroy.

\return     Zero on success, EBUSY if there is any launched event
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___events_1gac88e50ebe4ab9d702d1aa7dff5cbc447';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_eq_poll';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'eqh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'wait_running';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int64_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'timeout';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'nevents';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'events';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_event.h';
      func-mem-desc-line = '91';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Retrieve completion events from an EQ

@param eqh [IN] EQ handle
@param wait_running [IN] Wait only if there are running event. Some events
        maybe initialized but not running. This selects
        whether to wait only on events that are running or all.
@param timeout [IN] How long is caller going to wait (micro-second)
        if \a timeout > 0,
        it can also be DAOS_EQ_NOWAIT, DAOS_EQ_WAIT
@param nevents [IN] Size of \a events array, returned number of events
        should always be less than or equal to \a nevents
@param events [OUT] Pointer to returned events array

\return     >= 0    Returned number of events
        < 0 negative value if error
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___events_1ga6718ddd89d7bc15954d3483ab3c111a9';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_eq_query';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'eqh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_eq_query_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'query';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'nevents';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'events';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_event.h';
      func-mem-desc-line = '115';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Query how many outstanding events in EQ, if \a events is not NULL,
these events will be stored into it.

Events returned by query are still owned by DAOS, it's not allowed to
finalize or free events returned by this function, but it's allowed
to call daos_event_abort() to abort launched operation.

Also, the status of returned event could still be changing, for example,
the returned "launched" event can be turned to "completed" before accessing.
It is the user's responsibility to guarantee that returned events would be
freed by the polling process.

@param eqh [IN] EQ handle
@param mode [IN]    Query mode
@param nevents [IN] Size of \a events array
@param events [OUT] Pointer to returned events array
\return     >= 0    Returned number of events
         < 0    negative value if error
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___events_1ga6f1d8dcb6f0ecfa6a7e99190e63d3c9e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_event_init';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'eqh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parent';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_event.h';
      func-mem-desc-line = '140';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Initialize a new event for \a eq

@param ev [IN]  Event to initialize
@param eqh [IN] Where the event to be queued on, it's ignored if
        \a parent is specified
@param parent [IN]  "parent" event, it can be NULL if no parent event.
        If it's not NULL, caller will never see completion
        of this event, instead, will only see completion
        of \a parent when all children of \a parent are
        completed. The operation associated with the parent
        event may however be launched or completed before its
        children. The parent event completion is meant to be
        just an easy way to combine multiple events completion
        status into 1.

\return     0       Success
        -DER_INVAL  Invalid parameter
        -DER_NO_PERM    Permission denied
        -DER_NONEXIST   Event Queue does not exist
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___events_1ga3cac928fc307e41a08f8559ad8e2681a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_event_fini';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_event.h';
      func-mem-desc-line = '157';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Finalize an event. If event has been passed into any DAOS API, it can only
be finalized when it's been polled out from EQ, even if it is aborted by
calling daos_event_abort().
The event will be removed from child-list of the parent event if it is
initialized with parent. If \a ev itself is a parent event, then this
function will finalize all child events and \a ev.

@param ev [IN]  Event to finalize

\return     0       Success
        -DER_INVAL  Invalid parameter
        -DER_NONEXIST   Event Queue does not exist
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___events_1gab776ae46c78128d04c9a88d87a91f954';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_event_next';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parent';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'child';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_event.h';
      func-mem-desc-line = '170';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Get the next child event of \a ev, it will return the first child event
if \a child is NULL.

@param parent [IN]  Parent event
@param child [IN]   Current child event.

\return     The next child event after \a child, or NULL if it's
        the last one.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___events_1gaae7936cfef41a5f7e239b0be2a7a7f2d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_event_test';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_event *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int64_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'timeout';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flag';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_event.h';
      func-mem-desc-line = '191';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Test completion of an event. If \a ev is a child, the operation will fail.
If the event was initialized in an event queue, and the test completes the
event, the event will be pulled out of the event queue.

@param ev [IN]  Event (operation) to test.
@param timeout [IN] How long is caller going to wait (micro-second)
        if \a timeout > 0,
        it can also be DAOS_EQ_NOWAIT, DAOS_EQ_WAIT
@param flag [OUT]   returned state of the event. true if the event is
        finished (completed or aborted), false if in-flight.

\return     0       Success
        -DER_INVAL  Invalid parameter
        -DER_NO_PERM    Permission denied
        -DER_NONEXIST   Event Queue does not exist
        negative rc of associated operation of the event.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___events_1gae2ed2891948f2cda7c3f39151d78b8bb';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_event_register_comp_cb';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_event *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_comp_cb_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'cb';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'arg';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_event.h';
      func-mem-desc-line = '208';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Register completion callback on event.

@param ev [IN]  Event (operation).
@param cb [IN]  Completion callback to register.
@param arg [IN] User args passed to completion callback.

\return     0       Success
        -DER_INVAL  Invalid parameter
        -DER_NO_PERM    Permission denied
        negative rc of associated operation of the event.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___events_1gaf9f4b89fbc6533915e97362d9ae1aeb8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_event_parent_barrier';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_event *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_event.h';
      func-mem-desc-line = '232';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Mark the parent event as a launched barrier, meaning no more child events can
be added before all other child events have completed and the parent event
polled out of the EQ or tested for completion, if it is not in an EQ. The
parent won't be polled out of the EQ or returns done with daos_event_test
until all children have completed.

Note that if the parent event was launched as part of another daos operation,
this function should not be called anymore and the function the event was
launched with becomes the barrier operation. In that case, the operation
itself can be completed before the children do, but the event won't be marked
as ready before all the children complete.

@param ev [IN]  Parent event

\return     0       Success
        -DER_INVAL  Invalid parameter
        -DER_NO_PERM    Permission denied
        -DER_NONEXIST   Event Queue does not exist
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___events_1ga86f0db3c5e066d98fe7083e74a5b7edb';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_event_abort';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_event.h';
      func-mem-desc-line = '245';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Try to abort operations associated with this event.
If \a ev is a parent event, this call will abort all child operations.

@param ev [IN]  Event (operation) to abort

\return     0       Success
        -DER_INVAL  Invalid parameter
        -DER_NO_PERM    Permission denied
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_event.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'daos__fs_8h';
  file-name = 'daos_fs.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___filesystem_1gaf385ad5434afb0770e2090c374a31295';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DFS_MAX_NAME';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
NAME_MAX
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      define-mem-desc-line = '30';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Maximum Name length 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___filesystem_1ga62a51da77a8bf6bd2173c9f6664abf36';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DFS_MAX_PATH';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
PATH_MAX
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      define-mem-desc-line = '32';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Maximum PATH length 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___filesystem_1ga00f036421a8ac257185d0718ddeaece4';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DFS_MAX_FSIZE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(~0ULL)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      define-mem-desc-line = '34';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Maximum file size 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___filesystem_1ga1d3dac39e196483d5f51192b0d5098b2';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DFS_MAX_XATTR_NAME';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
255
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      define-mem-desc-line = '37';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Maximum xattr name 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___filesystem_1gaadd5bbc62d9cd31cdb5ea63c43ab6ded';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DFS_MAX_XATTR_LEN';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
65536
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      define-mem-desc-line = '39';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Maximum xattr value 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___filesystem_1ga186f6e178c99d4e413a1975174fa28d2';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DFS_BALANCED';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
4 /** DFS operations using a DTX */
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      define-mem-desc-line = '54';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___filesystem_1ga2bf57a7b53f7bf21791ae6de8377ab53';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DFS_RELAXED';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0 /** DFS operations do not use a DTX (default mode). */
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      define-mem-desc-line = '55';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___filesystem_1ga1c6ee0f987ed453c206ac0451d01a340';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DFS_RDONLY';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
O_RDONLY
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      define-mem-desc-line = '56';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___filesystem_1gac80d29e744635ec998fbfc058e0fa4b0';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DFS_RDWR';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
O_RDWR
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      define-mem-desc-line = '57';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___filesystem_1ga22ab22da8c7b88fc3b57fa6731607175';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DFS_SET_ATTR_MODE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(1 << 0)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      define-mem-desc-line = '763';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Option to set the mode_t on an entry 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___filesystem_1gaa762f57131bb9ec80a27facc6d926bfe';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DFS_SET_ATTR_ATIME';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(1 << 1)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      define-mem-desc-line = '765';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Option to set the access time on an entry 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___filesystem_1ga5aa953ddadc24beb0242887c7bb994bf';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DFS_SET_ATTR_MTIME';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(1 << 2)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      define-mem-desc-line = '767';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Option to set the modify time on an entry 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___filesystem_1ga00459d072fafa9a920629053095ddd1a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DFS_SET_ATTR_SIZE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(1 << 3)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      define-mem-desc-line = '769';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Option to set size of a file 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___filesystem_1ga0a266fc0611a7dfa7c742557d0221911';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'dfs_cont_create';
      define-mem-param  = {
        define-mem-def-name = 'poh';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'co';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = '...';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
	({								\
		int _ret;						\
		uuid_t *_u;						\
		if (d_is_uuid(co)) {					\
			_u = (uuid_t *)((unsigned char *)(co));		\
			_ret = dfs_cont_create((poh), _u, __VA_ARGS__);	\
		} else {						\
			_u = (uuid_t *)(co);				\
			_ret = dfs_cont_create2((poh), _u, __VA_ARGS__); \
		}							\
		_ret;							\
	})
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      define-mem-desc-line = '929';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
for backward compatility, support old api where a const uuid_t was required to be passed in for
the container to be created.
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    typedef = {
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group___filesystem_1ga51617a5017d3365ee5faf1452daed4b2';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
struct dfs_obj
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'dfs_obj_t';
      typedef-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      typedef-mem-desc-line = '1';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_
File/Directory/Symlink object handle struct 
_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group___filesystem_1gafc65ec05277f052daed166445bf3c828';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
struct dfs
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'dfs_t';
      typedef-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      typedef-mem-desc-line = '1';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_
DFS mount handle struct 
_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group___filesystem_1gabb7a47ee95057b7a41b3f8f0fd0c43e0';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
int(*
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'dfs_filler_cb_t';
      typedef-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      typedef-mem-desc-line = '475';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_
User callback defined for dfs_readdir_size.
_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1ga047a1e96259adb332e22cbeb005b87b8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_cont_create';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uuid_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'uuid';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_attr_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'attr';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '106';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create a DFS container with the POSIX property layout set.  Optionally set attributes for hints
on the container.

@param [in]  poh Pool open handle.
@param [out] uuid    Pointer to uuid_t to hold the implementation-generated container UUID.
@param [in]  attr    Optional set of properties and attributes to set on the container.
        Pass NULL if none.
@param [out] coh Optionally leave the container open and return its hdl.
@param [out] dfs Optionally mount DFS on the container and return the dfs handle.

\return              0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1ga5355410a0b5547152ef06418845058b5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_cont_create_with_label';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'label';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_attr_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'attr';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uuid_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'uuid';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '125';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create a DFS container with label \a label. This is the same as dfs_container_create() with the
label property set in \a attr->da_props.

@param [in]  poh Pool open handle.
@param [in]  label   Required, label property of the new container.
        Supersedes any label specified in \a cont_prop.
@param [in]  attr    Optional set of properties and attributes to set on the container.
        Pass NULL if none.
@param [out] uuid    Optional pointer to uuid_t to hold the implementation-generated container
        UUID.
@param [out] coh Optionally leave the container open and return its hdl.
@param [out] dfs Optionally mount DFS on the container and return the dfs handle.

\return              0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1ga4df6382671f7d7803a440dca57885668';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_mount';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '144';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Mount a file system over DAOS. The pool and container handle must remain
connected/open until after dfs_umount() is called; otherwise access to the
dfs namespace will fail.

The mount will create a root directory (DAOS object) for the file system. The
user will associate the dfs object returned with a mount point.

@param [in]  poh Pool connection handle
@param [in]  coh Container open handle.
@param [in]  flags   Mount flags (O_RDONLY or O_RDWR).
@param [out] dfs Pointer to the file system object created.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1gadae8b520eca7d1a4f020c5505d1acc79';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_umount';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '156';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Unmount a DAOS file system. This closes open handles to the root object and
commits the epoch at current timestamp. The internal dfs struct is freed, so
further access to that dfs will be invalid.

@param [in]  dfs Pointer to the mounted file system.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1ga7ab5ef3406cec0657eb614491b93db72';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_query';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_attr_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'attr';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '167';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Query attributes of a DFS mount.

@param [in]  dfs Pointer to the mounted file system.
@param [out] attr    Attributes on the DFS container.

\return              0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1gaf1f78b4ccd59d75929f9925f03ff2f33';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_local2global';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
d_iov_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'glob';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '182';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Convert a local dfs mount to global representation data which can be
shared with peer processes.
If glob->iov_buf is set to NULL, the actual size of the global handle is
returned through glob->iov_buf_len.
This function does not involve any communication and does not block.

@param [in]  dfs valid dfs mount to be shared
@param [out] glob    pointer to iov of the buffer to store mount information

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1gae0c92f37e9c1d8b889016b7bf4b32230';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_global2local';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
d_iov_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'glob';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '199';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create a dfs mount from global representation data. This has to be closed
with dfs_umount().

@param [in]  poh Pool connection handle
@param [in]  coh Container open handle.
@param [in]  flags   Mount flags (O_RDONLY or O_RDWR). If 0, inherit flags
        of serialized DFS handle.
@param [in]  glob    Global (shared) representation of a collective handle
        to be extracted
@param [out] dfs Returned dfs mount

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1ga208f16f7183e9eeaefdbdb851ccc747e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_set_prefix';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'prefix';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '215';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Optionally set a prefix on the dfs mount where all paths passed to dfs_lookup
are trimmed off that prefix. This is helpful when using DFS API with a dfuse
mount and the user would like to reference files in the dfuse mount instead
of the absolute path from the root of the DFS container.

@param [in]  dfs Pointer to the mounted file system.
@param [in]  prefix  absolute prefix to trim off path to dfs_lookup.
        Passing NULL unsets the prefix.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1ga9bc7cbbf60d1e47964d1423cfed31151';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_obj2id';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_obj_id_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oid';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '226';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Convert from a dfs_obj_t to a daos_obj_id_t.

@param [in]  obj Object to convert
@param [out] oid Daos object ID.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1gac9545c72f174f1d64d8533fc1f50ac00';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_lookup';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'path';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
mode_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mode';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct stat *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stbuf';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '242';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Lookup a path in the DFS and return the associated open object and mode.
The object must be released with dfs_release().

@param [in]  dfs Pointer to the mounted file system.
@param [in]  path    Path to lookup.
@param [in]  flags   Access flags to open with (O_RDONLY or O_RDWR).
@param [out] obj Pointer to the object looked up.
@param [out] mode    Optional mode_t of object looked up.
@param [out] stbuf   Optional stat struct of object looked up.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1ga17a88c52335a5564470a85d63731c8be';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_lookup_rel';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parent';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
mode_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mode';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct stat *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stbuf';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '265';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Lookup an entry in the parent object and return the associated open object
and mode of that entry.  If the entry is a symlink, the symlink value is not
resolved and the user can decide what to do to further resolve the value of
the symlink. The object must be released with dfs_release().

@param [in]  dfs Pointer to the mounted file system.
@param [in]  parent  Opened parent directory object. If NULL, use root obj.
        This is useful in cases where the creator/opener is
        working in a flat namespace and doesn't need to
        lookup/release the root object.
@param [in]  name    Link name of the object to create/open.
@param [in]  flags   Access flags to open with (O_RDONLY or O_RDWR).
@param [out] obj Pointer to the object looked up.
@param [out] mode    Optional mode_t of object looked up.
@param [out] stbuf   Optional stat struct of object looked up.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1ga43eee0ce15ae1ab80a4b83a06d494bd5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_open';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parent';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
mode_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mode';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_oclass_id_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'cid';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'chunk_size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'value';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '293';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create/Open a directory, file, or Symlink.
The object must be released with dfs_release().

@param [in]  dfs Pointer to the mounted file system.
@param [in]  parent  Opened parent directory object. If NULL, use root obj.
        This is useful in cases where the creator/opener is
        working in a flat namespace and doesn't need to
        lookup/release the root object.
@param [in]  name    Link name of the object to create/open.
@param [in]  mode    mode_t (permissions + type).
@param [in]  flags   Access flags (handles: O_RDONLY, O_RDWR, O_EXCL,
        O_CREAT, O_TRUNC).
@param [in]  cid DAOS object class id (pass 0 for default MAX_RW).
        Valid on create only; ignored otherwise.
@param [in]  chunk_size
        Chunk size of the array object to be created.
        (pass 0 for default 1 MiB chunk size).
        Valid on file create only; ignored otherwise.
@param [in]  value   Symlink value (NULL if not syml).
@param [out] obj Pointer to object opened.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1gaaea10fe5a325092f81734d66512008bb';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_dup';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'new_obj';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '310';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Duplicate the DFS object without any RPCs (locally) by using the existing
open handles. This is used mostly for low-level fuse to avoid re-opening. The
duplicated object must be released with dfs_release().

@param [in]  dfs Pointer to the mounted file system.
@param [in]  obj Object to dup.
@param [in]  flags   Access flags to open with (O_RDONLY or O_RDWR).
@param [out] new_obj DFS object that is duplicated/opened.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1ga9c525bd5a23582a8ead2d446362444c7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_obj_local2global';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
d_iov_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'glob';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '326';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Convert a local DFS object to global representation data which can be
shared with peer processes.
If glob->iov_buf is set to NULL, the actual size of the global handle is
returned through glob->iov_buf_len.
This function does not involve any communication and does not block.

@param [in]  dfs     Pointer to the mounted file system.
@param [in]  obj DFS Object to serialize
@param [out] glob    pointer to iov of the buffer to store obj information

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1gaaef818c617008ecfc074c8fa4d3d187b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_obj_global2local';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
d_iov_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'glob';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '342';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create a dfs object from global representation data. This has to be closed
with dfs_release().

@param [in]   dfs     Pointer to the mounted file system.
@param [in]  flags   Access flags (O_RDONLY/O_RDWR/O_WRONLY). If 0, inherit
        flags of serialized object handle.
@param [in]  glob    Global (shared) representation of a collective handle
        to be extracted
@param [out] obj Returned open object handle

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1ga3bcecbd1d0a831609b5f1b7ea8e356d1';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_release';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '352';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Close/release open object.

@param [in]  obj Object to release.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1gab4b6be160170ad080e424eb09e9eeb53';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_read';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
d_sg_list_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'sgl';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_off_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'off';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'read_size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '369';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Read data from the file object, and return actual data read.

@param [in]  dfs Pointer to the mounted file system.
@param [in]  obj Opened file object.
@param [in]  sgl Scatter/Gather list for data buffer.
@param [in]  off Offset into the file to read from.
@param [out] read_size
        How much data is actually read.
@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1ga89c401c372b949678c9a85a1977da9b5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_readx';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_iod_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'iod';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
d_sg_list_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'sgl';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'read_size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '388';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Non-contiguous read interface to a DFS file.
Same as dfs_read with the ability to have a segmented file layout to read.

@param [in]  dfs Pointer to the mounted file system.
@param [in]  obj Opened file object.
@param [in]  iod IO descriptor for list-io.
@param [in]  sgl Scatter/Gather list for data buffer.
@param [out] read_size
        How much data is actually read.
@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1gaca8d8aa052bd7b7cae79a4e4e634889f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_write';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
d_sg_list_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'sgl';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_off_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'off';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '404';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Write data to the file object.

@param [in]  dfs Pointer to the mounted file system.
@param [in]  obj Opened file object.
@param [in]  sgl Scatter/Gather list for data buffer.
@param [in]  off Offset into the file to write to.
@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1ga057440757b2e420b362f646f32505091';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_writex';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_iod_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'iod';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
d_sg_list_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'sgl';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '420';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Non-contiguous write interface to a DFS file.

@param [in]  dfs Pointer to the mounted file system.
@param [in]  obj Opened file object.
@param [in]  iod IO descriptor of file view.
@param [in]  sgl Scatter/Gather list for data buffer.
@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1ga9ba9f6ae30d0ba6cb53418950ac0a5ff';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_get_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '433';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Query size of file data.

@param [in]  dfs Pointer to the mounted file system.
@param [in]  obj Opened file object.
@param [out] size    Size of file.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1gaae348e42a1fca083a53f884c0a725a54';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_punch';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_off_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'len';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '448';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Punch a hole in the file starting at offset to len. If len is set to
DFS_MAX_FSIZE, this will be equivalent to a truncate operation to shrink or
extend the file to \a offset bytes depending on the file size.

@param [in]  dfs Pointer to the mounted file system.
@param [in]  obj Opened file object.
@param [in]  offset  offset of file to punch at.
@param [in]  len number of bytes to punch.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1gadb4ba70e262cfc93051ce23a1b31ce84';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_readdir';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_anchor_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'anchor';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'nr';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct dirent *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dirs';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '469';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
directory readdir.

@param [in]  dfs Pointer to the mounted file system.
@param [in]  obj Opened directory object.
@param [in,out]
    anchor  Hash anchor for the next call, it should be set to
        zeroes for the first call, it should not be changed
        by caller between calls.
@param [in,out]
    nr  [in]: number of dirents allocated in \a dirs.
        [out]: number of returned dirents.
@param [in,out]
    dirs    [in] preallocated array of dirents.
        [out]: dirents returned with d_name filled only.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1gad1e9e057b7be0af8abde9751de6a5d4a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_iterate';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_anchor_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'anchor';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'nr';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_filler_cb_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'op';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'arg';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '499';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Same as dfs_readdir, but this also adds a buffer size limitation when
enumerating. On every entry, it issues a user defined callback. If size
limitation is reached, function returns E2BIG

@param [in]  dfs Pointer to the mounted file system.
@param [in]  obj Opened directory object.
@param [in,out]
    anchor  Hash anchor for the next call, it should be set to
        zeroes for the first call, it should not be changed
        by caller between calls.
@param [in,out]
    nr  [in]: MAX number of entries to enumerate.
        [out]: Actual number of entries enumerated.
@param [in]  size    Max buffer size to be used internally before breaking.
@param [in]  op  Optional callback to be issued on every entry.
@param [in]  arg Pointer to user data to be passed to \a op.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1gaf77af4a335a88dc8fc4fb9b608ff248d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_obj_anchor_split';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'nr';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_anchor_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'anchors';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '523';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Provide a function for large directories to split an anchor to be able to
execute a parallel readdir or iterate. This routine suggests the optimal
number of anchors to use instead of just 1 and optionally returns all those
anchors. The user would allocate the array of anchors after querying the
number of anchors needed. Alternatively, user does not provide an array and
can call dfs_obj_anchor_set() for every anchor to set.

The user could suggest how many anchors to split the iteration over. This
feature is not supported yet.

@param [in]  obj Dir object to split anchor for.
@param [in,out]
    nr  [in]: Number of anchors requested and allocated in
        \a anchors. Pass 0 for DAOS to recommend split num.
        [out]: Number of anchors recommended if 0 is passed in.
@param [in]  anchors Optional array of anchors that are split.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1ga158200a32fbb8f23766f4eed69ccc4c4';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_obj_anchor_set';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'index';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_anchor_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'anchor';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '538';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Set an anchor with an index based on split done with dfs_obj_anchor_split.
The anchor passed will be re-intialized and set to start and finish iteration
based on the specified index.

@param [in]   obj     Dir object to split anchor for.
@param [in]  index   Index of set this anchor for iteration.
@param [in,out]
    anchor  Hash anchor to set.

\return              0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1gaea80aad002519a8f2606a09e50353968';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_mkdir';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parent';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
mode_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mode';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_oclass_id_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'cid';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '552';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create a directory.

@param [in]  dfs Pointer to the mounted file system.
@param [in]  parent  Opened parent directory object. If NULL, use root obj.
@param [in]  name    Link name of new dir.
@param [in]  mode    mkdir mode.
@param [in]  cid DAOS object class id (pass 0 for default MAX_RW).

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1ga1e049abc4666778f326b604c6f4b3c36';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_remove';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parent';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'force';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_obj_id_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oid';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '569';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Remove an object from parent directory. If object is a directory and is
non-empty; this will fail unless force option is true. If object is a
symlink, the symlink is removed.

@param [in]  dfs Pointer to the mounted file system.
@param [in]  parent  Opened parent directory object. If NULL, use root obj.
@param [in]  name    Name of object to remove in parent dir.
@param [in]  force   If true, remove dir even if non-empty.
@param [in]  oid Optionally return the DAOS Object ID of the removed obj.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1ga054f1a57950e4bd35e22dbe68a3cd859';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_move';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parent';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'new_parent';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'new_name';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_obj_id_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oid';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '588';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Move/rename an object.

@param [in]  dfs Pointer to the mounted file system.
@param [in]  parent  Source parent directory object. If NULL, use root obj.
@param [in]  name    Link name of object.
@param [in]  new_parent
        Target parent directory object. If NULL, use root obj.
@param [in]  new_name
        New link name of object.
@param [in]  oid Optionally return the DAOS Object ID of a removed obj
        as a result of a rename.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1gaa3c8518e00b90e38822f9d506491392f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_exchange';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parent1';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name1';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parent2';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name2';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '603';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Exchange two objects.

@param [in]  dfs Pointer to the mounted file system.
@param [in]  parent1 Parent directory object of name1. If NULL, use root obj.
@param [in]  name1   Link name of first object.
@param [in]  parent2 Parent directory object of name2. If NULL, use root obj.
@param [in]  name2   link name of second object.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1ga18fcbc5b7692f444fffc2c553b432d09';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_get_mode';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
mode_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mode';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '615';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Retrieve mode of an open object.

@param [in]  obj Open object to query.
@param [out] mode    mode_t (permissions + type).

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1ga09283ee716eef2188bbf42ed63b1673e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_obj_get_info';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_info_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'info';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '628';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Retrieve some attributes of DFS object. Those include the object class and
the chunk size.

@param [in]   dfs     Pointer to the mounted file system.
@param [in]   obj    Open object handle to query.
@param [out]  info   info object container object class, chunks size, etc.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1gab34f8d825c3fa3bbb35244dabfede778';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_obj_set_oclass';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_oclass_id_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'cid';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '645';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Set the object class on a directory for new files or sub-dirs that are
created in that dir.  This does not change the chunk size for existing files
or dirs in that directory, nor it does change the object class of the
directory itself. Note that this is only supported on directories and will
fail if called on non-directory objects.

@param [in]   dfs     Pointer to the mounted file system.
@param [in]   obj    Open object handle to access.
@param [in]  flags   Flags for setting oclass (currently ignored)
@param [in]   cid    object class.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1gaab3c7f029fea34fbc2b040d6447ae346';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_obj_set_chunk_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'csize';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '661';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Set the chunk size on a directory for new files or sub-dirs that are created
in that dir.  This does not change the chunk size for existing files or dirs
in that directory. Note that this is only supported on directories and will
fail if called on non-directory objects.

@param [in]   dfs     Pointer to the mounted file system.
@param [in]   obj    Open object handle to access.
@param [in]  flags   Flags for setting chunk size (currently ignored)
@param [in]   csize  Chunk size to set object to.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1ga450cfe1742662f471eb1485dddbcc4d5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_get_file_oh';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '676';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Retrieve the DAOS open handle of a DFS file object. User should not close
this handle. This is used in cases like MPI-IO where 1 rank creates the file
with dfs, but wants to access the file with the array API directly rather
than the DFS API.

@param [in]  obj Open object.
@param [out] oh  DAOS object open handle.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1gaa811fee7902929800ee96a9a5ded6dc8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_get_chunk_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'chunk_size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '688';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Retrieve the chunk size of a DFS file object.

@param [in]  obj Open object.
@param [out] chunk_size
        Chunk size of array object.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1ga911de1ce30bc7a6c810137d047888243';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_get_symlink_value';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'buf';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '704';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Retrieve Symlink value of object if it's a symlink. If the buffer size passed
in is not large enough, we copy up to size of the buffer, and update the size
to actual value size. The size returned includes the null terminator.

@param [in]  obj Open object to query.
@param [in]  buf user buffer to copy the symlink value in.
@param [in,out]
    size    [in]: Size of buffer passed in. [out]: Actual size of
        value.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1ga883c4df60bcaf52273e2f096c4e0ddc8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_update_parent';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'src_obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '723';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
A DFS object open handle has links to its parent (oid) and the entry name of
that object in that parent. In some cases a user would want to update the oh
of an object in case of a rename. This API would allow modifying an existing
open handle of an object to change it's parent and it's entry name. Note this
is a local operation and doesn't change anything on the storage.

@param [in]  obj Open object handle to update.
@param [in]  src_obj
        Open object handle of the object whose parent will be
        used as the new parent of \a obj.
@param [in]  name    Optional new name of entry in parent. Pass NULL to leave
        the entry name unchanged.

\return     0 on Success. errno code on Failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1ga7f55f6356c88a84ff54db804da745a2d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_stat';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parent';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct stat *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stbuf';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '747';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
stat attributes of an entry. If object is a symlink, the link itself is
interogated. The following elements of the stat struct are populated
(the rest are set to 0):
mode_t    st_mode;
uid_t     st_uid;
gid_t     st_gid;
off_t     st_size;
blkcnt_t  st_blocks
struct timespec st_atim;
struct timespec st_mtim;
struct timespec st_ctim;

@param [in]  dfs Pointer to the mounted file system.
@param [in]  parent  Opened parent directory object. If NULL, use root obj.
@param [in]  name    Link name of the object. Can be NULL if parent is root,
        which means operation will be on root object.
@param [out] stbuf   Stat struct with the members above filled.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1gaf34c0ae9ff73c65d4472feb20015e640';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_ostat';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct stat *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stbuf';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '760';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Same as dfs_stat but works directly on an open object.

@param [in]  dfs Pointer to the mounted file system.
@param [in]  obj Open object (File, dir or syml) to stat.
@param [out] stbuf   Stat struct with the members above filled.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1ga7649bef0218dbc40c9dc69a4a114ea72';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_osetattr';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct stat *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stbuf';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '786';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
set stat attributes for a file and fetch new values.  If the object is a
symlink the link itself is modified.  See dfs_stat() for which entries
are filled.

@param [in]  dfs Pointer to the mounted file system.
@param [in]  obj Open object (File, dir or syml) to modify.
@param [in,out]
    stbuf   [in]: Stat struct with the members set.
        [out]: Stat struct with all valid members filled.
@param [in]  flags   Bitmask of flags to set

\return     0 on Success. errno code on Failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1gac21def5311d89db750c68673a06372e4';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_access';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parent';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mask';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '803';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Check access permissions on an object. Similar to Linux access(2).
Symlinks are dereferenced.

@param [in]  dfs Pointer to the mounted file system.
@param [in]  parent  Opened parent directory object. If NULL, use root obj.
@param [in]  name    Link name of the object. Can be NULL if parent is root,
        which means operation will be on root object.
@param [in]  mask    accessibility check(s) to be performed.
        It should be either the value F_OK, or a mask with
        bitwise OR of one or more of R_OK, W_OK, and X_OK.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1gab0ec66e439b43c39be0760e3fe699b95';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_chmod';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parent';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
mode_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mode';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '818';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Change permission access bits. Symlinks are dereferenced.

@param [in]  dfs Pointer to the mounted file system.
@param [in]  parent  Opened parent directory object. If NULL, use root obj.
@param [in]  name    Link name of the object. Can be NULL if parent is root,
        which means operation will be on root object.
@param [in]  mode    New permission access modes. For now, we don't support
        the sticky bit, setuid, and setgid.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1gaf895c18266b07bed6e71654e7a302888';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_sync';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '831';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sync to commit the latest epoch on the container. This applies to the entire
namespace and not to a particular file/directory.

TODO: This should take a persistent snapshot at current timestamp.

@param [in]  dfs Pointer to the mounted file system.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1ga42279dceaa061070b8b0a74017d992e9';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_setxattr';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const void *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'value';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '849';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Set extended attribute on an open object (File, dir, syml). If object is a
symlink, the value is set on the symlink itself.

@param [in]  dfs Pointer to the mounted file system.
@param [in]  obj Open object where xattr will be added.
@param [in]  name    Name of xattr to add.
@param [in]  value   Value of xattr.
@param [in]  size    Size in bytes of the value.
@param [in]  flags   Set flags. passing 0 does not check for xattr existence.
        XATTR_CREATE: create or fail if xattr exists.
        XATTR_REPLACE: replace or fail if xattr does not exist.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1ga5bf7c83df00d76441569881ee71739f0';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_getxattr';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'value';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '866';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Get extended attribute of an open object. If object is a symlink, the link
itself is interogated.

@param [in]  dfs Pointer to the mounted file system.
@param [in]  obj Open object where xattr is checked.
@param [in]  name    Name of xattr to get.
@param [out] value   Buffer to place value of xattr.
@param [in,out]
    size    [in]: Size of buffer value. [out]: Actual size of xattr.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1gaa96ea44fc5cd8b3c678ff4de2769432c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_removexattr';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '880';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Remove extended attribute of an open object. If object is a symlink, the link
itself is interogated.

@param [in]  dfs Pointer to the mounted file system.
@param [in]  obj Open object where xattr will be removed.
@param [in]  name    Name of xattr to remove.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1ga59a8280f33a55f1c1203c130720efbdb';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_listxattr';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'list';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '898';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
list extended attributes of an open object and place them all in a buffer
NULL terminated one after the other. If object is a symlink, the link itself
is interogated.

@param [in]  dfs Pointer to the mounted file system.
@param [in]  obj Open object where xattrs will be listed.
@param [in,out]
    list    [in]: Allocated buffer for all xattr names.
        [out]: Names placed after each other (null terminated).
@param [in,out]
    size    [in]: Size of list. [out]: Actual size of list.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1ga974f3ede5ceca6299c8115642140b819';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_cont_create2';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uuid_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'cuuid';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_attr_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'attr';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '901';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___filesystem_1ga7103c615801d6d86c49f6b75ee4c0c3d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_cont_create1';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uuid_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'cuuid';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_attr_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'attr';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
      func-mem-desc-line = '904';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
DAOS File System API

The DFS API provides an encapuslated namespace with a POSIX like API directly
on top of the DAOS API. The namespace is encapsulated under a single DAOS
container where directories and files are objects in that container.
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'daos__fs__sys_8h';
  file-name = 'daos_fs_sys.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'daos__fs__sys_8h_1a85d229971bbb8fe4edb4f9f5578371b3';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DFS_SYS_NO_CACHE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      define-mem-desc-line = '29';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Mount flags for dfs_sys_mount. By default, mount with caching and locking turned on. 
Turn off directory caching 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'daos__fs__sys_8h_1a406769dad3ba98e6407d138f523f28ea';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DFS_SYS_NO_LOCK';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      define-mem-desc-line = '30';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Turn off locking. Useful for single-threaded applications. 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    typedef = {
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
struct dfs_sys
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'dfs_sys_t';
      typedef-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      typedef-mem-desc-line = '1';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_
struct holding attributes for the dfs_sys calls 
_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__fs__sys_8h_1aa4310faf0b81eb691dfe58803a6e59f3';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_sys_mount';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mflags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'sflags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_sys_t **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs_sys';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      func-mem-desc-line = '47';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Mount a file system with dfs_mount and optionally initialize a cache.

@param [in]  poh Pool connection handle.
@param [in]  coh Container open handle.
@param [in]  mflags  Mount flags (O_RDONLY or O_RDWR).
@param [in]  sflags  Sys flags (DFS_SYS_NO_CACHE or DFS_SYS_NO_LOCK)
@param [out] dfs_sys Pointer to the file system object created.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__fs__sys_8h_1a8b61b29527f80c1dac4cbd99da19b68b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_sys_umount';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_sys_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs_sys';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      func-mem-desc-line = '58';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Unmount a file system with dfs_mount.

@param [in]  dfs_sys Pointer to the mounted file system.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__fs__sys_8h_1acd0941409a44ecc831baceaa64da04ae';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_sys_local2global';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_sys_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs_sys';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
d_iov_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'glob';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      func-mem-desc-line = '73';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Convert a local dfs_sys mount to global representation data which can be
shared with peer processes.
If glob->iov_buf is set to NULL, the actual size of the global handle is
returned through glob->iov_buf_len.
This function does not involve any communication and does not block.

@param [in]  dfs_sys valid dfs_sys mount to be shared.
@param [out] glob    pointer to iov of the buffer to store mount information.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__fs__sys_8h_1a70c1910e7375c989758d7c62fb3c6636';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_sys_global2local';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mflags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'sflags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
d_iov_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'glob';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_sys_t **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs_sys';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      func-mem-desc-line = '89';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create a dfs_sys mount from global representation data. This has to be
closed with dfs_sys_umount().

@param [in]  poh Pool connection handle.
@param [in]  coh Container open handle.
@param [in]  mflags  Mount flags (O_RDONLY or O_RDWR). If 0, inherit flags
        of serialized DFS Sys handle.
@param [in]  sflags  Sys flags (DFS_SYS_NO_CACHE or DFS_SYS_NO_LOCK).
        This is not inherited from the DFS Sys handle.
@param [in]  glob    Global (shared) representation of a collective handle to be extracted.
@param [out] dfs_sys Returned dfs_sys mount.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__fs__sys_8h_1a55700f92fe0af5458af843e0e5f828e2';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_sys2base';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_sys_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs_sys';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_t **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      func-mem-desc-line = '102';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Get the underlying dfs_t from the dfs_sys_t.
This should not be closed with dfs_umount().

@param [in]  dfs_sys Pointer to the mounted file system.
@param [out] dfs Pointer to the underlying dfs_t.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__fs__sys_8h_1a821528212d0ade018e43ce68c93ff425';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_sys_access';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_sys_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs_sys';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'path';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mask';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      func-mem-desc-line = '118';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Check access permissions on a path. Similar to Linux access(2).
By default, symlinks are dereferenced.

@param [in]  dfs_sys Pointer to the mounted file system.
@param [in]  path    Link path of object.
@param [in]  mask    accessibility check(s) to be performed.
        It should be either the value F_OK, or a mask with
        bitwise OR of one or more of R_OK, W_OK, and X_OK.
@param [in]  flags   Access flags (O_NOFOLLOW).

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__fs__sys_8h_1a3d77734aaa37862e4a7aa6eba99bdedf';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_sys_chmod';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_sys_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs_sys';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'path';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
mode_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mode';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      func-mem-desc-line = '131';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Change permission access bits. Symlinks are dereferenced.

@param [in]  dfs_sys Pointer to the mounted file system.
@param [in]  path    Link path of object.
@param [in]  mode    New permission access modes. For now, we don't support
        the sticky bit, setuid, and setgid.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__fs__sys_8h_1adc7fe0314eae59805607c7cf7c196dc9';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_sys_setattr';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_sys_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs_sys';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'path';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct stat *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stbuf';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'sflags';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      func-mem-desc-line = '149';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
set stat attributes for a file and fetch new values.
By default, if the object is a symlink the link itself is modified.
See dfs_sys_stat() for which entries are filled.

@param [in]  dfs_sys Pointer to the mounted file system.
@param [in]  path    Link path of object.
@param [in,out]
    stbuf   [in]: Stat struct with the members set.
        [out]: Stat struct with all valid members filled.
@param [in]  flags   Bitmask of flags to set.
@param [in]  sflags  (O_NOFOLLOW)

\return     0 on Success. errno code on Failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__fs__sys_8h_1ace808c585382babaa2f3984f9604aa6c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_sys_utimens';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_sys_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs_sys';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'path';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const struct timespec
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'times';
        func-mem-param-array = '[2]';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      func-mem-desc-line = '165';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Set atime and mtime of a path. This currently does not set
nanosecond precision.

@param [in]  dfs_sys Pointer to the mounted file system.
@param [in]  path    Link path of object.
@param [in]  times   [0]: atime to set
        [1]: mtime to set
@param [in]  flags   (O_NOFOLLOW)

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__fs__sys_8h_1a06d9c1cd0015cccc4aec3a6c94874562';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_sys_stat';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_sys_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs_sys';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'path';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct stat *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stbuf';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      func-mem-desc-line = '189';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
stat attributes of an entry. By default, if object is a symlink,
the link itself is interrogated. The following elements of the
stat struct are populated (the rest are set to 0):
mode_t  st_mode;
uid_t   st_uid;
gid_t   st_gid;
off_t   st_size;
blkcnt_t    st_blocks;
struct timespec st_atim;
struct timespec st_mtim;
struct timespec st_ctim;

@param [in]  dfs_sys Pointer to the mounted file system.
@param [in]  path    Link path of object.
@param [in]  flags   Stat flags (O_NOFOLLOW).
@param [out] stbuf   Stat struct with the members above filled.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__fs__sys_8h_1a4b7e92840dbed47865c7d6353a59943a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_sys_mknod';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_sys_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs_sys';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'path';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
mode_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mode';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_oclass_id_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'cid';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'chunk_size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      func-mem-desc-line = '208';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create a file or directory.

@param [in]  dfs_sys Pointer to the mounted file system.
@param [in]  path    Link path of new object.
@param [in]  mode    mode_t (permissions + type).
@param [in]  cid DAOS object class id (pass 0 for default MAX_RW).
        Valid on create only; ignored otherwise.
@param [in]  chunk_size
        Chunk size of the array object to be created.
        (pass 0 for default 1 MiB chunk size).
        Valid on file create only; ignored otherwise.

\return     0 on success, errno code on failure.
        EEXIST  If path already exists.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__fs__sys_8h_1ae66a3eb29fe2aec32a8e2321b9f5c305';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_sys_listxattr';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_sys_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs_sys';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'path';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'list';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      func-mem-desc-line = '229';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
list extended attributes of a path and place them all in a buffer
NULL terminated one after the other. By default, if path is a
symlink, the link itself is interrogated.

@param [in]  dfs_sys Pointer to the mounted file system.
@param [in]  path    Link path of object.
@param [in,out]
    list    [in]: Allocated buffer for all xattr names.
        [out]: Names placed after each other (null terminated).
@param [in,out]
    size    [in]: Size of list. [out]: Actual size of list.
@param [in]  flags   (O_NOFOLLOW)

\return     0 on success, errno code on failure.
        ERANGE  If size is too small.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__fs__sys_8h_1a235bc71c01ad4acdd7434018f36cc63f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_sys_getxattr';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_sys_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs_sys';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'path';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'value';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      func-mem-desc-line = '248';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Get extended attribute of a path. By default, if path is a symlink,
the link itself is interrogated.

@param [in]  dfs_sys Pointer to the mounted file system.
@param [in]  path    Link path of object.
@param [in]  name    Name of xattr to get.
@param [out] value   Buffer to place value of xattr.
@param [in,out]
    size    [in]: Size of buffer value. [out]: Actual size of xattr.
@param [in]  flags   (O_NOFOLLOW)

\return     0 on success, errno code on failure.
        ERANGE  If size is too small.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__fs__sys_8h_1abbbcbdf9413593c201447ec664ef9ee5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_sys_setxattr';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_sys_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs_sys';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'path';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const void *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'value';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'sflags';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      func-mem-desc-line = '268';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Set extended attribute on a path (file, dir, syml). By default, if path
is a symlink, the value is set on the symlink itself.

@param [in]  dfs_sys Pointer to the mounted file system.
@param [in]  path    Link path of object.
@param [in]  name    Name of xattr to add.
@param [in]  value   Value of xattr.
@param [in]  size    Size in bytes of the value.
@param [in]  flags   Set flags. passing 0 does not check for xattr existence.
        XATTR_CREATE: create or fail if xattr exists.
        XATTR_REPLACE: replace or fail if xattr does not exist.
@param [in]  sflags  (O_NOFOLLOW)

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__fs__sys_8h_1aa945c6fcd1203d38881b4ed48af8d15d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_sys_removexattr';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_sys_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs_sys';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'path';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      func-mem-desc-line = '284';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Remove extended attribute of a path. By default, if path is a symlink,
the link itself is interogated.

@param [in]  dfs_sys Pointer to the mounted file system.
@param [in]  path    Link path of object.
@param [in]  name    Name of xattr to remove.
@param [in]  flags   (O_NOFOLLOW)

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__fs__sys_8h_1a4bc1c2c98f3b0b3925c91271077467f2';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_sys_readlink';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_sys_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs_sys';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'path';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'buf';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      func-mem-desc-line = '303';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Retrieve Symlink value of path if it's a symlink. If the buffer size passed
in is not large enough, we copy up to size of the buffer, and update the
size to actual value size. The size returned includes the null terminator.

@param [in]  dfs_sys Pointer to the mounted file system.
@param [in]  path    Link path of object.
@param [in,out]
    buf [in]: Allocated buffer for value.
        [out]: Symlink value.
@param [in,out]
    size    [in]: Size of buffer passed in. [out]: Actual size of value.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__fs__sys_8h_1a94676aa5564f92f615f8a8c44a32453f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_sys_symlink';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_sys_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs_sys';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'target';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'path';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      func-mem-desc-line = '316';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create a symlink.

@param [in]  dfs_sys Pointer to the mounted file system.
@param [in]  target  Symlink value.
@param [in]  path    Path to the new symlink.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__fs__sys_8h_1a36e34a03096ab25e088aed43be4abafb';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_sys_open';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_sys_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs_sys';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'path';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
mode_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mode';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_oclass_id_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'cid';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'chunk_size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'value';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      func-mem-desc-line = '339';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create/Open a directory, file, or Symlink.
The object must be released with dfs_sys_close().

@param [in]  dfs_sys Pointer to the mounted file system.
@param [in]  path    Link path of the object to create/open.
@param [in]  mode    mode_t (permissions + type).
@param [in]  flags   Access flags (handles: O_RDONLY, O_RDWR, O_EXCL,
        O_CREAT, O_TRUNC, O_NOFOLLOW).
@param [in]  cid DAOS object class id (pass 0 for default MAX_RW).
        Valid on create only; ignored otherwise.
@param [in]  chunk_size
        Chunk size of the array object to be created.
        (pass 0 for default 1 MiB chunk size).
        Valid on file create only; ignored otherwise.
@param [in]  value   Symlink value (NULL if not syml).
@param [out] obj Pointer to object opened.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__fs__sys_8h_1a4a0f7bcac0468d647920af6a7d737bbc';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_sys_close';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      func-mem-desc-line = '351';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Close/release open object.

@param [in]  obj Object to release.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__fs__sys_8h_1a0f63c60fbaa68948b6e547539a70ec4c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_sys_read';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_sys_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs_sys';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'buf';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_off_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'off';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      func-mem-desc-line = '370';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Read data from the file object, and return actual data read.

@param [in]  dfs_sys Pointer to the mounted file system.
@param [in]  obj Opened file object.
@param [in,out]
    buf [in]: Allocated buffer for data.
        [out]: Actual data read.
@param [in]  off Offset into the file to read from.
@param [in,out]
    size    [in]: Size of buffer passed in. [out]: Actual size of data read.
@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__fs__sys_8h_1a21b1fc9f0d51e54c566f62be95097c84';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_sys_write';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_sys_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs_sys';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_obj_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'obj';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const void *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'buf';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_off_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'off';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      func-mem-desc-line = '388';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Write data to the file object.

@param [in]  dfs_sys Pointer to the mounted file system.
@param [in]  obj Opened file object.
@param [in]  buf Data to write.
@param [in]  off Offset into the file to write to.
@param [in,out]
    size    [in]: Size of buffer passed in. [out]: Actual size of data written.
@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__fs__sys_8h_1a18b52b035cb2f0275f5d1921545480f3';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_sys_punch';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_sys_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs_sys';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'path';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_off_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'offset';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_off_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'len';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      func-mem-desc-line = '405';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Punch a hole in the file starting at offset to len. If len is set to
DFS_MAX_FSIZE, this will be a truncate operation to punch all bytes in the
file above offset. If the file size is smaller than offset, the file is
extended to offset and len is ignored.

@param [in]  dfs_sys Pointer to the mounted file system.
@param [in]  path    Link path of file.
@param [in]  offset  offset of file to punch at.
@param [in]  len number of bytes to punch.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__fs__sys_8h_1ad28b5347d4a4a226335580baec031ae9';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_sys_remove';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_sys_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs_sys';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'path';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'force';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_obj_id_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oid';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      func-mem-desc-line = '422';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Remove an object identified by path. If object is a directory and is
non-empty; this will fail unless force option is true. If object is a
symlink, the symlink is removed.
See dfs_remove() for details.

@param [in]  dfs_sys Pointer to the mounted file system.
@param [in]  path    Link path of object.
@param [in]  force   If true, remove dir even if non-empty.
@param [in]  oid Optionally return the DAOS Object ID of the removed obj.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__fs__sys_8h_1a3e9ddefd2aebf07acbbcdb5d12073380';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_sys_remove_type';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_sys_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs_sys';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'path';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'force';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
mode_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mode';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_obj_id_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oid';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      func-mem-desc-line = '439';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Similar to dfs_sys_remove but optionally enforces a type check
on the entry.

@param [in]  dfs_sys Pointer to the mounted file system.
@param [in]  path    Link path of object.
@param [in]  force   If true, remove dir even if non-empty.
@param [in]  mode    mode_t (S_IFREG | S_IFDIR | S_IFLNK).
        Pass 0 skip the type check.
@param [out] oid Optionally return the DAOS Object ID of the removed obj.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__fs__sys_8h_1a407bac4d155b04591490d6a67f743baf';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_sys_mkdir';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_sys_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs_sys';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dir';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
mode_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mode';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_oclass_id_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'cid';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      func-mem-desc-line = '453';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create a directory.

@param [in]  dfs_sys Pointer to the mounted file system.
@param [in]  dir Link path of new dir.
@param [in]  mode    mkdir mode.
@param [in]  cid DAOS object class id (pass 0 for default MAX_RW).

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__fs__sys_8h_1a596764235e708b078539d39893e39853';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_sys_opendir';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_sys_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs_sys';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dir';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
DIR **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dirp';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      func-mem-desc-line = '468';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Open a directory.
The directory must be closed with dfs_sys_closedir().

@param [in]  dfs_sys Pointer to the mounted file system.
@param [in]  dir Link path of dir.
@param [in]  flags   (O_NOFOLLOW)
@param [out] dirp    Pointer to the open directory.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__fs__sys_8h_1a96af25c135edcea67877c748e8529b95';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_sys_closedir';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
DIR *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dirp';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      func-mem-desc-line = '478';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Close a directory opened with dfs_sys_opendir().

@param [in]  dirp    Pointer to the open directory.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'daos__fs__sys_8h_1a0725233d7d2ab701f83231968b26d63c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'dfs_sys_readdir';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
dfs_sys_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dfs_sys';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
DIR *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dirp';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct dirent **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dirent';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
      func-mem-desc-line = '492';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Return the next directory entry in a directory opened by
dfs_sys_readdir(), or NULL if there are no more entries.

@param [in]  dfs_sys Pointer to the mounted file system.
@param [in]  dirp    Pointer to open directory.
@param [out] dirent  Pointer to the next directory entry.
        This is NULL if there are no more directory entries.

\return     0 on success, errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_fs_sys.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
(C) Copyright 2018-2021 Intel Corporation.

SPDX-License-Identifier: BSD-2-Clause-Patent


DAOS File System "Sys" API

The DFS Sys API provides a simplified layer directly on top of the DFS API that is more
similar to the equivalent POSIX libraries. While the DFS Sys API stands on its own,
the DFS API can be used directly by getting the DFS Object with dfs_sys2base().
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'daos__kv_8h';
  file-name = 'daos_kv.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___k_v_1ga0c3739abb79f2f6d630010c72b1769ca';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_COND_KEY_INSERT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
DAOS_COND_DKEY_INSERT
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_kv.h';
      define-mem-desc-line = '26';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___k_v_1ga28790aa071e2f975324089c87b077d94';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_COND_KEY_UPDATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
DAOS_COND_DKEY_UPDATE
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_kv.h';
      define-mem-desc-line = '28';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___k_v_1gacb714e87cf7b9fcea1f294c0750bdb26';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_COND_KEY_GET';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
DAOS_COND_DKEY_FETCH
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_kv.h';
      define-mem-desc-line = '30';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___k_v_1ga80ab508926fb5ab4c10f8aca275316a6';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_COND_KEY_REMOVE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
DAOS_COND_PUNCH
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_kv.h';
      define-mem-desc-line = '32';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___k_v_1gad05d00c41c670cd91e2e3fc8ca69f7bd';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_kv_open';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_obj_id_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oid';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mode';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_kv.h';
      func-mem-desc-line = '53';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Open a KV object. This is a local operation (no RPC involved).
The feat bits in the oid must set DAOS_OF_KV_FLAT.

@param [in]  coh Container open handle.
@param [in]  oid Object ID. It is required that the feat for dkey type
        be set to DAOS_OF_KV_FLAT.
@param [in]  mode    Open mode: DAOS_OO_RO/RW
@param [out] oh  Returned kv object open handle.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid container handle
        -DER_INVAL  Invalid parameter
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___k_v_1gaf0bebe7eb7bf3c618b4fb71e8a39c71d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_kv_close';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_kv.h';
      func-mem-desc-line = '69';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Close an opened KV object.

@param [in]  oh  KV object open handle.
@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid object open handle
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___k_v_1gada5a9ad798e7b54fcf6b8bbe674bbf36';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_kv_destroy';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_kv.h';
      func-mem-desc-line = '88';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destroy the kV object by punching all data (keys) in the kv object.
daos_obj_punch() is called underneath. The oh still needs to be closed with a
call to daos_kv_close().

@param [in]  oh  KV object open handle.
@param [in]  th  Transaction handle.
@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid object open handle
        -DER_INVAL  Invalid parameter
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___k_v_1ga3f3cd19cee87b92e19b860b42458f848';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_kv_put';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'key';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const void *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'buf';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_kv.h';
      func-mem-desc-line = '114';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Insert or update a single object KV pair. If a value existed before it will
be overwritten (punched first if not previously an atomic value) with the new
atomic value described by the sgl.

@param [in]  oh  Object open handle.
@param [in]  th  Transaction handle.
@param [in]  flags   Update flags.
@param [in]  key Key associated with the update operation.
@param [in]  size    Size of the buffer to be inserted as an atomic val.
@param [in]  buf Pointer to user buffer of the atomic value.
@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid object open handle
        -DER_INVAL  Invalid parameter
        -DER_NO_PERM    Permission denied
        -DER_UNREACH    Network is unreachable
        -DER_EP_RO  Epoch is read-only
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___k_v_1ga23cae3d831736069a32833f64f5f5cc7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_kv_get';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'key';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'buf';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_kv.h';
      func-mem-desc-line = '142';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Fetch value of a key.

@param [in]  oh  Object open handle.
@param [in]  th  Transaction handle.
@param [in]  flags   Fetch flags.
@param [in]  key key associated with the update operation.
@param [in,out]
    size    [in]: Size of the user buf. if the size is unknown, set
        to DAOS_REC_ANY). [out]: The actual size of the value.
@param [out] buf Pointer to user buffer. If NULL, only size is returned.
@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid object open handle
        -DER_INVAL  Invalid parameter
        -DER_NO_PERM    Permission denied
        -DER_UNREACH    Network is unreachable
        -DER_REC2BIG    Record does not fit in buffer
        -DER_EP_RO  Epoch is read-only
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___k_v_1gafc6948a98b48daa2129054f4c47e55b1';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_kv_remove';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'key';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_kv.h';
      func-mem-desc-line = '165';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Remove a Key and it's value from the KV store

@param [in]  oh  Object open handle.
@param [in]  th  Transaction handle.
@param [in]  flags   Remove flags.
@param [in]  key Key to be punched/removed.
@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid object open handle
        -DER_INVAL  Invalid parameter
        -DER_NO_PERM    Permission denied
        -DER_UNREACH    Network is unreachable
        -DER_EP_RO  Epoch is read-only
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___k_v_1ga6fe2aa213fc2aab3840f20436cc9a6ae';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_kv_list';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'nr';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_key_desc_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kds';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
d_sg_list_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'sgl';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_anchor_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'anchor';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_kv.h';
      func-mem-desc-line = '199';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
List/enumerate all keys in an object.

@param [in]  oh  Object open handle.
@param [in]  th  Transaction handle.
@param [in,out]
    nr  [in]: number of key descriptors in \a kds. [out]: number
        of returned key descriptors.
@param [in,out]
    kds [in]: preallocated array of \a nr key descriptors.
        [out]: size of each individual key.
@param [in]  sgl Scatter/gather list to store the dkey list.
        All keys are written contiguously, with actual
        boundaries that can be calculated using \a kds.
@param [in,out]
    anchor  Hash anchor for the next call, it should be set to
        zeroes for the first call, it should not be changed
        by caller between calls.
@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid object open handle
        -DER_INVAL  Invalid parameter
        -DER_NO_PERM    Permission denied
        -DER_UNREACH    Network is unreachable
        -DER_EP_RO  Epoch is read-only
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_kv.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
DAOS flat Key-Value Store

The KV API simplify the DAOS 2 key-level object into a simple KV interface
for users who are just interested in a traditional KV store API.
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'daos__obj_8h';
  file-name = 'daos_obj.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___object_1ga50bf00cd6e35c0cb4fca9b9028449415';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_OBJ_NIL';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((daos_obj_id_t){0})
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      define-mem-desc-line = '21';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___object_1gaf6cf07da24f4d1d5d797c8dded3b9183';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'OID_FMT_VER';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      define-mem-desc-line = '24';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
the current OID version 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___object_1ga6e827318e60c8fb10f9f9a1743ffdeb5';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'OID_FMT_INTR_BITS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
32
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      define-mem-desc-line = '27';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
32 bits for DAOS internal use 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___object_1ga9ad8f0c0ae7b7bb402fbe5e69a6c6990';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'OID_FMT_VER_BITS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
4
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      define-mem-desc-line = '29';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of reserved by daos in object id for version 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___object_1ga2a78a514cd805d1c12048159ffaf1308';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'OID_FMT_FEAT_BITS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      define-mem-desc-line = '31';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of reserved by daos in object id for features 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___object_1gac1b5e80dc121f9be1cc4283cdea68bdc';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'OID_FMT_CLASS_BITS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
				 (OID_FMT_INTR_BITS - OID_FMT_VER_BITS - \
				 OID_FMT_FEAT_BITS)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      define-mem-desc-line = '33';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of reserved by daos in object id for class id 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___object_1gab8ae2c87877cf92d74d2e98d531f3887';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'OID_FMT_VER_SHIFT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(64 - OID_FMT_VER_BITS)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      define-mem-desc-line = '37';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Bit shift for object version in object id 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___object_1gaeabb96073177cb5daaaaf5f833ab0d7f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'OID_FMT_FEAT_SHIFT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(OID_FMT_VER_SHIFT - OID_FMT_FEAT_BITS)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      define-mem-desc-line = '39';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Bit shift for object features in object id 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___object_1gacd34f177e4efb7923a3a399c4aff7dc1';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'OID_FMT_CLASS_SHIFT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(OID_FMT_FEAT_SHIFT - OID_FMT_CLASS_BITS)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      define-mem-desc-line = '41';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Bit shift for object class id in object id 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___object_1ga2c62d04c8ce286c4f27f6485a33a5b36';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'OID_FMT_VER_MAX';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((1ULL << OID_FMT_VER_BITS) - 1)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      define-mem-desc-line = '44';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Maximum valid object version setting 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___object_1gaf4d0c03b791d27a49d9a1259b63fbb8d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'OID_FMT_FEAT_MAX';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((1ULL << OID_FMT_FEAT_BITS) - 1)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      define-mem-desc-line = '46';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Maximum valid object feature setting 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___object_1gac363015d1bab238ef13ed3c29d56690c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'OID_FMT_CLASS_MAX';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((1ULL << OID_FMT_CLASS_BITS) - 1)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      define-mem-desc-line = '48';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Maximum valid object class setting 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___object_1gae2aa3232b3d3b04255e28bd78965f242';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'OID_FMT_VER_MASK';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(OID_FMT_VER_MAX << OID_FMT_VER_SHIFT)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      define-mem-desc-line = '51';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Mask for object version 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___object_1ga75f02b5264ffa638d2f1add5f67d0b1c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'OID_FMT_FEAT_MASK';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(OID_FMT_FEAT_MAX << OID_FMT_FEAT_SHIFT)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      define-mem-desc-line = '53';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Mask for object features 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___object_1ga5b6e268ad436ce59a98b747f0fddea14';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'OID_FMT_CLASS_MASK';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(OID_FMT_CLASS_MAX << OID_FMT_CLASS_SHIFT)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      define-mem-desc-line = '55';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Mask for object class id 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___object_1ga894ef9dc89009c226ca921abca33571f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IO_FLAGS_COND_BITS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
8
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      define-mem-desc-line = '90';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of bits reserved in IO flags bitmap for conditional checks.  
<br>
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___object_1ga57109faf60a87bdd6ac1b5653e0b2e45';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_IOMF_DETAIL';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(0x1U)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      define-mem-desc-line = '245';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
I/O map flags -
DAOS_IOMF_DETAIL    zero means only need to know the iom_recx_hi/lo.
        1 means need to retrieve detailed iom_recxs array, in
        that case user can either -
        1) provides allocated iom_recxs buffer (iom_nr indicates
           #elements allocated), if returned iom_nr_out is
           greater than iom_nr, iom_recxs will still be
           populated, but it will be a truncated list).
        2) provides NULL iod_recxs and zero iom_nr, in that case
           DAOS will internally allocated needed buffer for
           iom_recxs array (#elements is iom_nr, and equals
           iom_nr_out). User is responsible for free the
           iom_recxs buffer after using.
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___object_1ga5258661415881972f2c148f8e9e025b0';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_OCH_RDD_BITS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
4
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      define-mem-desc-line = '369';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___object_1ga8469bba5462aba1242b39c5c4f423dbd';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_OCH_SHD_BITS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
6
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      define-mem-desc-line = '370';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___object_1ga55768ca3c2d91d4d2c15fb7491fb8a70';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_OCH_RDD_SHIFT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      define-mem-desc-line = '371';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___object_1ga72df250ea15ff59e1069c66467aa5a1a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_OCH_SHD_SHIFT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
DAOS_OCH_RDD_BITS
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      define-mem-desc-line = '372';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___object_1ga7b08fed6e4c818ff7c923cfc44b54323';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_OCH_RDD_MAX_VAL';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((1ULL << DAOS_OCH_RDD_BITS) - 1)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      define-mem-desc-line = '373';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___object_1ga9e5ebb4510ef8b3b4ce3d98152a062d5';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_OCH_SHD_MAX_VAL';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((1ULL << DAOS_OCH_SHD_BITS) - 1)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      define-mem-desc-line = '374';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___object_1gaf717de7c41288403e816924e83489595';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_OCH_RDD_MASK';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(DAOS_OCH_RDD_MAX_VAL << DAOS_OCH_RDD_SHIFT)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      define-mem-desc-line = '375';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___object_1ga3912408a5a99d52174bd17116a4275ba';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_OCH_SHD_MASK';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(DAOS_OCH_SHD_MAX_VAL << DAOS_OCH_SHD_SHIFT)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      define-mem-desc-line = '376';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    enum = {
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___object_1gadf764cbdea00d65edcd07bb9953ad2b7';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = '@1';
      enum-mem-enum = { enum-name = DAOS_OF_DKEY_UINT64; enum-value = '= (1 << 0)'; };
      enum-mem-enum = { enum-name = DAOS_OF_DKEY_LEXICAL; enum-value = '= (1 << 1)'; };
      enum-mem-enum = { enum-name = DAOS_OF_AKEY_UINT64; enum-value = '= (1 << 2)'; };
      enum-mem-enum = { enum-name = DAOS_OF_AKEY_LEXICAL; enum-value = '= (1 << 3)'; };
      enum-mem-enum = { enum-name = DAOS_OF_KV_FLAT; enum-value = '= (1 << 4)'; };
      enum-mem-enum = { enum-name = DAOS_OF_ARRAY; enum-value = '= (1 << 5)'; };
      enum-mem-enum = { enum-name = DAOS_OF_ARRAY_MD; enum-value = '= (1 << 6)'; };
      enum-mem-enum = { enum-name = DAOS_OF_ARRAY_BYTE; enum-value = '= (1 << 7)'; };
      enum-mem-enum = { enum-name = DAOS_OF_ECHO; enum-value = '= (1 << 15)'; };
      enum-mem-enum = { enum-name = DAOS_OF_MASK; enum-value = '= ((1 << OID_FMT_FEAT_BITS) - 1)'; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      enum-mem-desc-line = '57';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___object_1ga99fb83031ce9923c84392b4e92f956b5';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = '@2';
      enum-mem-enum = { enum-name = DAOS_COND_PUNCH; enum-value = '= (1 << 0)'; };
      enum-mem-enum = { enum-name = DAOS_COND_DKEY_INSERT; enum-value = '= (1 << 1)'; };
      enum-mem-enum = { enum-name = DAOS_COND_DKEY_UPDATE; enum-value = '= (1 << 2)'; };
      enum-mem-enum = { enum-name = DAOS_COND_DKEY_FETCH; enum-value = '= (1 << 3)'; };
      enum-mem-enum = { enum-name = DAOS_COND_AKEY_INSERT; enum-value = '= (1 << 4)'; };
      enum-mem-enum = { enum-name = DAOS_COND_AKEY_UPDATE; enum-value = '= (1 << 5)'; };
      enum-mem-enum = { enum-name = DAOS_COND_AKEY_FETCH; enum-value = '= (1 << 6)'; };
      enum-mem-enum = { enum-name = DAOS_COND_PER_AKEY; enum-value = '= (1 << 7)'; };
      enum-mem-enum = { enum-name = DAOS_COND_MASK; enum-value = '= ((1 << IO_FLAGS_COND_BITS) - 1)'; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      enum-mem-desc-line = '92';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___object_1gabc6126af1d45847bc59afa0aa3216b04';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = '@3';
      enum-mem-enum = { enum-name = DAOS_OO_RO; enum-value = '= (1 << 1)'; };
      enum-mem-enum = { enum-name = DAOS_OO_RW; enum-value = '= (1 << 2)'; };
      enum-mem-enum = { enum-name = DAOS_OO_EXCL; enum-value = '= (1 << 3)'; };
      enum-mem-enum = { enum-name = DAOS_OO_IO_RAND; enum-value = '= (1 << 4)'; };
      enum-mem-enum = { enum-name = DAOS_OO_IO_SEQ; enum-value = '= (1 << 5)'; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      enum-mem-desc-line = '128';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
Object open modes 
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___object_1gab06c379248eb344585279218839d165a';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = 'daos_iod_type_t';
      enum-mem-enum = { enum-name = DAOS_IOD_NONE; enum-value = '= 0'; };
      enum-mem-enum = { enum-name = DAOS_IOD_SINGLE; enum-value = '= 1'; };
      enum-mem-enum = { enum-name = DAOS_IOD_ARRAY; enum-value = '= 2'; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      enum-mem-desc-line = '182';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
Type of the value accessed in an IOD 
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___object_1gadc29c2ff13d900c2f185ee95427fb06c';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = '@4';
      enum-mem-enum = { enum-name = DAOS_REC_ANY; enum-value = '= 0'; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      enum-mem-desc-line = '285';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
record status 
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___object_1ga61dadd085c1777f559549e05962b2c9e';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = '@5';
      enum-mem-enum = { enum-name = DAOS_GET_MAX; enum-value = '= (1 << 0)'; };
      enum-mem-enum = { enum-name = DAOS_GET_MIN; enum-value = '= (1 << 1)'; };
      enum-mem-enum = { enum-name = DAOS_GET_DKEY; enum-value = '= (1 << 2)'; };
      enum-mem-enum = { enum-name = DAOS_GET_AKEY; enum-value = '= (1 << 3)'; };
      enum-mem-enum = { enum-name = DAOS_GET_RECX; enum-value = '= (1 << 4)'; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      enum-mem-desc-line = '291';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
Mask for daos_obj_query_key() flags to indicate what is being queried 
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___object_1ga726ca809ffd3d67ab4b8476646f26635';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = '@6';
      enum-mem-enum = { enum-name = DAOS_OCH_RDD_DEF; enum-value = '= (1 << 0)'; };
      enum-mem-enum = { enum-name = DAOS_OCH_RDD_NO; enum-value = '= (1 << 1)'; };
      enum-mem-enum = { enum-name = DAOS_OCH_RDD_RP; enum-value = '= (1 << 2)'; };
      enum-mem-enum = { enum-name = DAOS_OCH_RDD_EC; enum-value = '= (1 << 3)'; };
      enum-mem-enum = { enum-name = DAOS_OCH_SHD_DEF; enum-value = '= (1 << 4)'; };
      enum-mem-enum = { enum-name = DAOS_OCH_SHD_TINY; enum-value = '= (1 << 5)'; };
      enum-mem-enum = { enum-name = DAOS_OCH_SHD_REG; enum-value = '= (1 << 6)'; };
      enum-mem-enum = { enum-name = DAOS_OCH_SHD_HI; enum-value = '= (1 << 7)'; };
      enum-mem-enum = { enum-name = DAOS_OCH_SHD_EXT; enum-value = '= (1 << 8)'; };
      enum-mem-enum = { enum-name = DAOS_OCH_SHD_MAX; enum-value = '= (1 << 9)'; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      enum-mem-desc-line = '379';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
Flags for oclass hints 
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___object_1gacf1280051b81bc9cc027b18ddc97b26a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static void
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(deprecated)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      func-mem-desc-line = '331';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Deprecated - use daos_obj_generate_oid()
Generate a DAOS object ID by encoding the private DAOS bits of the object address space.

@param [in,out]
    oid [in]: Object ID with low 96 bits set and unique inside
        the container. [out]: Fully populated DAOS object
        identifier with the the low 96 bits untouched and the
        DAOS private bits (the high 32 bits) encoded.
@param [in]  ofeats  Feature bits specific to object
@param [in]  cid Class Identifier
@param [in]  args    Reserved.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___object_1ga90a6ec5d1d4652a2e27f4601a41e6b2b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static daos_oclass_id_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_obj_id2class';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_obj_id_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oid';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      func-mem-desc-line = '355';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___object_1ga4c786594d1720a16e338ccd0c3f9b90d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static bool
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_obj_id_is_nil';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_obj_id_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oid';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      func-mem-desc-line = '364';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___object_1ga6a254a72b728607b212850f0eefcdff4';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_obj_generate_oid';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_obj_id_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oid';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_ofeat_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ofeats';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_oclass_id_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'cid';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_oclass_hints_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'hints';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'args';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      func-mem-desc-line = '423';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Generate a DAOS object ID by encoding the private DAOS bits of the object
address space. This allows the user to either select an object class
manually, or ask DAOS to generate one based on some hints provided.

@param [in]  coh Container open handle.
@param [in,out]
    oid [in]: Object ID with low 96 bits set and unique inside
        the container.
        [out]: Fully populated DAOS object identifier with the
        the low 96 bits untouched and the DAOS private bits
        (the high 32 bits) encoded.
@param [in]  ofeats  Feature bits specific to object
@param [in]  cid Class Identifier. This setting is for advanced users who
        are knowledgeable on the specific oclass being set and
        what that means for the object in the current system and
        the container it's in.
        Setting this to 0 (unknown) will check if there are any
        hints specified and use an oclass accordingly. If there
        are no hints specified we use the container properties
        to select the object class.
@param [in]   hints  Optional hints to select oclass with redundancy type
        and sharding. This will be ignored if cid is not
        OC_UNKNOWN (0).
@param [in]  args    Reserved.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___object_1ga34c5792cce236833d0534f54b32b952a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_obj_open';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_obj_id_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oid';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'mode';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      func-mem-desc-line = '449';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Open an DAOS object.

@param [in]  coh Container open handle.
@param [in]  oid Object ID.
@param [in]  mode    Open mode: DAOS_OO_RO/RW/EXCL/IO_RAND/IO_SEQ
@param [out] oh  Returned object open handle.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid container handle
        -DER_INVAL  Invalid parameter
        -DER_UNREACH    Network is unreachable
        -DER_NO_PERM    Permission denied
        -DER_NONEXIST   Cannot find object
        -DER_EP_OLD Epoch is too old and has no data for
                this object
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___object_1gaa928f6519b3f182d81f69db5d081be8f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_obj_close';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      func-mem-desc-line = '465';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Close an opened object.

@param [in]  oh  Object open handle.
@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid object open handle
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___object_1ga908f76eaa33ae21cd835ab585804eca9';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_obj_punch';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      func-mem-desc-line = '489';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Punch an entire object with all keys associated with it.

@param [in]  oh  Object open handle.
@param [in]  th  Optional transaction handle to punch object in.
        Use DAOS_TX_NONE for an independent transaction.
@param [in]  flags   Punch flags (currently ignored).
@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid object open handle
        -DER_UNREACH    Network is unreachable
        -DER_EP_RO  Permission denied
        -DER_NOEXIST    Nonexistent object ID
        -DER_EP_OLD Related RPC is resent too late as to
                related resent history may have been
                aggregated. Punch result is undefined.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___object_1gafeb0492149d0989edb60e4e68bffadcf';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_obj_punch_dkeys';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'nr';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_key_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dkeys';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      func-mem-desc-line = '516';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Punch dkeys (with all akeys) from an object.

@param [in]  oh  Object open handle.
@param [in]  th  Optional transaction handle to punch dkeys in.
        Use DAOS_TX_NONE for an independent transaction.
@param [in]  flags   Punch flags (conditional ops).
@param [in]  nr  number of dkeys to punch.
@param [in]  dkeys   Array of dkeys to punch.
@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid object open handle
        -DER_UNREACH    Network is unreachable
        -DER_EP_RO  Permission denied
        -DER_NOEXIST    Nonexistent object ID
        -DER_EP_OLD Related RPC is resent too late as to
                related resent history may have been
                aggregated. Punch result is undefined.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___object_1gafd35212c3ba43f1263b319bdd5271db7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_obj_punch_akeys';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_key_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dkey';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'nr';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_key_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'akeys';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      func-mem-desc-line = '544';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Punch akeys (with all records) from an object.

@param [in]  oh  Object open handle.
@param [in]  th  Optional transaction handle to punch akeys in.
        Use DAOS_TX_NONE for an independent transaction.
@param [in]  flags   Punch flags (conditional ops).
@param [in]  dkey    dkey to punch akeys from.
@param [in]  nr  number of akeys to punch.
@param [in]  akeys   Array of akeys to punch.
@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid object open handle
        -DER_UNREACH    Network is unreachable
        -DER_EP_RO  Permission denied
        -DER_NOEXIST    Nonexistent object ID
        -DER_EP_OLD Related RPC is resent too late as to
                related resent history may have been
                aggregated. Punch result is undefined.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___object_1ga92102450d9f5a985b65b663f25502c30';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_obj_query';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_obj_attr *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oa';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
d_rank_list_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ranks';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      func-mem-desc-line = '566';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Query attributes of an object.
Caller should provide at least one of the output parameters.

@param [in]  oh  Object open handle.
@param [out] oa  Returned object attributes.
@param [out] ranks   Ordered list of ranks where the object is stored.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid object open handle
        -DER_INVAL  Invalid parameter
        -DER_UNREACH    Network is unreachable
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___object_1ga28d71e7752659a6dd9062a59e7345214';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_obj_fetch';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_key_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dkey';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'nr';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_iod_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'iods';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
d_sg_list_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'sgls';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_iom_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ioms';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      func-mem-desc-line = '632';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Fetch object records from co-located arrays.

@param [in]  oh  Object open handle.

@param [in]  th  Optional transaction handle to fetch with.
        Use DAOS_TX_NONE for an independent transaction.

@param [in]  flags   Fetch flags (conditional ops).

@param [in]  dkey    Distribution key associated with the fetch operation.

@param [in]  nr  Number of I/O descriptor and scatter/gather lists in
        respectively \a iods and \a sgls.

@param [in,out]
    iods    [in]: Array of I/O descriptors. Each descriptor is
        associated with a given akey and describes the list of
        record extents to fetch from the array.
        [out]: Checksum of each extent is returned via
        \a iods[]::iod_csums[]. If the record size of an
        extent is unknown (i.e. set to DAOS_REC_ANY as input),
        then the actual record size will be returned in
        \a iods[]::iod_size.

@param [in]  sgls    Scatter/gather lists (sgl) to store records. Each array
        is associated with a separate sgl in \a sgls.
        I/O descs in each sgl can be arbitrary as long as their
        total size is sufficient to fill in all returned data.
        For example, extents with records of different sizes can
        be adjacently stored in the same iod of the sgl of the
        I/O descriptor start offset of an extent is the end
        offset of the previous extent.
        For an unfound record, the output length of the
        corresponding sgl is set to zero.

@param [out] ioms    Optional, upper layers can simply pass in NULL.
        It is the sink buffer to store the returned actual
        layout of the iods used in fetch. It gives information
        for every iod on the highest/lowest extent in that dkey,
        in additional to the valid extents from the ones fetched
        (if asked for). If the extents don't fit in the io_map,
        the number required is set on the fetch in
        \a ioms[]::iom_nr for that particular iod.

@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid object open handle
        -DER_INVAL  Invalid parameter
        -DER_UNREACH    Network is unreachable
        -DER_REC2BIG    Record is too large and can't be
                fit into output buffer
        -DER_EP_OLD Epoch is too old and has no data
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___object_1ga562cff4284985245e07a691ec3769314';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_obj_update';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_key_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dkey';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'nr';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_iod_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'iods';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
d_sg_list_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'sgls';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      func-mem-desc-line = '685';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Insert or update object records stored in co-located arrays.

@param [in]  oh  Object open handle.

@param [in]  th  Optional transaction handle to update with.
        Use DAOS_TX_NONE for an independent transaction.

@param [in]  flags   Update flags (conditional ops).

@param [in]  dkey    Distribution key associated with the update operation.

@param [in]  nr  Number of descriptors and scatter/gather lists in
        respectively \a iods and \a sgls.

@param [in]  iods    Array of I/O descriptor. Each descriptor is associated
        with an array identified by its akey and describes the
        list of record extent to update.
        Checksum of each record extent is stored in
        \a iods[]::iod_csums[]. If the record size of an extent
        is zero, then it is effectively a punch for the
        specified index range.

@param [in]  sgls    Scatter/gather list (sgl) to store the input data
        records. Each I/O descriptor owns a separate sgl in
        \a sgls.
        Different records of the same extent can either be
        stored in separate iod of the sgl, or contiguously
        stored in arbitrary iods as long as total buffer size
        can match the total extent size.

@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid object open handle
        -DER_INVAL  Invalid parameter
        -DER_REC2BIG    Record is larger than the buffer in
                input \a sgls buffer.
        -DER_NO_PERM    Permission denied
        -DER_UNREACH    Network is unreachable
        -DER_EP_RO  Epoch is read-only
        -DER_EP_OLD Related RPC is resent too late as to
                related resent history may have been
                aggregated. Update result is undefined.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___object_1gab1191b15617a670ab7af8a4a9466c263';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_obj_list_dkey';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'nr';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_key_desc_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kds';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
d_sg_list_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'sgl';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_anchor_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'anchor';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      func-mem-desc-line = '735';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Distribution key enumeration.

@param [in]  oh  Object open handle.

@param [in]  th  Optional transaction handle to enumerate with.
        Use DAOS_TX_NONE for an independent transaction.

@param [in,out]
    nr  [in]: number of key descriptors in \a kds. [out]: number
        of returned key descriptors.

@param [in,out]
    kds [in]: preallocated array of \nr key descriptors. [out]:
        size of each individual key along with checksum type
        and size stored just after the key in \a sgl.

@param [in]  sgl Scatter/gather list to store the dkey list.
        All dkeys are written contiguously with their checksum,
        actual boundaries can be calculated thanks to \a kds.

@param [in,out]
    anchor  Hash anchor for the next call, it should be set to
        zeroes for the first call, it should not be changed
        by caller between calls.

@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid object open handle
        -DER_INVAL  Invalid parameter
        -DER_UNREACH    Network is unreachable
        -DER_KEY2BIG    Key is too large and can't be fit into
                the \a sgl, the required minimal length
                to fit the key is returned by
                \a kds[0].kd_key_len. This error code
                only returned for the first key in this
                enumeration, then user can provide a
                larger buffer (for example two or three
                times \a kds[0].kd_key_len) and do the
                enumerate again.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___object_1gac0d8c82eca4c1d3532f797d4f0b9f4b7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_obj_list_akey';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_key_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dkey';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'nr';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_key_desc_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'kds';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
d_sg_list_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'sgl';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_anchor_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'anchor';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      func-mem-desc-line = '786';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Attribute key enumeration.

@param [in]  oh  Object open handle.

@param [in]  th  Optional transaction handle to enumerate with.
        Use DAOS_TX_NONE for an independent transaction.

@param [in]  dkey    distribution key for the akey enumeration

@param [in,out]
    nr  [in]: number of key descriptors in \a kds. [out]: number
        of returned key descriptors.

@param [in,out]
    kds [in]: preallocated array of \nr key descriptors. [out]:
        size of each individual key in \a sgl.

@param [in]  sgl Scatter/gather list to store the akey list.
        All akeys are written contiguously, actual boundaries
        can be calculated thanks to \a kds.

@param [in,out]
    anchor  Hash anchor for the next call, it should be set to
        zeroes for the first call, it should not be changed
        by caller between calls.

@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid object open handle
        -DER_INVAL  Invalid parameter
        -DER_UNREACH    Network is unreachable
        -DER_KEY2BIG    Key is too large and can't be fit into
                the \a sgl, the required minimal length
                to fit the key is returned by
                \a kds[0].kd_key_len. This error code
                only returned for the first key in this
                enumeration, then user can provide a
                larger buffer (for example two or three
                times \a kds[0].kd_key_len) and do the
                enumerate again.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___object_1gaeb05e2d9823ec30a8fa6997f5f549714';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_obj_list_recx';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_key_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dkey';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_key_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'akey';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'nr';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_recx_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'recxs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_epoch_range_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'eprs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_anchor_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'anchor';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'incr_order';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      func-mem-desc-line = '839';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Extent enumeration of valid records in the array.

@param [in]  oh  Object open handle.

@param [in]  th  Optional transaction handle to enumerate with.
        Use DAOS_TX_NONE for an independent transaction.

@param [in]  dkey    distribution key for the enumeration

@param [in]  akey    attribute key for the enumeration

@param [out] size    record size

@param [in,out]
    nr  [in]: number of records in \a recxs. [out]: number of
        returned recxs.

@param [in,out]
    recxs   [in]: preallocated array of \nr records. [out]: returned
        records.

@param [in,out]
    eprs    [in]: preallocated array of \nr epoch ranges. [out]:
        returned epoch ranges.

@param [in,out]
    anchor  Hash anchor for the next call, it should be set to
        zeroes for the first call, it should not be changed
        by caller between calls.

@param [in]  incr_order
        If this is set to true, extents will be listed in
        increasing index order, otherwise if false, they are
        listed in decreasing order. Once an anchor is associated
        with an order, further calls with that anchor should use
        the same order setting.

@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid object open handle
        -DER_INVAL  Invalid parameter
        -DER_UNREACH    Network is unreachable
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___object_1gab66aaecceb3b77c3bba57f1c0fe0e480';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_obj_query_key';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'th';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_key_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dkey';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_key_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'akey';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_recx_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'recx';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      func-mem-desc-line = '889';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Retrieve the largest or smallest integer DKEY, AKEY, and array offset from an
object. If object does not have an array value, 0 is returned in extent. User
has to specify what is being queried (dkey, akey, and/or recx) along with the
query type (max or min) in flags. If one of those is not provided the
function will fail. If the dkey or akey are not being queried, there value
must be provided by the user.

If searching in a particular dkey for the max akey and max offset in that
akey, user would supply the dkey value and a flag of: DAOS_GET_MAX |
DAOS_GET_AKEY | DAOS_GET_RECX.

@param [in]  oh  Object open handle.
@param [in]  th  Optional transaction handle to query at.
        Use DAOS_TX_NONE for an independent transaction.
@param [in]  flags   mask with the following options:
        DAOS_GET_DKEY, DAOS_GET_AKEY, DAOS_GET_RECX,
        DAOS_GET_MAX, DAOS_GET_MIN
        User has to indicate whether to query the MAX or MIN, in
        addition to what needs to be queried. Providing
        (MAX | MIN) in any combination will return an error.
        i.e. user can only query MAX or MIN in one call.
@param [in,out]
    dkey    [in]: allocated integer dkey. User can provide the dkey
        if not querying the max or min dkey.
        [out]: max or min dkey (if flag includes dkey query).
@param [in,out]
    akey    [in]: allocated integer akey. User can provide the akey
        if not querying the max or min akey.
        [out]: max or min akey (if flag includes akey query).
@param [out] recx    max or min offset in dkey/akey, and the size of the
        extent at the offset. If there are no visible array
        records, the size in the recx returned will be 0.
@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid object open handle
        -DER_INVAL  Invalid parameter
        -DER_UNREACH    Network is unreachable
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___object_1ga0ba9dce86987ab42fe63fd94dda297ea';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_obj_verify';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_obj_id_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oid';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_epoch_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'epoch';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      func-mem-desc-line = '907';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Verify object data consistency against the specified epoch.

@param [in]  coh Container open handle.
@param [in]  oid Object ID.
@param [in]  epoch   The (stable) epoch against that the verification will
        be done. DAOS_EPOCH_MAX means current highest epoch.

\return     0       Success and consistent
        -DER_UNREACH    Network is unreachable
        -DER_NO_HDL Invalid object open handle
        -DER_MISMATCH   Found data inconsistency
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___object_1ga8205c0d60a8139595d135d44316c9b67';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_obj_anchor_split';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'nr';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_anchor_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'anchors';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      func-mem-desc-line = '933';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Provide a function for objects to split an anchor to be able to execute a
parallel listing/enumeration. This routine suggests the optimal number of
anchors to use instead of just 1 and optionally returns all those
anchors. The user would allocate the array of anchors after querying the
number of anchors needed. Alternatively, user does not provide an array and
can call daos_obj_anchor_set() for every anchor to set.

The user could suggest how many anchors to split the iteration over. This
feature is not supported yet.

@param [in]  oh  Open object handle.
@param [in/out]
    nr  [in]: Number of anchors requested and allocated in
        \a anchors. Pass 0 for DAOS to recommend split num.
        [out]: Number of anchors recommended if 0 is passed in.
@param [in]  anchors Optional array of anchors that are split.

\return     These values will be returned:
        0       Success
        -DER_NO_HDL Invalid object open handle
        -DER_INVAL  Invalid parameter
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___object_1gac457e7247ebdc4c8ae249ef8bbc12b19';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_obj_anchor_set';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'index';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_anchor_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'anchor';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      func-mem-desc-line = '951';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Set an anchor with an index based on split done with daos_obj_anchor_split.
The anchor passed will be re-initialized and set to start and finish
iteration based on the specified index.

@param [in]   oh Open object handle.
@param [in]  index   Index of set this anchor for iteration.
@param [in,out]
    anchor  Hash anchor to set.

\return     These values will be returned:
        0       Success
        -DER_NO_HDL Invalid object open handle
        -DER_INVAL  Invalid parameter
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___object_1ga87e98a32fdc4eacd5e2110ddb8ef1961';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_oit_open';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_epoch_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'epoch';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      func-mem-desc-line = '969';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Open Object Index Table (OIT) of an container

@param [in]  coh Container open handle.
@param [in]  epoch   epoch of a snapshot
@param [out] oh  Returned OIT open handle.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid container handle
        -DER_INVAL  Invalid parameter
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___object_1gad8a5e2d1d887e7faa702998ee58682d4';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_oit_close';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      func-mem-desc-line = '985';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Close an opened Object Index Table (OIT).

@param [in]  oh  OIT open handle.
@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid object open handle
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___object_1gaae697c8131f256a918da1f630245abcf';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_oit_list';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_obj_id_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oids';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oids_nr';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_anchor_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'anchor';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      func-mem-desc-line = '1007';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Enumerate object IDs snapshotted by the Object Index Table (OIT)

@param [in]  oh  OIT open handle.
@param [out] oids    Returned OIDs
@param [out] oids_nr Number of returned OIDs
@param [in,out]
    anchor  Hash anchor for the next call, it should be set to
        zeroes for the first call, it should not be changed
        by caller between calls.
@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_NO_HDL Invalid object open handle
        -DER_INVAL  Invalid parameter
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'group___object_1ga913fdf50c37cc3794c0ceb51312c0466';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static void daos_ofeat_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'ofeats';
      var-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      var-mem-desc-line = '332';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'group___object_1ga1840fef39de5627243119228d88e3aed';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static void daos_ofeat_t daos_oclass_id_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'cid';
      var-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      var-mem-desc-line = '333';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'group___object_1ga85bb20ecd625a879285818946c5f153f';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static void daos_ofeat_t daos_oclass_id_t uint32_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'args';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
{
	uint64_t hdr
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      var-mem-desc-line = '333';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'group___object_1ga33cf9f5c6cd1f55e3c9ab55c25c478be';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
oid hi &
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'hdr';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= ((uint64_t)OID_FMT_VER << OID_FMT_VER_SHIFT)
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      var-mem-desc-line = '348';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_
| Upper bits contain
| OID_FMT_VER_BITS (version)         |
| OID_FMT_FEAT_BITS (object features) |
| OID_FMT_CLASS_BITS (object class)  |
| 96-bit for upper layer ...         |
_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'group___object_1ga3e47cb96fe9d5e9c2fd2148684947648';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
oid
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'hi';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= hdr
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
      var-mem-desc-line = '351';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'daos__obj__class_8h';
  file-name = 'daos_obj_class.h';
    typedef = {
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group___obj_class_1ga697f542a81cf2b46e3642a31ad289728';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'daos_oclass_id_t';
      typedef-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
      typedef-mem-desc-line = '591';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_
object class ID 
_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group___obj_class_1ga3b8f3311463c936d904f349c817862f1';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'daos_oclass_hints_t';
      typedef-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
      typedef-mem-desc-line = '593';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_
object class hints 
_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group___obj_class_1ga209e09a39a0f553b2c1e9a5f7f558e2e';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'daos_ofeat_t';
      typedef-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
      typedef-mem-desc-line = '595';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_
object feature bits 
_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    };
    enum = {
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___obj_class_1ga0411cd49bb5b71852cecd93bcbf0ca2d';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = '@7';
      enum-mem-enum = { enum-name = OC_UNKNOWN; enum-value = '= 0'; };
      enum-mem-enum = { enum-name = OC_BACK_COMPAT; enum-value = '= 50'; };
      enum-mem-enum = { enum-name = OC_TINY; };
      enum-mem-enum = { enum-name = OC_SMALL; };
      enum-mem-enum = { enum-name = OC_LARGE; };
      enum-mem-enum = { enum-name = OC_MAX; };
      enum-mem-enum = { enum-name = OC_RP_TINY; enum-value = '= 60'; };
      enum-mem-enum = { enum-name = OC_RP_SMALL; };
      enum-mem-enum = { enum-name = OC_RP_LARGE; };
      enum-mem-enum = { enum-name = OC_RP_MAX; };
      enum-mem-enum = { enum-name = OC_RP_SF_TINY; enum-value = '= 70'; };
      enum-mem-enum = { enum-name = OC_RP_SF_SMALL; };
      enum-mem-enum = { enum-name = OC_RP_SF_LARGE; };
      enum-mem-enum = { enum-name = OC_RP_SF_MAX; };
      enum-mem-enum = { enum-name = OC_RP_XSF; enum-value = '= 80'; };
      enum-mem-enum = { enum-name = OC_EC_TINY; enum-value = '= 100'; };
      enum-mem-enum = { enum-name = OC_EC_SMALL; };
      enum-mem-enum = { enum-name = OC_EC_LARGE; };
      enum-mem-enum = { enum-name = OC_EC_MAX; };
      enum-mem-enum = { enum-name = OC_S1; enum-value = '= 200'; };
      enum-mem-enum = { enum-name = OC_S2; };
      enum-mem-enum = { enum-name = OC_S4; };
      enum-mem-enum = { enum-name = OC_S6; };
      enum-mem-enum = { enum-name = OC_S8; };
      enum-mem-enum = { enum-name = OC_S12; };
      enum-mem-enum = { enum-name = OC_S16; };
      enum-mem-enum = { enum-name = OC_S24; };
      enum-mem-enum = { enum-name = OC_S32; };
      enum-mem-enum = { enum-name = OC_S48; };
      enum-mem-enum = { enum-name = OC_S64; };
      enum-mem-enum = { enum-name = OC_S96; };
      enum-mem-enum = { enum-name = OC_S128; };
      enum-mem-enum = { enum-name = OC_S192; };
      enum-mem-enum = { enum-name = OC_S256; };
      enum-mem-enum = { enum-name = OC_S384; };
      enum-mem-enum = { enum-name = OC_S512; };
      enum-mem-enum = { enum-name = OC_S768; };
      enum-mem-enum = { enum-name = OC_S1K; };
      enum-mem-enum = { enum-name = OC_S2K; };
      enum-mem-enum = { enum-name = OC_S4K; };
      enum-mem-enum = { enum-name = OC_S6K; };
      enum-mem-enum = { enum-name = OC_S8K; };
      enum-mem-enum = { enum-name = OC_SX; };
      enum-mem-enum = { enum-name = OC_RP_2G1; enum-value = '= 240'; };
      enum-mem-enum = { enum-name = OC_RP_2G2; };
      enum-mem-enum = { enum-name = OC_RP_2G4; };
      enum-mem-enum = { enum-name = OC_RP_2G6; };
      enum-mem-enum = { enum-name = OC_RP_2G8; };
      enum-mem-enum = { enum-name = OC_RP_2G12; };
      enum-mem-enum = { enum-name = OC_RP_2G16; };
      enum-mem-enum = { enum-name = OC_RP_2G24; };
      enum-mem-enum = { enum-name = OC_RP_2G32; };
      enum-mem-enum = { enum-name = OC_RP_2G48; };
      enum-mem-enum = { enum-name = OC_RP_2G64; };
      enum-mem-enum = { enum-name = OC_RP_2G96; };
      enum-mem-enum = { enum-name = OC_RP_2G128; };
      enum-mem-enum = { enum-name = OC_RP_2G192; };
      enum-mem-enum = { enum-name = OC_RP_2G256; };
      enum-mem-enum = { enum-name = OC_RP_2G384; };
      enum-mem-enum = { enum-name = OC_RP_2G512; };
      enum-mem-enum = { enum-name = OC_RP_2G768; };
      enum-mem-enum = { enum-name = OC_RP_2G1K; };
      enum-mem-enum = { enum-name = OC_RP_2G2K; };
      enum-mem-enum = { enum-name = OC_RP_2G4K; };
      enum-mem-enum = { enum-name = OC_RP_2G6K; };
      enum-mem-enum = { enum-name = OC_RP_2G8K; };
      enum-mem-enum = { enum-name = OC_RP_2GX; };
      enum-mem-enum = { enum-name = OC_RP_2G3; };
      enum-mem-enum = { enum-name = OC_RP_3G1; enum-value = '= 280'; };
      enum-mem-enum = { enum-name = OC_RP_3G2; };
      enum-mem-enum = { enum-name = OC_RP_3G4; };
      enum-mem-enum = { enum-name = OC_RP_3G6; };
      enum-mem-enum = { enum-name = OC_RP_3G8; };
      enum-mem-enum = { enum-name = OC_RP_3G12; };
      enum-mem-enum = { enum-name = OC_RP_3G16; };
      enum-mem-enum = { enum-name = OC_RP_3G24; };
      enum-mem-enum = { enum-name = OC_RP_3G32; };
      enum-mem-enum = { enum-name = OC_RP_3G48; };
      enum-mem-enum = { enum-name = OC_RP_3G64; };
      enum-mem-enum = { enum-name = OC_RP_3G96; };
      enum-mem-enum = { enum-name = OC_RP_3G128; };
      enum-mem-enum = { enum-name = OC_RP_3G192; };
      enum-mem-enum = { enum-name = OC_RP_3G256; };
      enum-mem-enum = { enum-name = OC_RP_3G384; };
      enum-mem-enum = { enum-name = OC_RP_3G512; };
      enum-mem-enum = { enum-name = OC_RP_3G768; };
      enum-mem-enum = { enum-name = OC_RP_3G1K; };
      enum-mem-enum = { enum-name = OC_RP_3G2K; };
      enum-mem-enum = { enum-name = OC_RP_3G4K; };
      enum-mem-enum = { enum-name = OC_RP_3G6K; };
      enum-mem-enum = { enum-name = OC_RP_3G8K; };
      enum-mem-enum = { enum-name = OC_RP_3GX; };
      enum-mem-enum = { enum-name = OC_RP_4G1; enum-value = '= 320'; };
      enum-mem-enum = { enum-name = OC_RP_4G2; };
      enum-mem-enum = { enum-name = OC_RP_4G4; };
      enum-mem-enum = { enum-name = OC_RP_4G6; };
      enum-mem-enum = { enum-name = OC_RP_4G8; };
      enum-mem-enum = { enum-name = OC_RP_4G12; };
      enum-mem-enum = { enum-name = OC_RP_4G16; };
      enum-mem-enum = { enum-name = OC_RP_4G24; };
      enum-mem-enum = { enum-name = OC_RP_4G32; };
      enum-mem-enum = { enum-name = OC_RP_4G48; };
      enum-mem-enum = { enum-name = OC_RP_4G64; };
      enum-mem-enum = { enum-name = OC_RP_4G96; };
      enum-mem-enum = { enum-name = OC_RP_4G128; };
      enum-mem-enum = { enum-name = OC_RP_4G192; };
      enum-mem-enum = { enum-name = OC_RP_4G256; };
      enum-mem-enum = { enum-name = OC_RP_4G384; };
      enum-mem-enum = { enum-name = OC_RP_4G512; };
      enum-mem-enum = { enum-name = OC_RP_4G768; };
      enum-mem-enum = { enum-name = OC_RP_4G1K; };
      enum-mem-enum = { enum-name = OC_RP_4G2K; };
      enum-mem-enum = { enum-name = OC_RP_4G4K; };
      enum-mem-enum = { enum-name = OC_RP_4G6K; };
      enum-mem-enum = { enum-name = OC_RP_4G8K; };
      enum-mem-enum = { enum-name = OC_RP_4GX; };
      enum-mem-enum = { enum-name = OC_RP_6G1; enum-value = '= 360'; };
      enum-mem-enum = { enum-name = OC_RP_6G2; };
      enum-mem-enum = { enum-name = OC_RP_6G4; };
      enum-mem-enum = { enum-name = OC_RP_6G6; };
      enum-mem-enum = { enum-name = OC_RP_6G8; };
      enum-mem-enum = { enum-name = OC_RP_6G12; };
      enum-mem-enum = { enum-name = OC_RP_6G16; };
      enum-mem-enum = { enum-name = OC_RP_6G24; };
      enum-mem-enum = { enum-name = OC_RP_6G32; };
      enum-mem-enum = { enum-name = OC_RP_6G48; };
      enum-mem-enum = { enum-name = OC_RP_6G64; };
      enum-mem-enum = { enum-name = OC_RP_6G96; };
      enum-mem-enum = { enum-name = OC_RP_6G128; };
      enum-mem-enum = { enum-name = OC_RP_6G192; };
      enum-mem-enum = { enum-name = OC_RP_6G256; };
      enum-mem-enum = { enum-name = OC_RP_6G384; };
      enum-mem-enum = { enum-name = OC_RP_6G512; };
      enum-mem-enum = { enum-name = OC_RP_6G768; };
      enum-mem-enum = { enum-name = OC_RP_6G1K; };
      enum-mem-enum = { enum-name = OC_RP_6G2K; };
      enum-mem-enum = { enum-name = OC_RP_6G4K; };
      enum-mem-enum = { enum-name = OC_RP_6G6K; };
      enum-mem-enum = { enum-name = OC_RP_6G8K; };
      enum-mem-enum = { enum-name = OC_RP_6GX; };
      enum-mem-enum = { enum-name = OC_RP_8G1; enum-value = '= 400'; };
      enum-mem-enum = { enum-name = OC_RP_8G2; };
      enum-mem-enum = { enum-name = OC_RP_8G4; };
      enum-mem-enum = { enum-name = OC_RP_8G6; };
      enum-mem-enum = { enum-name = OC_RP_8G8; };
      enum-mem-enum = { enum-name = OC_RP_8G12; };
      enum-mem-enum = { enum-name = OC_RP_8G16; };
      enum-mem-enum = { enum-name = OC_RP_8G24; };
      enum-mem-enum = { enum-name = OC_RP_8G32; };
      enum-mem-enum = { enum-name = OC_RP_8G48; };
      enum-mem-enum = { enum-name = OC_RP_8G64; };
      enum-mem-enum = { enum-name = OC_RP_8G96; };
      enum-mem-enum = { enum-name = OC_RP_8G128; };
      enum-mem-enum = { enum-name = OC_RP_8G192; };
      enum-mem-enum = { enum-name = OC_RP_8G256; };
      enum-mem-enum = { enum-name = OC_RP_8G384; };
      enum-mem-enum = { enum-name = OC_RP_8G512; };
      enum-mem-enum = { enum-name = OC_RP_8G768; };
      enum-mem-enum = { enum-name = OC_RP_8G1K; };
      enum-mem-enum = { enum-name = OC_RP_8G2K; };
      enum-mem-enum = { enum-name = OC_RP_8G4K; };
      enum-mem-enum = { enum-name = OC_RP_8G6K; };
      enum-mem-enum = { enum-name = OC_RP_8G8K; };
      enum-mem-enum = { enum-name = OC_RP_8GX; };
      enum-mem-enum = { enum-name = OC_RP_12G1; enum-value = '= 440'; };
      enum-mem-enum = { enum-name = OC_RP_16G1; };
      enum-mem-enum = { enum-name = OC_RP_24G1; };
      enum-mem-enum = { enum-name = OC_RP_32G1; };
      enum-mem-enum = { enum-name = OC_RP_48G1; };
      enum-mem-enum = { enum-name = OC_RP_64G1; };
      enum-mem-enum = { enum-name = OC_RP_128G1; };
      enum-mem-enum = { enum-name = OC_EC_2P1G1; enum-value = '= 500'; };
      enum-mem-enum = { enum-name = OC_EC_2P1G2; };
      enum-mem-enum = { enum-name = OC_EC_2P1G4; };
      enum-mem-enum = { enum-name = OC_EC_2P1G6; };
      enum-mem-enum = { enum-name = OC_EC_2P1G8; };
      enum-mem-enum = { enum-name = OC_EC_2P1G12; };
      enum-mem-enum = { enum-name = OC_EC_2P1G16; };
      enum-mem-enum = { enum-name = OC_EC_2P1G24; };
      enum-mem-enum = { enum-name = OC_EC_2P1G32; };
      enum-mem-enum = { enum-name = OC_EC_2P1G48; };
      enum-mem-enum = { enum-name = OC_EC_2P1G64; };
      enum-mem-enum = { enum-name = OC_EC_2P1G96; };
      enum-mem-enum = { enum-name = OC_EC_2P1G128; };
      enum-mem-enum = { enum-name = OC_EC_2P1G192; };
      enum-mem-enum = { enum-name = OC_EC_2P1G256; };
      enum-mem-enum = { enum-name = OC_EC_2P1G384; };
      enum-mem-enum = { enum-name = OC_EC_2P1G512; };
      enum-mem-enum = { enum-name = OC_EC_2P1G768; };
      enum-mem-enum = { enum-name = OC_EC_2P1G1K; };
      enum-mem-enum = { enum-name = OC_EC_2P1G2K; };
      enum-mem-enum = { enum-name = OC_EC_2P1G4K; };
      enum-mem-enum = { enum-name = OC_EC_2P1G6K; };
      enum-mem-enum = { enum-name = OC_EC_2P1G8K; };
      enum-mem-enum = { enum-name = OC_EC_2P1GX; };
      enum-mem-enum = { enum-name = OC_EC_2P2G1; enum-value = '= 540'; };
      enum-mem-enum = { enum-name = OC_EC_2P2G2; };
      enum-mem-enum = { enum-name = OC_EC_2P2G4; };
      enum-mem-enum = { enum-name = OC_EC_2P2G6; };
      enum-mem-enum = { enum-name = OC_EC_2P2G8; };
      enum-mem-enum = { enum-name = OC_EC_2P2G12; };
      enum-mem-enum = { enum-name = OC_EC_2P2G16; };
      enum-mem-enum = { enum-name = OC_EC_2P2G24; };
      enum-mem-enum = { enum-name = OC_EC_2P2G32; };
      enum-mem-enum = { enum-name = OC_EC_2P2G48; };
      enum-mem-enum = { enum-name = OC_EC_2P2G64; };
      enum-mem-enum = { enum-name = OC_EC_2P2G96; };
      enum-mem-enum = { enum-name = OC_EC_2P2G128; };
      enum-mem-enum = { enum-name = OC_EC_2P2G192; };
      enum-mem-enum = { enum-name = OC_EC_2P2G256; };
      enum-mem-enum = { enum-name = OC_EC_2P2G384; };
      enum-mem-enum = { enum-name = OC_EC_2P2G512; };
      enum-mem-enum = { enum-name = OC_EC_2P2G768; };
      enum-mem-enum = { enum-name = OC_EC_2P2G1K; };
      enum-mem-enum = { enum-name = OC_EC_2P2G2K; };
      enum-mem-enum = { enum-name = OC_EC_2P2G4K; };
      enum-mem-enum = { enum-name = OC_EC_2P2G6K; };
      enum-mem-enum = { enum-name = OC_EC_2P2G8K; };
      enum-mem-enum = { enum-name = OC_EC_2P2GX; };
      enum-mem-enum = { enum-name = OC_EC_4P1G1; enum-value = '= 580'; };
      enum-mem-enum = { enum-name = OC_EC_4P1G2; };
      enum-mem-enum = { enum-name = OC_EC_4P1G4; };
      enum-mem-enum = { enum-name = OC_EC_4P1G6; };
      enum-mem-enum = { enum-name = OC_EC_4P1G8; };
      enum-mem-enum = { enum-name = OC_EC_4P1G12; };
      enum-mem-enum = { enum-name = OC_EC_4P1G16; };
      enum-mem-enum = { enum-name = OC_EC_4P1G24; };
      enum-mem-enum = { enum-name = OC_EC_4P1G32; };
      enum-mem-enum = { enum-name = OC_EC_4P1G48; };
      enum-mem-enum = { enum-name = OC_EC_4P1G64; };
      enum-mem-enum = { enum-name = OC_EC_4P1G96; };
      enum-mem-enum = { enum-name = OC_EC_4P1G128; };
      enum-mem-enum = { enum-name = OC_EC_4P1G192; };
      enum-mem-enum = { enum-name = OC_EC_4P1G256; };
      enum-mem-enum = { enum-name = OC_EC_4P1G384; };
      enum-mem-enum = { enum-name = OC_EC_4P1G512; };
      enum-mem-enum = { enum-name = OC_EC_4P1G768; };
      enum-mem-enum = { enum-name = OC_EC_4P1G1K; };
      enum-mem-enum = { enum-name = OC_EC_4P1G2K; };
      enum-mem-enum = { enum-name = OC_EC_4P1G4K; };
      enum-mem-enum = { enum-name = OC_EC_4P1G6K; };
      enum-mem-enum = { enum-name = OC_EC_4P1G8K; };
      enum-mem-enum = { enum-name = OC_EC_4P1GX; };
      enum-mem-enum = { enum-name = OC_EC_4P2G1; enum-value = '= 620'; };
      enum-mem-enum = { enum-name = OC_EC_4P2G2; };
      enum-mem-enum = { enum-name = OC_EC_4P2G4; };
      enum-mem-enum = { enum-name = OC_EC_4P2G6; };
      enum-mem-enum = { enum-name = OC_EC_4P2G8; };
      enum-mem-enum = { enum-name = OC_EC_4P2G12; };
      enum-mem-enum = { enum-name = OC_EC_4P2G16; };
      enum-mem-enum = { enum-name = OC_EC_4P2G24; };
      enum-mem-enum = { enum-name = OC_EC_4P2G32; };
      enum-mem-enum = { enum-name = OC_EC_4P2G48; };
      enum-mem-enum = { enum-name = OC_EC_4P2G64; };
      enum-mem-enum = { enum-name = OC_EC_4P2G96; };
      enum-mem-enum = { enum-name = OC_EC_4P2G128; };
      enum-mem-enum = { enum-name = OC_EC_4P2G192; };
      enum-mem-enum = { enum-name = OC_EC_4P2G256; };
      enum-mem-enum = { enum-name = OC_EC_4P2G384; };
      enum-mem-enum = { enum-name = OC_EC_4P2G512; };
      enum-mem-enum = { enum-name = OC_EC_4P2G768; };
      enum-mem-enum = { enum-name = OC_EC_4P2G1K; };
      enum-mem-enum = { enum-name = OC_EC_4P2G2K; };
      enum-mem-enum = { enum-name = OC_EC_4P2G4K; };
      enum-mem-enum = { enum-name = OC_EC_4P2G6K; };
      enum-mem-enum = { enum-name = OC_EC_4P2G8K; };
      enum-mem-enum = { enum-name = OC_EC_4P2GX; };
      enum-mem-enum = { enum-name = OC_EC_8P1G1; enum-value = '= 660'; };
      enum-mem-enum = { enum-name = OC_EC_8P1G2; };
      enum-mem-enum = { enum-name = OC_EC_8P1G4; };
      enum-mem-enum = { enum-name = OC_EC_8P1G6; };
      enum-mem-enum = { enum-name = OC_EC_8P1G8; };
      enum-mem-enum = { enum-name = OC_EC_8P1G12; };
      enum-mem-enum = { enum-name = OC_EC_8P1G16; };
      enum-mem-enum = { enum-name = OC_EC_8P1G24; };
      enum-mem-enum = { enum-name = OC_EC_8P1G32; };
      enum-mem-enum = { enum-name = OC_EC_8P1G48; };
      enum-mem-enum = { enum-name = OC_EC_8P1G64; };
      enum-mem-enum = { enum-name = OC_EC_8P1G96; };
      enum-mem-enum = { enum-name = OC_EC_8P1G128; };
      enum-mem-enum = { enum-name = OC_EC_8P1G192; };
      enum-mem-enum = { enum-name = OC_EC_8P1G256; };
      enum-mem-enum = { enum-name = OC_EC_8P1G384; };
      enum-mem-enum = { enum-name = OC_EC_8P1G512; };
      enum-mem-enum = { enum-name = OC_EC_8P1G768; };
      enum-mem-enum = { enum-name = OC_EC_8P1G1K; };
      enum-mem-enum = { enum-name = OC_EC_8P1G2K; };
      enum-mem-enum = { enum-name = OC_EC_8P1G4K; };
      enum-mem-enum = { enum-name = OC_EC_8P1G6K; };
      enum-mem-enum = { enum-name = OC_EC_8P1G8K; };
      enum-mem-enum = { enum-name = OC_EC_8P1GX; };
      enum-mem-enum = { enum-name = OC_EC_8P2G1; enum-value = '= 700'; };
      enum-mem-enum = { enum-name = OC_EC_8P2G2; };
      enum-mem-enum = { enum-name = OC_EC_8P2G4; };
      enum-mem-enum = { enum-name = OC_EC_8P2G6; };
      enum-mem-enum = { enum-name = OC_EC_8P2G8; };
      enum-mem-enum = { enum-name = OC_EC_8P2G12; };
      enum-mem-enum = { enum-name = OC_EC_8P2G16; };
      enum-mem-enum = { enum-name = OC_EC_8P2G24; };
      enum-mem-enum = { enum-name = OC_EC_8P2G32; };
      enum-mem-enum = { enum-name = OC_EC_8P2G48; };
      enum-mem-enum = { enum-name = OC_EC_8P2G64; };
      enum-mem-enum = { enum-name = OC_EC_8P2G96; };
      enum-mem-enum = { enum-name = OC_EC_8P2G128; };
      enum-mem-enum = { enum-name = OC_EC_8P2G192; };
      enum-mem-enum = { enum-name = OC_EC_8P2G256; };
      enum-mem-enum = { enum-name = OC_EC_8P2G384; };
      enum-mem-enum = { enum-name = OC_EC_8P2G512; };
      enum-mem-enum = { enum-name = OC_EC_8P2G768; };
      enum-mem-enum = { enum-name = OC_EC_8P2G1K; };
      enum-mem-enum = { enum-name = OC_EC_8P2G2K; };
      enum-mem-enum = { enum-name = OC_EC_8P2G4K; };
      enum-mem-enum = { enum-name = OC_EC_8P2G6K; };
      enum-mem-enum = { enum-name = OC_EC_8P2G8K; };
      enum-mem-enum = { enum-name = OC_EC_8P2GX; };
      enum-mem-enum = { enum-name = OC_EC_16P1G1; enum-value = '= 740'; };
      enum-mem-enum = { enum-name = OC_EC_16P1G2; };
      enum-mem-enum = { enum-name = OC_EC_16P1G4; };
      enum-mem-enum = { enum-name = OC_EC_16P1G6; };
      enum-mem-enum = { enum-name = OC_EC_16P1G8; };
      enum-mem-enum = { enum-name = OC_EC_16P1G12; };
      enum-mem-enum = { enum-name = OC_EC_16P1G16; };
      enum-mem-enum = { enum-name = OC_EC_16P1G24; };
      enum-mem-enum = { enum-name = OC_EC_16P1G32; };
      enum-mem-enum = { enum-name = OC_EC_16P1G48; };
      enum-mem-enum = { enum-name = OC_EC_16P1G64; };
      enum-mem-enum = { enum-name = OC_EC_16P1G96; };
      enum-mem-enum = { enum-name = OC_EC_16P1G128; };
      enum-mem-enum = { enum-name = OC_EC_16P1G192; };
      enum-mem-enum = { enum-name = OC_EC_16P1G256; };
      enum-mem-enum = { enum-name = OC_EC_16P1G384; };
      enum-mem-enum = { enum-name = OC_EC_16P1G512; };
      enum-mem-enum = { enum-name = OC_EC_16P1G768; };
      enum-mem-enum = { enum-name = OC_EC_16P1G1K; };
      enum-mem-enum = { enum-name = OC_EC_16P1G2K; };
      enum-mem-enum = { enum-name = OC_EC_16P1G4K; };
      enum-mem-enum = { enum-name = OC_EC_16P1G6K; };
      enum-mem-enum = { enum-name = OC_EC_16P1G8K; };
      enum-mem-enum = { enum-name = OC_EC_16P1GX; };
      enum-mem-enum = { enum-name = OC_EC_16P2G1; enum-value = '= 780'; };
      enum-mem-enum = { enum-name = OC_EC_16P2G2; };
      enum-mem-enum = { enum-name = OC_EC_16P2G4; };
      enum-mem-enum = { enum-name = OC_EC_16P2G6; };
      enum-mem-enum = { enum-name = OC_EC_16P2G8; };
      enum-mem-enum = { enum-name = OC_EC_16P2G12; };
      enum-mem-enum = { enum-name = OC_EC_16P2G16; };
      enum-mem-enum = { enum-name = OC_EC_16P2G24; };
      enum-mem-enum = { enum-name = OC_EC_16P2G32; };
      enum-mem-enum = { enum-name = OC_EC_16P2G48; };
      enum-mem-enum = { enum-name = OC_EC_16P2G64; };
      enum-mem-enum = { enum-name = OC_EC_16P2G96; };
      enum-mem-enum = { enum-name = OC_EC_16P2G128; };
      enum-mem-enum = { enum-name = OC_EC_16P2G192; };
      enum-mem-enum = { enum-name = OC_EC_16P2G256; };
      enum-mem-enum = { enum-name = OC_EC_16P2G384; };
      enum-mem-enum = { enum-name = OC_EC_16P2G512; };
      enum-mem-enum = { enum-name = OC_EC_16P2G768; };
      enum-mem-enum = { enum-name = OC_EC_16P2G1K; };
      enum-mem-enum = { enum-name = OC_EC_16P2G2K; };
      enum-mem-enum = { enum-name = OC_EC_16P2G4K; };
      enum-mem-enum = { enum-name = OC_EC_16P2G6K; };
      enum-mem-enum = { enum-name = OC_EC_16P2G8K; };
      enum-mem-enum = { enum-name = OC_EC_16P2GX; };
      enum-mem-enum = { enum-name = OC_RESERVED; enum-value = '= (1U << 10)'; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
      enum-mem-desc-line = '21';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
Predefined object classes
It describes schema of data distribution & protection.
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___obj_class_1gac58a276a9d26cdd8aaeacf7fe8efb5ad';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = 'daos_obj_schema';
      enum-mem-enum = { enum-name = DAOS_OS_SINGLE; };
      enum-mem-enum = { enum-name = DAOS_OS_STRIPED; };
      enum-mem-enum = { enum-name = DAOS_OS_DYN_STRIPED; };
      enum-mem-enum = { enum-name = DAOS_OS_DYN_CHUNKED; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
      enum-mem-desc-line = '546';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___obj_class_1gaca42b0245376dc966f212d5fb3763760';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = 'daos_obj_resil';
      enum-mem-enum = { enum-name = DAOS_RES_EC; };
      enum-mem-enum = { enum-name = DAOS_RES_REPL; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
      enum-mem-desc-line = '553';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___obj_class_1ga24b8c5689d8d76e745febc30318e2557';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_oclass_name2id';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
      func-mem-desc-line = '617';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Return the Object class ID given the object class name in string format.

@param [in]  name    Object class name.

\return     The Object class ID, 0 / OC_UNKNOWN if unknown.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___obj_class_1gab53903c34477f1fda0e7b1d1205357a9';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_oclass_names_list';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'str';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
      func-mem-desc-line = '628';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Return the list of object class.

@param [in]  size    length in bytes of str buffer.
@param [out] str buffer to get all registered oclass names

\return     >= 0 on success and required length of str, -1 if error.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___obj_class_1ga73ee945bc6bc2fd5d8ca10ee0e22f93a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_oclass_nr';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'opts';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
      func-mem-desc-line = '639';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Return total number of object classes

@param [in]  opts    reserved options

\return     > 0 Number object classes
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___obj_class_1ga0d3dbc7f891f30178d87b7c1e85afd51';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_oclass_id2name';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_oclass_id_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'oc_id';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
      func-mem-desc-line = '651';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Return the object class name given it's ID.

@param [in]  oc_id   Object class ID.
@param [out] name    buffer for the name of the object class to be copied
        into it.

\return     0 on success, -1 if invalid class.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___obj_class_1ga81d6a5ee3e28b34e9159616f04cb08bb';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_obj_register_class';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_oclass_id_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'cid';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_oclass_attr *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'attr';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
      func-mem-desc-line = '673';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Register a new object class in addition to the default ones (see DAOS_OC_*).
An object class cannot be unregistered for the time being.

@param [in]  coh Container open handle.
@param [in]  cid ID for the new object class.
@param [in]  attr    Attributes for the new object class.
@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       success
        -DER_NO_HDL Invalid container handle
        -DER_INVAL  Invalid parameter
        -DER_NO_PERM    Permission denied
        -DER_UNREACH    Network is unreachable
        -DER_EXIST  Object class ID already existed
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___obj_class_1ga2773bc2f6633b73c15df64d704b7956c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_obj_query_class';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_oclass_id_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'cid';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_oclass_attr *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'attr';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
      func-mem-desc-line = '694';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Query attributes of an object class by its ID.

@param [in]  coh Container open handle.
@param [in]  cid Class ID to query.
@param [out] attr    Returned attributes of the object class.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       success
        -DER_NO_HDL Invalid container handle
        -DER_INVAL  Invalid parameter
        -DER_UNREACH    Network is unreachable
        -DER_NONEXIST   Nonexistent class ID
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___obj_class_1ga77954593529b4d3b6098044dc9786fcb';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_obj_list_class';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'coh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_oclass_list *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'list';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_anchor_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'anchor';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
      func-mem-desc-line = '717';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
List existing object classes.

@param [in]  coh Container open handle.
@param [out] list    Sink buffer for returned class list.
@param [in,out]
    anchor  Hash anchor for the next call. It should be set to
        zeroes for the first call. It should not be altered
        by caller between calls.
@param [in]  ev  Completion event, it is optional and can be NULL.
        Function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       success
        -DER_NO_HDL Invalid container handle
        -DER_INVAL  Invalid parameter
        -DER_UNREACH    Network is unreachable
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_obj_class.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'daos__pool_8h';
  file-name = 'daos_pool.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___pools_1ga66e1ed2fc7580dfd6a360808b40f4abc';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_SYS_NAME_MAX_LEN';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
127
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      define-mem-desc-line = '170';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___pools_1ga604e2af3821c31a6ea692a39866200bb';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'daos_pool_connect';
      define-mem-param  = {
        define-mem-def-name = 'po';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = '...';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
	({								\
		int _ret;						\
		char _str[37];						\
		const char *__str = NULL;				\
		if (d_is_string(po)) {					\
			__str = (const char *)(po);			\
		} else if (d_is_uuid(po)) {				\
			uuid_unparse((unsigned char *)(po), _str);	\
			__str = _str;					\
		}							\
		_ret = daos_pool_connect2(__str, __VA_ARGS__);		\
		_ret;							\
	})
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      define-mem-desc-line = '454';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
For backward compatibility, support old API where a const uuid_t was used
instead of a string to identify the pool.
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    enum = {
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___pools_1ga79386cc6ec44453c791d429753179b70';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = 'daos_target_type_t';
      enum-mem-enum = { enum-name = DAOS_TP_UNKNOWN; };
      enum-mem-enum = { enum-name = DAOS_TP_HDD; };
      enum-mem-enum = { enum-name = DAOS_TP_SSD; };
      enum-mem-enum = { enum-name = DAOS_TP_PM; };
      enum-mem-enum = { enum-name = DAOS_TP_VM; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      enum-mem-desc-line = '21';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
Type of storage target 
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___pools_1ga5dee88343f29399c5f363a9a2e010986';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = 'daos_target_state_t';
      enum-mem-enum = { enum-name = DAOS_TS_UNKNOWN; };
      enum-mem-enum = { enum-name = DAOS_TS_DOWN_OUT; };
      enum-mem-enum = { enum-name = DAOS_TS_DOWN; };
      enum-mem-enum = { enum-name = DAOS_TS_UP; };
      enum-mem-enum = { enum-name = DAOS_TS_UP_IN; };
      enum-mem-enum = { enum-name = DAOS_TS_NEW; };
      enum-mem-enum = { enum-name = DAOS_TS_DRAIN; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      enum-mem-desc-line = '34';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
Current state of the storage target 
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___pools_1gab04a0655cd1e3bcac5e8f48c18df1a57';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = '@9';
      enum-mem-enum = { enum-name = DAOS_MEDIA_SCM; enum-value = '= 0'; };
      enum-mem-enum = { enum-name = DAOS_MEDIA_NVME; };
      enum-mem-enum = { enum-name = DAOS_MEDIA_MAX; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      enum-mem-desc-line = '56';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___pools_1gae7678951d96621071ffd9c8c80b0141e';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = 'daos_pool_info_bit';
      enum-mem-enum = { enum-name = DPI_SPACE; enum-value = '= 1ULL << 0'; };
      enum-mem-enum = { enum-name = DPI_REBUILD_STATUS; enum-value = '= 1ULL << 1'; };
      enum-mem-enum = { enum-name = DPI_ALL; enum-value = '= -1'; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      enum-mem-desc-line = '131';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
Pool info query bits.
The basic pool info like fields from pi_uuid to pi_leader will always be
queried for each daos_pool_query() calling. But the pi_space and
pi_rebuild_st are optional based on pi_mask's value.
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pools_1ga87b6ec0342030289f5f6c225703921e3';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_pool_connect';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pool';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'sys';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_pool_info_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'info';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      func-mem-desc-line = '197';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Connect to the DAOS pool identified by \a pool, a label or UUID string.
Upon a successful completion, \a poh returns the pool handle, and \a info
returns the latest pool information.

@param [in]  pool    label or UUID string to identify a pool.
@param [in]  sys DAOS system name to use for the pool connect.
        Pass NULL to connect to the default system.
@param [in]  flags   Connect mode represented by the DAOS_PC_ bits.
@param [out] poh Returned open handle.
@param [in,out]
    info    Optional, returned pool information,
        see daos_pool_info_bit.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_INVAL  Invalid parameter
        -DER_UNREACH    Network is unreachable
        -DER_NO_PERM    Permission denied
        -DER_NONEXIST   Pool is nonexistent
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pools_1ga1a2ed9d16fd4f6cc0a9360a3fb8bcdac';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_pool_disconnect';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      func-mem-desc-line = '215';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Disconnect from the DAOS pool. It should revoke all the container open
handles of this pool.

@param [in]  poh Pool connection handle
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_UNREACH    Network is unreachable
        -DER_NO_HDL Invalid pool handle
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pools_1ga4e958dfff1a20560668602575970b591';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_pool_local2global';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
d_iov_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'glob';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      func-mem-desc-line = '242';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Convert a local pool connection to global representation data which can be
shared with peer processes.
If glob->iov_buf is set to NULL, the actual size of the global handle is
returned through glob->iov_buf_len.
This function does not involve any communication and does not block.

@param [in]  poh Valid local pool connection handle to be shared
@param [out] glob    Pointer to iov of the buffer to store handle information

\return     These values will be returned:
        non-blocking mode:
        0       Success
        -DER_INVAL  Invalid parameter
        -DER_NO_HDL Pool  handle is nonexistent
        -DER_TRUNC  Buffer in \a glob is too short, a larger
                buffer is required. In this case the
                required buffer size is returned through
                glob->iov_buf_len.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pools_1gae016a3c4f6ecf41ea2fac16690d27b93';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_pool_global2local';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
d_iov_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'glob';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      func-mem-desc-line = '257';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create a local pool connection for global representation data.

@param [in]  glob    Global (shared) representation of a collective handle
        to be extracted
@param [out] poh Returned local pool connection handle

\return     These values will be returned:
        non-blocking mode:
        0       Success
        -DER_INVAL  Invalid parameter
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pools_1ga2bc65f56de518b4437b4218617eedcf6';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_pool_query';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
d_rank_list_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'tgts';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_pool_info_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'info';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_prop_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pool_prop';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      func-mem-desc-line = '293';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Query pool information. User should provide at least one of \a info and
\a tgts as output buffer.

@param [in]  poh Pool connection handle.
@param [out] tgts    Optional, returned storage targets in this pool.
@param [in,out]
    info    Optional, returned pool information,
        see daos_pool_info_bit.
@param [out] pool_prop
        Optional, returned pool properties.
        If it is NULL, then needs not query the properties.
        If pool_prop is non-NULL but its dpp_entries is NULL,
        will query all pool properties, DAOS internally
        allocates the needed buffers and assign pointer to
        dpp_entries.
        If pool_prop's dpp_nr > 0 and dpp_entries is non-NULL,
        will query the properties for specific dpe_type(s), DAOS
        internally allocates the needed buffer for dpe_str or
        dpe_val_ptr, if the dpe_type with immediate value then
        will directly assign it to dpe_val.
        User can free the associated buffer by calling
        daos_prop_free().
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_INVAL  Invalid parameter
        -DER_UNREACH    Network is unreachable
        -DER_NO_HDL Invalid pool handle
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pools_1ga18515908bfa6f3a2c52f598c57641c72';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_pool_query_target';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'tgt';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
d_rank_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'rank';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_target_info_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'info';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      func-mem-desc-line = '315';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Query information of storage targets within a DAOS pool.

@param [in]  poh Pool connection handle.
@param [in]  tgt A single target index to query.
@param [in]  rank    Rank of the target index to query.
@param [out] info    Returned storage information of \a tgt.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_INVAL  Invalid parameter
        -DER_NO_HDL Invalid pool handle
        -DER_UNREACH    Network is unreachable
        -DER_NONEXIST   No pool on specified target
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pools_1ga560c030cb0736dc59c2dec1a1c905a75';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_pool_list_attr';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'buffer';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      func-mem-desc-line = '336';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
List the names of all user-defined pool attributes.

@param [in]  poh Pool handle.
@param [out] buffer  Buffer containing concatenation of all attribute
        names, each being null-terminated. No truncation is
        performed and only full names will be returned.
        NULL is permitted in which case only the aggregate
        size will be retrieved.
@param [in,out]
    size    [in]: Buffer size. [out]: Aggregate size of all
        attribute names (excluding terminating null
        characters), regardless of the actual buffer
        size.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pools_1ga7b4aea52094f634663fd5c34405f5bdd';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_pool_get_attr';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'n';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char const *const
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'names';
        func-mem-param-array = '[]';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *const
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'buffers';
        func-mem-param-array = '[]';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'sizes';
        func-mem-param-array = '[]';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      func-mem-desc-line = '358';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Retrieve a list of user-defined pool attribute values.

@param [in]  poh Pool handle
@param [in]  n   Number of attributes
@param [in]  names   Array of \a n null-terminated attribute names.
@param [out] buffers Array of \a n buffers to store attribute values.
        Attribute values larger than corresponding buffer sizes
        will be truncated. NULL values are permitted and will be
        treated identical to zero-length buffers, in which case
        only the sizes of attribute values will be retrieved.
@param [in,out]
    sizes   [in]: Array of \a n buffer sizes. [out]: Array of actual
        sizes of \a n attribute values, regardless of given
        buffer sizes.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pools_1gaa5cd5e2e0a749bbdcc9480b96eb91541';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_pool_set_attr';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'n';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char const *const
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'names';
        func-mem-param-array = '[]';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void const *const
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'values';
        func-mem-param-array = '[]';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t const
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'sizes';
        func-mem-param-array = '[]';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      func-mem-desc-line = '374';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create or update a list of user-defined pool attributes.

@param [in]  poh Pool handle
@param [in]  n   Number of attributes
@param [in]  names   Array of \a n null-terminated attribute names.
@param [in]  values  Array of \a n attribute values
@param [in]  sizes   Array of \a n elements containing the sizes of
        respective attribute values.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pools_1ga8196c2e626bc404fb8f01ec8cf63dffb';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_pool_del_attr';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'n';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char const *const
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'names';
        func-mem-param-array = '[]';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      func-mem-desc-line = '397';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Delete a list of user-defined pool attributes.

@param [in]  poh Pool handle
@param [in]  n   Number of attributes
@param [in]  names   Array of \a n null-terminated attribute names.
@param [in]  ev  Completion event, it is optional and can be NULL.
        The function will run in blocking mode if \a ev is NULL.

\return     These values will be returned by \a ev::ev_error in
        non-blocking mode:
        0       Success
        -DER_INVAL  Invalid parameter
        -DER_NO_PERM    Permission denied
        -DER_UNREACH    Network is unreachable
        -DER_NO_HDL Invalid container handle
        -DER_NOMEM  Out of memory
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pools_1gae61de46acf8f2d56a9bf056e244b4d6d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_pool_list_cont';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ncont';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_pool_cont_info *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'cbuf';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      func-mem-desc-line = '418';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
List a pool's containers.

@param [in]  poh Pool connection handle.
@param [in,out]
    ncont   [in] \a cbuf length in items.
        [out] Number of containers in the pool.
@param [out] cbuf    Array of container structures.
        NULL is permitted in which case only the number
        of containers will be returned in \a ncont.
@param [in]  ev  Completion event. Optional and can be NULL.
        The function will run in blocking mode
        if \a ev is NULL.

\return     0       Success
        -DER_TRUNC  \a cbuf cannot hold \a ncont items
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pools_1ga396e9f90ccec256ddb6c5d3ca5d2ef11';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_pool_connect2';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pool';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'sys';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'flags';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_pool_info_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'info';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_event_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ev';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
      func-mem-desc-line = '426';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Backward compatibility code.
Please don't use directly
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_pool.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'daos__prop_8h';
  file-name = 'daos_prop.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___pool_container_1ga680473e94e8888e997540fb88c2b9dc1';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_PROP_PO_EC_CELL_SZ_MIN';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(1UL << 10)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      define-mem-desc-line = '77';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___pool_container_1gaa9d0e35fa04470a13b04e3b7ef668455';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_PROP_PO_EC_CELL_SZ_MAX';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(1UL << 30)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      define-mem-desc-line = '78';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___pool_container_1gaff20e70c8782c57fe743aa54da9699a0';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_PROP_PO_NUM';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(DAOS_PROP_PO_MAX - DAOS_PROP_PO_MIN - 1)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      define-mem-desc-line = '83';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of pool property types
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___pool_container_1ga06974290035bbf551b8ff9ff15c26b44';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_SELF_HEAL_AUTO_EXCLUDE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(1U << 0)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      define-mem-desc-line = '95';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
self headling strategy bits 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___pool_container_1gaeac09965589fb3e820b388d9bc9853e9';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_SELF_HEAL_AUTO_REBUILD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(1U << 1)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      define-mem-desc-line = '96';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___pool_container_1gaf1cb867da28f5270c4b3d56501686002';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_PROP_CO_NUM';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(DAOS_PROP_CO_MAX - DAOS_PROP_CO_MIN - 1)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      define-mem-desc-line = '216';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of container property types
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___pool_container_1gac4206015a9d35f1e8452de289abe39ba';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_PROP_CO_CLEAR';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(0x1)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      define-mem-desc-line = '315';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
clear the UNCLEAN status 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___pool_container_1gaf0f0337f5555000a021e5d89d209156d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_PROP_CO_STATUS_VAL';
      define-mem-param  = {
        define-mem-def-name = 'status';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'flag';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'pm_ver';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
	((((uint64_t)(flag)) << 48)		|			\
	 (((uint64_t)(status) & 0xFFFF) << 32)	|			\
	 ((uint64_t)(pm_ver)))
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      define-mem-desc-line = '325';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___pool_container_1gac3fd21f5a6eb50a58301ad572c8dbaf6';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_PROP_ENTRIES_MAX_NR';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(128)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      define-mem-desc-line = '363';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Allowed max number of property entries in daos_prop_t 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___pool_container_1gaee6fdbbe2d6446abf130688bcb43cf13';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_PROP_LABEL_MAX_LEN';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(127)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      define-mem-desc-line = '366';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
max length for pool/container label - NB: POOL_LIST_CONT RPC wire format 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___pool_container_1ga128ba376100c124b9c4dac7f46ded04b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_PROP_MAX_LABEL_BUF_LEN';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(DAOS_PROP_LABEL_MAX_LEN + 1)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      define-mem-desc-line = '368';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
DAOS_PROP_LABEL_MAX_LEN including NULL terminator 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    typedef = {
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group___pool_container_1ga9baee33578c23a2942ac8c6da0827d28';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'daos_cont_layout_t';
      typedef-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      typedef-mem-desc-line = '218';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    };
    enum = {
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___pool_container_1gae2728a9da6129038e8c6717a41576276';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = 'daos_pool_props';
      enum-mem-enum = { enum-name = DAOS_PROP_PO_MIN; enum-value = '= 0'; };
      enum-mem-enum = { enum-name = DAOS_PROP_PO_LABEL; };
      enum-mem-enum = { enum-name = DAOS_PROP_PO_ACL; };
      enum-mem-enum = { enum-name = DAOS_PROP_PO_SPACE_RB; };
      enum-mem-enum = { enum-name = DAOS_PROP_PO_SELF_HEAL; };
      enum-mem-enum = { enum-name = DAOS_PROP_PO_RECLAIM; };
      enum-mem-enum = { enum-name = DAOS_PROP_PO_OWNER; };
      enum-mem-enum = { enum-name = DAOS_PROP_PO_OWNER_GROUP; };
      enum-mem-enum = { enum-name = DAOS_PROP_PO_SVC_LIST; };
      enum-mem-enum = { enum-name = DAOS_PROP_PO_EC_CELL_SZ; };
      enum-mem-enum = { enum-name = DAOS_PROP_PO_MAX; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      enum-mem-desc-line = '27';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
DAOS pool property types
valid in range (DAOS_PROP_PO_MIN, DAOS_PROP_PO_MAX)
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___pool_container_1ga385c44f6fb256e5716a2302a5b940388';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = '@10';
      enum-mem-enum = { enum-name = DAOS_RECLAIM_DISABLED; enum-value = '= 0'; };
      enum-mem-enum = { enum-name = DAOS_RECLAIM_LAZY; };
      enum-mem-enum = { enum-name = DAOS_RECLAIM_SNAPSHOT; };
      enum-mem-enum = { enum-name = DAOS_RECLAIM_BATCH; };
      enum-mem-enum = { enum-name = DAOS_RECLAIM_TIME; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      enum-mem-desc-line = '86';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
DAOS space reclaim strategy 
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___pool_container_1gab180afe91e0c5c67f91fe7177f53f6a0';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = 'daos_cont_props';
      enum-mem-enum = { enum-name = DAOS_PROP_CO_MIN; enum-value = '= 0x1000'; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_LABEL; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_LAYOUT_TYPE; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_LAYOUT_VER; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_CSUM; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_CSUM_CHUNK_SIZE; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_CSUM_SERVER_VERIFY; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_REDUN_FAC; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_REDUN_LVL; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_SNAPSHOT_MAX; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_ACL; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_COMPRESS; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_ENCRYPT; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_OWNER; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_OWNER_GROUP; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_DEDUP; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_DEDUP_THRESHOLD; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_ROOTS; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_STATUS; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_ALLOCED_OID; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_EC_CELL_SZ; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_MAX; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      enum-mem-desc-line = '102';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
DAOS container property types
valid in rage (DAOS_PROP_CO_MIN, DAOS_PROP_CO_MAX).
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___pool_container_1gabc5c98fcc1211af2b80116dd6e0a035d';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = '@11';
      enum-mem-enum = { enum-name = DAOS_PROP_CO_LAYOUT_UNKNOWN; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_LAYOUT_UNKOWN; enum-value = '= DAOS_PROP_CO_LAYOUT_UNKNOWN'; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_LAYOUT_POSIX; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_LAYOUT_HDF5; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_LAYOUT_PYTHON; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_LAYOUT_SPARK; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_LAYOUT_DATABASE; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_LAYOUT_ROOT; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_LAYOUT_SEISMIC; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_LAYOUT_METEO; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_LAYOUT_MAX; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      enum-mem-desc-line = '221';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
container layout type 
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___pool_container_1gac36f475ca5b446f4fde4c9b90bec77c8';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = '@12';
      enum-mem-enum = { enum-name = DAOS_PROP_CO_CSUM_OFF; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_CSUM_CRC16; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_CSUM_CRC32; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_CSUM_CRC64; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_CSUM_SHA1; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_CSUM_SHA256; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_CSUM_SHA512; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_CSUM_ADLER32; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      enum-mem-desc-line = '236';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
container checksum type 
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___pool_container_1ga05589fbab0657f08285ebdfe93f5ec9e';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = '@13';
      enum-mem-enum = { enum-name = DAOS_PROP_CO_CSUM_SV_OFF; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_CSUM_SV_ON; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      enum-mem-desc-line = '248';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
container checksum server verify 
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___pool_container_1ga16af7b253440dadd46a80a4b9fddba4d';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = '@14';
      enum-mem-enum = { enum-name = DAOS_PROP_CO_DEDUP_OFF; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_DEDUP_MEMCMP; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_DEDUP_HASH; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      enum-mem-desc-line = '254';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
container deduplication 
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___pool_container_1gaba01db17f4a2bfbc3db60dc172972a25';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = '@15';
      enum-mem-enum = { enum-name = DAOS_PROP_CO_COMPRESS_OFF; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_COMPRESS_LZ4; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_COMPRESS_DEFLATE; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_COMPRESS_DEFLATE1; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_COMPRESS_DEFLATE2; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_COMPRESS_DEFLATE3; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_COMPRESS_DEFLATE4; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      enum-mem-desc-line = '261';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
container compression type 
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___pool_container_1gaaf105ae5beaca1dee30ae54530691fce';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = '@16';
      enum-mem-enum = { enum-name = DAOS_PROP_CO_ENCRYPT_OFF; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_ENCRYPT_AES_XTS128; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_ENCRYPT_AES_XTS256; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_ENCRYPT_AES_CBC128; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_ENCRYPT_AES_CBC192; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_ENCRYPT_AES_CBC256; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_ENCRYPT_AES_GCM128; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_ENCRYPT_AES_GCM256; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      enum-mem-desc-line = '272';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
container encryption type 
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___pool_container_1ga80155586fa275b28773c9b203f52caba';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = '@17';
      enum-mem-enum = { enum-name = DAOS_PROP_CO_REDUN_RF0; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_REDUN_RF1; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_REDUN_RF2; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_REDUN_RF3; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_REDUN_RF4; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      enum-mem-desc-line = '284';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
container redundancy factor 
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___pool_container_1ga6b7b47dd702d9e331586d485013fd1ea';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = '@18';
      enum-mem-enum = { enum-name = DAOS_PROP_CO_REDUN_MIN; enum-value = '= 1'; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_REDUN_RANK; enum-value = '= 1'; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_REDUN_MAX; enum-value = '= 254'; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      enum-mem-desc-line = '296';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
Level of fault-domain to use for object allocation
rank is hardcoded to 1, [2-254] are defined by the admin
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___pool_container_1gaf9bdc3014f3d54c426b6d2df10de4960';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = '@19';
      enum-mem-enum = { enum-name = DAOS_PROP_CO_HEALTHY; };
      enum-mem-enum = { enum-name = DAOS_PROP_CO_UNCLEAN; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      enum-mem-desc-line = '303';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
container status flag 
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pool_container_1ga335e90439b9113cc578f7bca5e5acdcb';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static uint64_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_prop_co_status_2_val';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_co_status *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'co_status';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      func-mem-desc-line = '331';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pool_container_1ga1b3d2f20b184221cf6eaa49669a5a73e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_prop_val_2_co_status';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'val';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_co_status *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'co_status';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      func-mem-desc-line = '339';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pool_container_1ga4f1e9c510ba45f8395416136fba3d0f8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static bool
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_label_is_valid';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'label';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      func-mem-desc-line = '382';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Check if DAOS (pool or container property) label string is valid.
DAOS labels must consist only of alphanumeric characters, colon ':',
period '.', hyphen '-' or underscore '_', and must be of length
[1 - DAOS_PROP_LABEL_MAX_LEN].

@param [in]  label   Label string

\return     true        Label meets length/format requirements
        false       Label is not valid length or format
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pool_container_1gaab37f041b2fce74919ee81a8918ce29f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
daos_prop_t *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_prop_alloc';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'entries_nr';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      func-mem-desc-line = '456';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Allocate DAOS properties.

@param [in]  entries_nr  number of entries

\return allocated daos_prop_t pointer, NULL if failed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pool_container_1gaba049ab387781849002e3943554a6b6a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_prop_fini';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_prop_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'prop';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      func-mem-desc-line = '464';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Free the DAOS property entries.

@param [in]  prop    property entries to be freed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pool_container_1ga4e37d76ae1c35f0187c1cb83bd37d6b7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_prop_free';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_prop_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'prop';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      func-mem-desc-line = '472';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Free the DAOS properties and the \a prop.

@param [in]  prop    properties to be freed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pool_container_1gaf2c600d18d2ab245cff233f600700e11';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_prop_from_str';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'str';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'len';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_prop_t **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'prop';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      func-mem-desc-line = '487';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Allocate a new property from a string buffer of property entries and values. That buffer has to
be of the format:
prop_entry_name1:value1;prop_entry_name2:value2;prop_entry_name3:value3;
\a prop must be freed with daos_prop_free() to release allocated space.
This supports properties that can be modified on container creation only:
label, cksum, cksum_size, srv_cksum, dedup, dedup_threshold, compression, encryption, rf, ec_cell

@param [in]  str Serialized string of property entries and their values
@param [in]  len Serialized string length
@param [out] prop    Property that is created
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pool_container_1ga6c552e5faa4ab951d0eb483a1b4bb7e6';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
daos_prop_t *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_prop_merge';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_prop_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'old_prop';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_prop_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'new_prop';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      func-mem-desc-line = '498';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Merge a set of new DAOS properties into a set of existing DAOS properties.

@param [in]  old_prop    Existing set of properties
@param [in]  new_prop    New properties - may override old entries

\return Newly allocated merged property
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pool_container_1ga7162e77635ea59955da632fbc86a889d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
struct daos_prop_entry *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_prop_entry_get';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_prop_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'prop';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'type';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      func-mem-desc-line = '509';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Search and return a property entry of type \a type in the property list
\a prop
Return NULL if not found.

@param [in]      prop        Property list
@param [in]      type        Type of property to look for
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pool_container_1ga94478f75d67b071c92f391d4f4c538e3';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_prop_set_str';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_prop_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'prop';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'type';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'str';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'len';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      func-mem-desc-line = '524';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Set the string value of a property entry in a property. The property type must expect that it's
entry is of a string type. This duplicates the string internally and the entry string is freed
with daos_free_prop(). The user does not need to keep the string buffer around after this
function is called. If the entry already has a string value set, it frees that and overwrites it
with this new string.

@param [in]      prop        Property list
@param [in]      type        Type of property to look for
@param [in]      str     String value to set in the prop entry
@param [in]           len        Length of \a str
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pool_container_1gae59e646afc08fcaf38d7d854861ae2e5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_prop_entry_set_str';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_prop_entry *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'entry';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'str';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'len';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      func-mem-desc-line = '535';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Set the entry string value with the provided \a str.
Convenience Function.

@param [in,out]  entry       Entry where to duplicate the str into.
@param [in]      str     String value to set in the prop entry
@param [in]           len        Length of \a str
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pool_container_1gaf9d83f2148d6961beb4cbfd23d1c9fd8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_prop_set_ptr';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_prop_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'prop';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'type';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const void *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ptr';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      func-mem-desc-line = '550';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Set the pointer value of a property entry in a property. The property type must expect that it's
entry is of a pointer type. This duplicates the buffer internally and the entry buffer is freed
with daos_free_prop(). The user does not need to keep the string buffer around after this
function is called. If the entry already has a value set, it frees that and overwrites it with
this new value.

@param [in]      prop        Property list
@param [in]      type        Type of property to look for
@param [in]      ptr     Pointer to value of entry to set
@param [in]           size       Size of value
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pool_container_1ga88344c8a3eb9474b7a15e0bbada4bcbb';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_prop_entry_set_ptr';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_prop_entry *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'entry';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const void *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ptr';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      func-mem-desc-line = '561';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Set the entry pointer value with the provided \a ptr.
Convenience Function.

@param [in,out]  entry       Entry where to copy the value.
@param [in]      ptr             Pointer to value of entry to set
@param [in]           size            Size of value
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pool_container_1ga3c057aea96bb8802b761168ae41dcc55';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_prop_entry_dup_ptr';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_prop_entry *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'entry_dst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_prop_entry *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'entry_src';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'len';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      func-mem-desc-line = '575';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Duplicate a generic pointer value from one DAOS prop entry to another.
Convenience function.

@param [in,out]  entry_dst   Destination entry
@param [in]      entry_src   Entry to be copied
@param [in]      len     Length of the memory to be copied

\return     0       Success
        -DER_NOMEM  Out of memory
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pool_container_1gaee4d489bcb02340bf08b2f32fcde3d20';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_prop_entry_cmp_acl';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_prop_entry *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'entry1';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_prop_entry *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'entry2';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      func-mem-desc-line = '588';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Compare a pair of daos_prop_entry that contain ACLs.

@param entry1  DAOS prop entry for ACL
@param entry2  DAOS prop entry for ACL

\return 0       Entries match
    -DER_MISMATCH   Entries do NOT match
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pool_container_1ga7ece7f342748b1aad1cb496f74bad47f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_prop_entry_dup_co_roots';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_prop_entry *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dst';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_prop_entry *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'src';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      func-mem-desc-line = '602';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Duplicate container roots from one DAOS prop entry to another.
Convenience function.

@param [in,out]  dst     Destination entry
@param [in]      src     Entry to be copied

\return     0       Success
        -DER_NOMEM  Out of memory
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pool_container_1ga6e7888a7ef36f690da20721b06ebfe56';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_prop_has_str';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_prop_entry *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'entry';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      func-mem-desc-line = '614';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Check a DAOS prop entry for a string value.

@param [in]      entry       Entry to be checked.

\return     true        Has a string value.
        false       Does not have a string value.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___pool_container_1ga0abb6f98a98e2bfdd1648bcfe8577464';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_prop_has_ptr';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_prop_entry *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'entry';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
      func-mem-desc-line = '625';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Check a DAOS prop entry for a pointer value.

@param [in]      entry       Entry to be checked.

\return     true        Has a pointer value.
        false       Does not have a pointer value.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_prop.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'daos__security_8h';
  file-name = 'daos_security.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___security_1ga5da0db259a08ac52b17b365f8b0ca67e';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_ACL_VERSION';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(1)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      define-mem-desc-line = '31';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Version of the ACL structure format
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___security_1gafe5b8675d3b33159e92d7767d86c4191';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_ACL_MAX_PRINCIPAL_LEN';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(255)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      define-mem-desc-line = '37';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Maximum length of the user@domain principal string, not including null
terminator.
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___security_1gaed312b1fc64331446da1e75b6b71ca55';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_ACL_MAX_PRINCIPAL_BUF_LEN';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(DAOS_ACL_MAX_PRINCIPAL_LEN + 1)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      define-mem-desc-line = '39';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
DAOS_ACL_MAX_PRINCIPAL_LEN including NULL terminator 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___security_1ga89d756235367092de18658e9344e726d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_ACL_PRINCIPAL_OWNER';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
"OWNER@"
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      define-mem-desc-line = '44';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
String values for the special principal types
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___security_1ga9eb004ce8718da155ec3780781770e71';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_ACL_PRINCIPAL_OWNER_GRP';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
"GROUP@"
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      define-mem-desc-line = '45';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___security_1ga93ac7b5a8f083e57252091b0e845f0f2';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_ACL_PRINCIPAL_EVERYONE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
"EVERYONE@"
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      define-mem-desc-line = '46';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___security_1ga258ac58ab5e7c2aed7aa9067aeb47fd4';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_ACL_MAX_ACE_LEN';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(65536)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      define-mem-desc-line = '51';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Maximum length of daos_acl::dal_ace (dal_len's value).
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___security_1ga4e3501843b74f883181f7add3c704447';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_ACL_MAX_ACE_STR_LEN';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(DAOS_ACL_MAX_PRINCIPAL_LEN + 64)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      define-mem-desc-line = '57';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Maximum length of an ACE provided in string format:
 <access>:<flags>:<principal>:<perms>
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___security_1ga2ce310fbd02127e74701e966af800767';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_ACL_ACCESS_ALL';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
				 (DAOS_ACL_ACCESS_ALLOW |		\
				 DAOS_ACL_ACCESS_AUDIT |		\
				 DAOS_ACL_ACCESS_ALARM)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      define-mem-desc-line = '103';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Mask of all valid access bits
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___security_1ga9755d10df17bcd4937163bbfccfc06cc';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_ACL_FLAG_ALL';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
				 (DAOS_ACL_FLAG_GROUP |			\
				 DAOS_ACL_FLAG_POOL_INHERIT |		\
				 DAOS_ACL_FLAG_ACCESS_FAIL |		\
				 DAOS_ACL_FLAG_ACCESS_SUCCESS)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      define-mem-desc-line = '124';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Mask of all valid flag bits
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___security_1ga821041c70bd1e5747c7002c9bdf5e049';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_ACL_PERM_POOL_ALL';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
				 (DAOS_ACL_PERM_READ |			\
				 DAOS_ACL_PERM_GET_PROP |		\
				 DAOS_ACL_PERM_WRITE |			\
				 DAOS_ACL_PERM_CREATE_CONT |		\
				 DAOS_ACL_PERM_DEL_CONT)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      define-mem-desc-line = '147';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Mask of all valid permissions for DAOS pools
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___security_1gab8bc9560561bacf657a4688630f9ce06';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_ACL_PERM_CONT_ALL';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
				 (DAOS_ACL_PERM_READ |			\
				 DAOS_ACL_PERM_WRITE |			\
				 DAOS_ACL_PERM_DEL_CONT |		\
				 DAOS_ACL_PERM_GET_PROP |		\
				 DAOS_ACL_PERM_SET_PROP |		\
				 DAOS_ACL_PERM_GET_ACL |		\
				 DAOS_ACL_PERM_SET_ACL |		\
				 DAOS_ACL_PERM_SET_OWNER)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      define-mem-desc-line = '156';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Mask of all valid permissions for DAOS containers
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___security_1ga4889aa9cbb4272bcf3c976e5aea57f0a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_ACL_PERM_ALL';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
				 (DAOS_ACL_PERM_POOL_ALL |		\
				 DAOS_ACL_PERM_CONT_ALL)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      define-mem-desc-line = '168';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Mask of all valid permission bits in DAOS
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    enum = {
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___security_1gae5134a9b969724c62e7c10e294f50db0';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = 'daos_acl_principal_type';
      enum-mem-enum = { enum-name = DAOS_ACL_OWNER; };
      enum-mem-enum = { enum-name = DAOS_ACL_USER; };
      enum-mem-enum = { enum-name = DAOS_ACL_OWNER_GROUP; };
      enum-mem-enum = { enum-name = DAOS_ACL_GROUP; };
      enum-mem-enum = { enum-name = DAOS_ACL_EVERYONE; };
      enum-mem-enum = { enum-name = NUM_DAOS_ACL_TYPES; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      enum-mem-desc-line = '81';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
Type of principal for the Access Control Entry.
OWNER, OWNER_GROUP, and EVERYONE are special principals that do not need
a principal name string.
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___security_1ga29ea0eb0de30a30bdfb08e77e2fb146f';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = 'daos_acl_access_type';
      enum-mem-enum = { enum-name = DAOS_ACL_ACCESS_ALLOW; enum-value = '= (1U << 0)'; };
      enum-mem-enum = { enum-name = DAOS_ACL_ACCESS_AUDIT; enum-value = '= (1U << 1)'; };
      enum-mem-enum = { enum-name = DAOS_ACL_ACCESS_ALARM; enum-value = '= (1U << 2)'; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      enum-mem-desc-line = '94';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
Bits representing access types to set permissions for
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___security_1ga08ce0e314a139201d03d8b965bbc4220';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = 'daos_acl_flags';
      enum-mem-enum = { enum-name = DAOS_ACL_FLAG_GROUP; enum-value = '= (1U << 0)'; };
      enum-mem-enum = { enum-name = DAOS_ACL_FLAG_POOL_INHERIT; enum-value = '= (1U << 1)'; };
      enum-mem-enum = { enum-name = DAOS_ACL_FLAG_ACCESS_FAIL; enum-value = '= (1U << 2)'; };
      enum-mem-enum = { enum-name = DAOS_ACL_FLAG_ACCESS_SUCCESS; enum-value = '= (1U << 3)'; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      enum-mem-desc-line = '110';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
Bits representing access flags
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___security_1gaad2be72f90918d6084c5ee81ddb7d673';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = 'daos_acl_perm';
      enum-mem-enum = { enum-name = DAOS_ACL_PERM_READ; enum-value = '= (1U << 0)'; };
      enum-mem-enum = { enum-name = DAOS_ACL_PERM_WRITE; enum-value = '= (1U << 1)'; };
      enum-mem-enum = { enum-name = DAOS_ACL_PERM_CREATE_CONT; enum-value = '= (1U << 2)'; };
      enum-mem-enum = { enum-name = DAOS_ACL_PERM_DEL_CONT; enum-value = '= (1U << 3)'; };
      enum-mem-enum = { enum-name = DAOS_ACL_PERM_GET_PROP; enum-value = '= (1U << 4)'; };
      enum-mem-enum = { enum-name = DAOS_ACL_PERM_SET_PROP; enum-value = '= (1U << 5)'; };
      enum-mem-enum = { enum-name = DAOS_ACL_PERM_GET_ACL; enum-value = '= (1U << 6)'; };
      enum-mem-enum = { enum-name = DAOS_ACL_PERM_SET_ACL; enum-value = '= (1U << 7)'; };
      enum-mem-enum = { enum-name = DAOS_ACL_PERM_SET_OWNER; enum-value = '= (1U << 8)'; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      enum-mem-desc-line = '132';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
Bits representing the specific permissions that may be set
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1ga5d3b61a8844c341e30ca715c59737392';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
struct daos_acl *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_acl_create';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_ace *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'aces';
        func-mem-param-array = '[]';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_aces';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '211';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Allocate an DAOS Access Control List.

@param [in]  aces        Array of pointers to ACEs to be put in the ACL.
@param [in]  num_aces    Number of ACEs in array

\return allocated daos_acl pointer, NULL if failed
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1gaa35a8ae543a617d30b6b9a7ff27448e1';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
struct daos_acl *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_acl_dup';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_acl *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'acl';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '222';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Allocate a new copy of a DAOS Access Control List.

@param [in]  acl ACL structure to be copied

\return Newly allocated copy of the ACL, or NULL if the ACL can't be
    allocated
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1ga4276e217b1049243377ce7c804e7211f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_acl_free';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_acl *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'acl';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '230';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Free a DAOS Access Control List.

@param [in]  acl ACL pointer to be freed
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1ga367e84cda2dec200159fe95f943c4aa5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
ssize_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_acl_get_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_acl *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'acl';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '242';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Get the total size of the DAOS Access Control List in bytes.
This includes the size of the header as well as the ACE list.

@param [in]  acl ACL to get the size of

\return Size of ACL in bytes
    -DER_INVAL      Invalid input
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1ga68ac4a8308f3bb0636f7223f22f7e4af';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
struct daos_ace *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_acl_get_next_ace';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_acl *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'acl';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_ace *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'current_ace';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '255';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Get the next Access Control Entry in the Access Control List, for iterating
over the list.

@param [in]  acl     ACL to traverse
@param [in]  current_ace Current ACE, to determine the next one, or NULL
            for the first ACE

\return Pointer to the next ACE in the ACL, or NULL if at the end
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1ga8fc34a954cee197ac396b6345ba6087f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_acl_get_ace_for_principal';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_acl *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'acl';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
enum daos_acl_principal_type
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'type';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'principal';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_ace **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ace';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '272';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Search the Access Control List for an Access Control Entry for a specific
principal.

@param [in]  acl     ACL to search
@param [in]  type        Principal type to search for
@param [in]  principal   Principal name, if type is USER or GROUP. NULL
            otherwise.
@param [out] ace     Pointer to matching ACE within ACL (not a copy)

\return 0       Success
    -DER_INVAL  Invalid input
    -DER_NONEXIST   Matching ACE not found
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1ga60b1b32405026adc249c9c1e8a52e1d7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_acl_add_ace';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_acl **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'acl';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_ace *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'new_ace';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '294';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Insert an Access Control Entry in the appropriate location in the ACE
list. The expected order is: Owner, Users, Owner-Group, Groups, Everyone.

The ACL structure may be reallocated to make room for the new ACE. If so the
old structure will be freed.

If the new ACE is an update of an existing entry, it will replace the old
entry.

@param [in]  acl ACL to modify
@param [in]  new_ace ACE to be added

\return 0       Success
    -DER_INVAL  Invalid input
    -DER_NOMEM  Failed to allocate required memory
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1gae9ef8ca19b32a2ed1f1e7672a48fc23e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_acl_remove_ace';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_acl **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'acl';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
enum daos_acl_principal_type
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'type';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'principal_name';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '313';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Remove an Access Control Entry from the list.

When the entry is removed, the ACL is reallocated, and the old structure
is freed.

@param [in]  acl         Original ACL
@param [in]  type            Principal type of the ACE to remove
@param [in]  principal_name      Principal name of the ACE to remove
                (NULL if type isn't user/group)

\return 0       Success
    -DER_INVAL  Invalid input
    -DER_NOMEM  Failed to allocate required memory
    -DER_NONEXIST   Requested ACE was not in the ACL
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1ga5a32d140365259a4100b6bae1817d7ed';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_acl_dump';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_acl *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'acl';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '324';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Print the Access Control List to stdout in a detailed human-readable format,
for debug purposes.

@param acl Access Control List to print
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1gad0a9f2f679dc7f937eef33816ab2c4d8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_acl_validate';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_acl *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'acl';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '337';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Parse and sanity check the entire Access Control List for valid values and
internal consistency.

@param acl Access Control List to sanity check

\return 0       ACL is valid
    -DER_INVAL  ACL is not valid
    -DER_NOMEM  Ran out of memory while checking
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1ga3c30d175b713367e31af5d65829f93a8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_acl_pool_validate';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_acl *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'acl';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '351';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Check that the Access Control List is valid for use with a DAOS pool.

This includes the checks in daos_acl_validate().

@param acl Access Control List to sanity check

\return 0       ACL is valid
    -DER_INVAL  ACL is not valid
    -DER_NOMEM  Ran out of memory while checking
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1gac39258dfda7a3bbbfc988cd379121ff5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_acl_cont_validate';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_acl *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'acl';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '365';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Check that the Access Control List is valid for use with a DAOS container.

This includes the checks in daos_acl_validate().

@param acl Access Control List to sanity check

\return 0       ACL is valid
    -DER_INVAL  ACL is not valid
    -DER_NOMEM  Ran out of memory while checking
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1ga6f89d6661bf74cdf3a1f40792d150d8c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
struct daos_ace *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_ace_create';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
enum daos_acl_principal_type
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'type';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'principal_name';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '382';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Allocate a new Access Control Entry with an appropriately aligned principal
name, if applicable.

Only User and Group types use principal name.

@param [in]  type            Type of principal for the ACE
@param [in]  principal_name      Principal name will be added to the end
                of the structure. For types that don't
                use it, it is ignored. OK to pass NULL.

\return New ACE structure with an appropriately packed principal name,
        length, and type set.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1gaf1d36ab6389b11add5a24cb730117545';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_ace_free';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_ace *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ace';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '390';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Free an Access Control Entry allocated by daos_ace_alloc().

@param [in]  ace ACE to be freed
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1ga7668eaba7a5e973848ec16f6082d4a19';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
ssize_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_ace_get_size';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_ace *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ace';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '402';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Get the length in bytes of an Access Control Entry.
The entries have variable length.

@param [in]  ace ACE to get the size of

\return Size of ACE in bytes
    -DER_INVAL      Invalid input
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1gaa1eae86ec6a162502522e8d7acae10ad';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_ace_dump';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_ace *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ace';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'tabs';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '411';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Print the Access Control Entry to stdout in a verbose human-readable format.

@param ace Access Control Entry to print
@param tabs    Number of tabs to indent at top level
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1gabfa3de7205474b0c1061487530d3eb60';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_ace_is_valid';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_ace *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ace';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '422';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sanity check the Access Control Entry structure for valid values and internal
consistency.

@param ace Access Control Entry to be checked

\return True if the ACE is valid, false otherwise
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1gaa6b4923d9ced6259614f2de9fd9a15e8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_acl_principal_is_valid';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '438';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sanity check that the principal is a properly-formatted name string for use
in an Access Control List.

The check is not very strict. It verifies that the name is in the
name@[domain] format, but does not make assumptions about legal characters
in the name or verify that the principal actually exists

@param name    Principal name to be validated

\return true if the name is properly formatted
    false otherwise
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1gad5232b83868adb948710d14af46bfebe';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_acl_uid_to_principal';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uid_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'uid';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '454';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Convert a local uid to a properly-formatted principal name for use with the
Access Control List API.

@param [in]  uid UID to convert
@param [out] name    Newly allocated null-terminated string containing the
        formatted principal name

\return 0       Success
    -DER_INVAL  Invalid input
    -DER_NONEXIST   UID not found
    -DER_NOMEM  Could not allocate memory
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1gae3ba90f0b6d573714048b8d0b003fc77';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_acl_gid_to_principal';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
gid_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'gid';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '470';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Convert a local gid to a properly-formatted principal name for use with the
Access Control List API.

@param [in]  gid GID to convert
@param [out] name    Newly allocated null-terminated string containing the
        formatted principal name

\return 0       Success
    -DER_INVAL  Invalid input
    -DER_NONEXIST   GID not found
    -DER_NOMEM  Could not allocate memory
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1ga2983d9e3ecb4b9cde346578cafb175d5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_acl_principal_to_uid';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'principal';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uid_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'uid';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '485';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Convert the name of a user principal from an Access Control List to its
corresponding local UID.

@param [in]  principal   Principal name
@param [out] uid     UID of the principal

\return 0       Success
    -DER_INVAL  Invalid input
    -DER_NONEXIST   User not found
    -DER_NOMEM  Could not allocate memory
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1ga1dc782b2cccdee7c433d0a7bdc6fba0b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_acl_principal_to_gid';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'principal';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
gid_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'gid';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '500';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Convert the name of a group principal from an Access Control List to its
corresponding local GID.

@param [in]  principal   Principal name
@param [out] gid     GID of the principal

\return 0       Success
    -DER_INVAL  Invalid input
    -DER_NONEXIST   Group not found
    -DER_NOMEM  Could not allocate memory
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1gac3dd75e331368a7317c460c25a0ba243';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_ace_get_principal_str';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_ace *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ace';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '511';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Get the principal name string from an Access Control Entry.

@param [in]  ace Access Control Entry

\return Either the string from the principal name field, or one of the
    special principal names: OWNER@, GROUP@, EVERYONE@
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1gaee7383e3ce49555847fe95db67fdf6ec';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_ace_from_str';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'str';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_ace **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ace';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '525';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Convert an Access Control Entry formatted as a string to a daos_ace
structure.

@param [in]  str String defining an ACE
@param [out] ace Newly allocated ACE structure

\return 0       Success
    -DER_INVAL  Invalid input
    -DER_NOMEM  Could not allocate memory
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1ga3308818651306031c08d48db55098607';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_ace_to_str';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_ace *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ace';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'buf';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'buf_len';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '542';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Convert an Access Control Entry in the form of a daos_ace structure to a
compact string.

Limitation: A valid ACE with different permissions for different access types
cannot be formatted as a single string, and will be rejected as invalid.

@param [in]  ace     ACE structure
@param [out] buf     Buffer to write the string
@param [out] buf_len     Size of buffer

\return 0       Success
    -DER_INVAL  Invalid input
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1ga4df14d2c8388b4051fb27bd4a770847d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_ace_str_get_verbose';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ace_str';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'buf';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'buf_len';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '556';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Convert an Access Control Entry string to a verbose string.

@param [in]  ace_str     ACE string
@param [out] buf     Output buffer
@param [in]  buf_len     Length of output buffer

\return 0       Success
    -DER_INVAL  Invalid input string
    -DER_TRUNC  Output didn't fit in buffer
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1ga000737cd36d5efc1269f96438c1d77c6';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_acl_from_strs';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ace_strs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ace_nr';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_acl **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'acl';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '571';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Convert a list of Access Control Entries formatted as strings to a daos_acl
structure.

@param [in]  ace_strs    Array of strings defining ACEs
@param [in]  ace_nr      Length of ace_strs
@param [out] acl     Newly allocated ACL structure

\return 0       Success
    -DER_INVAL  Invalid input
    -DER_NOMEM  Could not allocate memory
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1gadad0544d69586cc7cdf3149de5712bfe';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_acl_to_strs';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_acl *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'acl';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char ***
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ace_strs';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ace_nr';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '589';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Convert an Access Control List (daos_acl) to a list of Access Control Entries
formatted as strings.

Each entry in ace_strs is dynamically allocated. So is the array itself. It
is the caller's responsibility to free all of them.

@param [in]  acl     DAOS ACL
@param [out] ace_strs    Newly allocated array of strings
@param [out] ace_nr      Length of ace_strs

\return 0       Success
    -DER_INVAL  Invalid input
    -DER_NOMEM  Could not allocate memory
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1ga66cc34336ce6a828108223c131f7fc33';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_acl_principal_from_str';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'principal_str';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
enum daos_acl_principal_type *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'type';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'name';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '612';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Convert a formatted principal string to an ACL principal type and name
suitable for creating or looking up an Access Control Entry.

The format of the input string is:
- For named user: "u:username@"
- For named group: "g:groupname@"
- For special types: "OWNER@", "GROUP@", or "EVERYONE@"

@param [in]  principal_str   Formatted principal string
@param [out] type        Type determined from the string
@param [out] name        Newly-allocated name string. Caller is
            responsible for freeing.
            Result may be NULL if the principal is one of
            the special types.

\return 0       Success
    -DER_INVAL  Invalid input
    -DER_NOMEM  Could not allocate memory
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___security_1ga53f87fb1bd0efe76b7a5e68f6c6d0c33';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_acl_to_stream';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
FILE *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'stream';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct daos_acl *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'acl';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'verbose';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
      func-mem-desc-line = '629';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Print the Access Control List to a stream in the ACL file format.

@param [in]  stream  Open stream to which the ACL should be printed
@param [in]  acl Access Control List to print
@param [in]  verbose Include verbose comment for each ACE in output

\return 0       Success
    -DER_INVAL  Invalid input
    -DER_NOMEM  Could not allocate memory
    -DER_IO     Failed to write to stream
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_security.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
DAOS API methods for security and access control
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'daos__task_8h';
  file-name = 'daos_task.h';
    typedef = {
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group___tasks_1ga9f66df8006f1c09f1da9d1deddee89bf';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
daos_obj_rw_t
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'daos_obj_fetch_t';
      typedef-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      typedef-mem-desc-line = '678';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_
fetch args struct 
_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group___tasks_1gaa22debbfb9988e9be6a54bb4a86f6925';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
daos_obj_rw_t
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'daos_obj_update_t';
      typedef-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      typedef-mem-desc-line = '680';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_
update args struct 
_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group___tasks_1ga22f4eb5dd7ee7371ecec4137e8472ab9';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
daos_obj_list_t
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'daos_obj_list_dkey_t';
      typedef-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      typedef-mem-desc-line = '748';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_
parameter subset for list_dkey -
daos_handle_t   oh;
daos_handle_t   th;
uint32_t        *nr;
daos_key_desc_t *kds;
d_sg_list_t     *sgl;
daos_anchor_t   *dkey_anchor;
_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group___tasks_1ga5cf98970bc47d85da2169601c72ab869';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
daos_obj_list_t
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'daos_obj_list_akey_t';
      typedef-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      typedef-mem-desc-line = '760';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_
parameter subset for list_akey -
daos_handle_t   oh;
daos_handle_t   th;
daos_key_t      *dkey;
uint32_t        *nr;
daos_key_desc_t *kds;
d_sg_list_t     *sgl;
daos_anchor_t   *akey_anchor;
_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group___tasks_1gaf14f0e9b9ad10d5b735c7de93502c49a';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
daos_obj_list_t
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'daos_obj_list_recx_t';
      typedef-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      typedef-mem-desc-line = '777';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_
parameter subset for list_recx -
daos_handle_t   oh;
daos_handle_t   th;
daos_key_t      *dkey;
daos_key_t      *akey;
daos_size_t     *size;
daos_iod_type_t type;
uint32_t        *nr;
daos_recx_t     *recxs;
daos_epoch_range_t  *eprs;
daos_anchor_t   *anchor;
uint32_t        *versions;
bool            incr_order;
_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group___tasks_1ga321ac64cbc20db9f075a4f85d3588bd8';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
daos_obj_list_t
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'daos_obj_list_obj_t';
      typedef-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      typedef-mem-desc-line = '797';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_
parameter subset for list_obj -
daos_handle_t   oh;
daos_handle_t   th;
daos_key_t      *dkey;
daos_key_t      *akey;
daos_size_t     *size;
uint32_t        *nr;
daos_key_desc_t *kds;
daos_recx_t     *recxs;
daos_epoch_range_t  *eprs;
d_sg_list_t     *sgl;
daos_anchor_t   *anchor;
daos_anchor_t   *dkey_anchor;
daos_anchor_t   *akey_anchor;
uint32_t        *versions;
bool            incr_order;
_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    };
    enum = {
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___tasks_1ga951c711321392d8d46a1447c17b89048';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = 'daos_opc_t';
      enum-mem-enum = { enum-name = DAOS_OPC_INVALID; enum-value = '= -1'; };
      enum-mem-enum = { enum-name = DAOS_OPC_SET_PARAMS; enum-value = '= 3'; };
      enum-mem-enum = { enum-name = DAOS_OPC_MGMT_GET_BS_STATE; };
      enum-mem-enum = { enum-name = DAOS_OPC_POOL_CONNECT; enum-value = '= 5'; };
      enum-mem-enum = { enum-name = DAOS_OPC_POOL_DISCONNECT; };
      enum-mem-enum = { enum-name = DAOS_OPC_POOL_EXCLUDE; };
      enum-mem-enum = { enum-name = DAOS_OPC_POOL_EXCLUDE_OUT; };
      enum-mem-enum = { enum-name = DAOS_OPC_POOL_ADD; };
      enum-mem-enum = { enum-name = DAOS_OPC_POOL_QUERY; };
      enum-mem-enum = { enum-name = DAOS_OPC_POOL_QUERY_INFO; };
      enum-mem-enum = { enum-name = DAOS_OPC_POOL_LIST_ATTR; };
      enum-mem-enum = { enum-name = DAOS_OPC_POOL_GET_ATTR; };
      enum-mem-enum = { enum-name = DAOS_OPC_POOL_SET_ATTR; };
      enum-mem-enum = { enum-name = DAOS_OPC_POOL_DEL_ATTR; };
      enum-mem-enum = { enum-name = DAOS_OPC_POOL_STOP_SVC; };
      enum-mem-enum = { enum-name = DAOS_OPC_POOL_LIST_CONT; };
      enum-mem-enum = { enum-name = DAOS_OPC_CONT_CREATE; enum-value = '= 18'; };
      enum-mem-enum = { enum-name = DAOS_OPC_CONT_OPEN; };
      enum-mem-enum = { enum-name = DAOS_OPC_CONT_CLOSE; };
      enum-mem-enum = { enum-name = DAOS_OPC_CONT_DESTROY; };
      enum-mem-enum = { enum-name = DAOS_OPC_CONT_QUERY; };
      enum-mem-enum = { enum-name = DAOS_OPC_CONT_SET_PROP; };
      enum-mem-enum = { enum-name = DAOS_OPC_CONT_UPDATE_ACL; };
      enum-mem-enum = { enum-name = DAOS_OPC_CONT_DELETE_ACL; };
      enum-mem-enum = { enum-name = DAOS_OPC_CONT_AGGREGATE; };
      enum-mem-enum = { enum-name = DAOS_OPC_CONT_ROLLBACK; };
      enum-mem-enum = { enum-name = DAOS_OPC_CONT_SUBSCRIBE; };
      enum-mem-enum = { enum-name = DAOS_OPC_CONT_LIST_ATTR; };
      enum-mem-enum = { enum-name = DAOS_OPC_CONT_GET_ATTR; };
      enum-mem-enum = { enum-name = DAOS_OPC_CONT_SET_ATTR; };
      enum-mem-enum = { enum-name = DAOS_OPC_CONT_DEL_ATTR; };
      enum-mem-enum = { enum-name = DAOS_OPC_CONT_ALLOC_OIDS; };
      enum-mem-enum = { enum-name = DAOS_OPC_CONT_LIST_SNAP; };
      enum-mem-enum = { enum-name = DAOS_OPC_CONT_CREATE_SNAP; };
      enum-mem-enum = { enum-name = DAOS_OPC_CONT_DESTROY_SNAP; };
      enum-mem-enum = { enum-name = DAOS_OPC_TX_OPEN; enum-value = '= 37'; };
      enum-mem-enum = { enum-name = DAOS_OPC_TX_COMMIT; };
      enum-mem-enum = { enum-name = DAOS_OPC_TX_ABORT; };
      enum-mem-enum = { enum-name = DAOS_OPC_TX_OPEN_SNAP; };
      enum-mem-enum = { enum-name = DAOS_OPC_TX_CLOSE; };
      enum-mem-enum = { enum-name = DAOS_OPC_TX_RESTART; };
      enum-mem-enum = { enum-name = DAOS_OPC_OBJ_REGISTER_CLASS; enum-value = '= 43'; };
      enum-mem-enum = { enum-name = DAOS_OPC_OBJ_QUERY_CLASS; };
      enum-mem-enum = { enum-name = DAOS_OPC_OBJ_LIST_CLASS; };
      enum-mem-enum = { enum-name = DAOS_OPC_OBJ_OPEN; };
      enum-mem-enum = { enum-name = DAOS_OPC_OBJ_CLOSE; };
      enum-mem-enum = { enum-name = DAOS_OPC_OBJ_PUNCH; };
      enum-mem-enum = { enum-name = DAOS_OPC_OBJ_PUNCH_DKEYS; };
      enum-mem-enum = { enum-name = DAOS_OPC_OBJ_PUNCH_AKEYS; };
      enum-mem-enum = { enum-name = DAOS_OPC_OBJ_QUERY; };
      enum-mem-enum = { enum-name = DAOS_OPC_OBJ_QUERY_KEY; };
      enum-mem-enum = { enum-name = DAOS_OPC_OBJ_SYNC; };
      enum-mem-enum = { enum-name = DAOS_OPC_OBJ_FETCH; };
      enum-mem-enum = { enum-name = DAOS_OPC_OBJ_UPDATE; };
      enum-mem-enum = { enum-name = DAOS_OPC_OBJ_LIST_DKEY; };
      enum-mem-enum = { enum-name = DAOS_OPC_OBJ_LIST_AKEY; };
      enum-mem-enum = { enum-name = DAOS_OPC_OBJ_LIST_RECX; };
      enum-mem-enum = { enum-name = DAOS_OPC_OBJ_LIST_OBJ; };
      enum-mem-enum = { enum-name = DAOS_OPC_ARRAY_CREATE; enum-value = '= 60'; };
      enum-mem-enum = { enum-name = DAOS_OPC_ARRAY_OPEN; };
      enum-mem-enum = { enum-name = DAOS_OPC_ARRAY_CLOSE; };
      enum-mem-enum = { enum-name = DAOS_OPC_ARRAY_DESTROY; };
      enum-mem-enum = { enum-name = DAOS_OPC_ARRAY_READ; };
      enum-mem-enum = { enum-name = DAOS_OPC_ARRAY_WRITE; };
      enum-mem-enum = { enum-name = DAOS_OPC_ARRAY_PUNCH; };
      enum-mem-enum = { enum-name = DAOS_OPC_ARRAY_GET_SIZE; };
      enum-mem-enum = { enum-name = DAOS_OPC_ARRAY_SET_SIZE; };
      enum-mem-enum = { enum-name = DAOS_OPC_KV_OPEN; enum-value = '= 69'; };
      enum-mem-enum = { enum-name = DAOS_OPC_KV_CLOSE; };
      enum-mem-enum = { enum-name = DAOS_OPC_KV_DESTROY; };
      enum-mem-enum = { enum-name = DAOS_OPC_KV_GET; };
      enum-mem-enum = { enum-name = DAOS_OPC_KV_PUT; };
      enum-mem-enum = { enum-name = DAOS_OPC_KV_REMOVE; };
      enum-mem-enum = { enum-name = DAOS_OPC_KV_LIST; };
      enum-mem-enum = { enum-name = DAOS_OPC_MAX; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      enum-mem-desc-line = '32';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
DAOS operation codes for task creation 
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___tasks_1gaebfcc2bfe17ab29825bd985abffc9d83';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_task_create';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_opc_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'opc';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tse_sched_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'sched';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'num_deps';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tse_task_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'dep_tasks';
        func-mem-param-array = '[]';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tse_task_t **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'taskp';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      func-mem-desc-line = '995';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create an asynchronous task and associate it with a daos client operation.
For synchronous operations please use the specific API for that operation.
Typically this API is used for use cases where a list of daos operations need
to be queued into the DAOS async engines with specific dependencies for order
of execution between those tasks. For example, a user can create task to open
an object then update that object with a dependency inserted on the update
to the open task.
For a simpler workflow, users can use the event based API instead of tasks.

@param opc  [IN]    Operation Code to identify the daos op to associate with
        the task,
@param sched    [IN]    Scheduler / Engine this task will be added to.
@param num_deps [IN]    Number of tasks this task depends on before it gets
        scheduled. No tasks can be in progress.
@param dep_tasks [IN]
        Array of tasks that new task will wait on completion
        before it's scheduled.
@param taskp    [OUT]   Pointer to task to be created/initialized with the op.

\return     0       Success
        -DER_INVAL  Invalid parameter
        -DER_NOSYS  Unsupported opc
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___tasks_1ga77841057a26e342a4d56629597ac37e0';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_task_reset';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tse_task_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'task';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_opc_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'opc';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      func-mem-desc-line = '1014';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Reset a DAOS task with another opcode. The task must have been completed or
not in the running state yet, and has not been freed yet (use must take a
ref count on the task to prevent it to be freed after the DAOS operation has
completed).

@param task [IN]    Task to reset.
@param opc  [IN]    Operation code to identify the daos op to associate with
        the task.

\return     0       Success
        -DER_INVAL  Invalid parameter
        -DER_NOSYS  Unsupported opc
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___tasks_1ga2292163341415fa814e3066a65418200';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_task_get_args';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tse_task_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'task';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      func-mem-desc-line = '1027';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Return a pointer to the DAOS task argument structure. This is called to set
the arguments for the task before being scheduled, typically after it's
created or in its prepare cb. The task must be created with
daos_task_create() and a valid DAOS opc.

@param task [IN]    Task to retrieve the struct from.

\return     Success: Pointer to arguments for the DAOS task
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___tasks_1ga867387b7979bd5093a54791e5cebe37a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_task_get_priv';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tse_task_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'task';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      func-mem-desc-line = '1038';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Return a pointer to the DAOS task private state. If no private state has
been set (via daos_task_get_priv()), NULL is returned.

@param task [IN]    Task to retrieve the private state from

\return     Pointer to the private state
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___tasks_1gad1b90c638b6d30ffb61e45c762e245cb';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_task_set_priv';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tse_task_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'task';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'priv';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      func-mem-desc-line = '1049';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Set a pointer to the DAOS task private state.

@param task [IN]    Task to retrieve the private state from
@param priv [IN]    Pointer to the private state

\return     private state set by the previous call
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___tasks_1gac2d3b0f1331ae42769f5d64dfa5f8a9e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_progress';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tse_sched_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'sched';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int64_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'timeout';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'is_empty';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
      func-mem-desc-line = '1065';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Make progress on the RPC context associated with the scheduler and schedule
tasks that are ready. Also check if the scheduler has any tasks.

@param sched    [IN]    Scheduler to make progress on.
@param timeout [IN] How long is caller going to wait (micro-second)
        if \a timeout > 0,
        it can also be DAOS_EQ_NOWAIT, DAOS_EQ_WAIT
@param is_empty [OUT]
        flag to indicate whether the scheduler is empty or not.

\return     0 if Success, negative DER if failed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_task.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'daos__types_8h';
  file-name = 'daos_types.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___types_1ga1150e71ca8150562e6018de305872b94';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_SYS_NAME_MAX';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
15
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      define-mem-desc-line = '33';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
uuid_t 
for d_rank_t & d_rank_list_t 
Maximum length (excluding the '\0') of a DAOS system name 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___types_1ga666839d9d4dd39afb5b601181299695f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_SYS_INFO_STRING_MAX';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
63
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      define-mem-desc-line = '36';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Maximum length (excluding the '\0') of info string info via GetAttachInfo 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___types_1ga081e8696e456e91e8abd219c5eedc85c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'crt_proc_daos_key_t';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
crt_proc_d_iov_t
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      define-mem-desc-line = '45';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___types_1gac2fc1a4c223621acd9be83c7d6f151b2';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'crt_proc_daos_size_t';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
crt_proc_uint64_t
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      define-mem-desc-line = '46';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___types_1ga8a3cc5574e50e4f65ab8060d74c8dde0';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'crt_proc_daos_epoch_t';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
crt_proc_uint64_t
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      define-mem-desc-line = '47';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___types_1ga0c8c8e6b05edb249cf2080f596257895';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_HKEY_MAX';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
32
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      define-mem-desc-line = '50';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
size of SHA-256 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___types_1ga5b168b0647052b812a953e472fb29a08';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_ANCHOR_BUF_MAX';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
104
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      define-mem-desc-line = '59';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___types_1ga05791cff0b981c2544817f3a64b1d5bd';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_ANCHOR_INIT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
				  { .da_type = DAOS_ANCHOR_TYPE_ZERO,	\
				  .da_shard = 0,			\
				  .da_flags = 0,			\
				  .da_sub_anchors = 0,			\
				  .da_buf = { 0 } }
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      define-mem-desc-line = '69';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___types_1ga5995909c62c5ef36b3b0a62a0ead1a4c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_HDL_INVAL';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((daos_handle_t){0})
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      define-mem-desc-line = '80';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___types_1ga37b40738cc58ca79d7a61e190beb95a9';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_TX_NONE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
DAOS_HDL_INVAL
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      define-mem-desc-line = '81';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___types_1gaa1cb35dcc9cefd2362a5649c199905da';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_PC_RO';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(1U << 0)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      define-mem-desc-line = '106';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
DAOS_PC_RO connects to the pool for reading only.

DAOS_PC_RW connects to the pool for reading and writing.

DAOS_PC_EX connects to the pool for reading and writing exclusively. In the
presence of an exclusive pool handle, no connection with DSM_PC_RW is
permitted.

The three flags above are mutually exclusive.
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___types_1gad61551ed3cff9036051c4ec645bacd46';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_PC_RW';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(1U << 1)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      define-mem-desc-line = '107';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___types_1ga4b9cbd1f80dd492a273efbaf7896b48b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_PC_EX';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(1U << 2)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      define-mem-desc-line = '108';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___types_1ga391b9a97e9a8491ab42a804c12a61ffd';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_PC_NBITS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
3
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      define-mem-desc-line = '110';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___types_1ga03b0ffd9b2bebacff9196b1d7dc2a600';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_PC_MASK';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((1U << DAOS_PC_NBITS) - 1)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      define-mem-desc-line = '111';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___types_1ga38dc23af5da4c364f90edd02703259ea';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_EPOCH_MAX';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(~0ULL)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      define-mem-desc-line = '126';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Highest possible epoch 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___types_1gada3ffc15b318d700c625ee7db583986d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_EQ_WAIT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
-1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      define-mem-desc-line = '145';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Wait for completion event forever 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___types_1gafa7002664cc42b952a32f93c9d9ccf5a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_EQ_NOWAIT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      define-mem-desc-line = '147';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Always return immediately 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___types_1ga0c804f62b33e62a7c5e1ba606630d598';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DAOS_ATTR_NAME_MAX';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
511
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      define-mem-desc-line = '211';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
max pool/cont attr size 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    typedef = {
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group___types_1gaef45c835fcfbd5f969030fd7c854eb8a';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'daos_size_t';
      typedef-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      typedef-mem-desc-line = '42';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_
Generic data type definition
_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group___types_1ga80e416bbdb2995411e6d97d77be950a6';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'daos_off_t';
      typedef-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      typedef-mem-desc-line = '43';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group___types_1gae363d5e93e32d7104d2bdaf97bfa5d61';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
uint64_t
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'daos_epoch_t';
      typedef-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      typedef-mem-desc-line = '116';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_
Epoch
_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group___types_1ga1d39800daa8d144d6e51b6c588971912';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
d_iov_t
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'daos_key_t';
      typedef-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      typedef-mem-desc-line = '128';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group___types_1ga7e4095443fd42c3411ed0bd000cc9c20';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
struct daos_event
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'daos_event_t';
      typedef-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      typedef-mem-desc-line = '142';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_
Event and event queue
_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    };
    enum = {
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___types_1gad3b43d8f6053b80dd4c251e270ad8107';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = 'daos_anchor_type_t';
      enum-mem-enum = { enum-name = DAOS_ANCHOR_TYPE_ZERO; enum-value = '= 0'; };
      enum-mem-enum = { enum-name = DAOS_ANCHOR_TYPE_HKEY; enum-value = '= 1'; };
      enum-mem-enum = { enum-name = DAOS_ANCHOR_TYPE_KEY; enum-value = '= 2'; };
      enum-mem-enum = { enum-name = DAOS_ANCHOR_TYPE_EOF; enum-value = '= 3'; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      enum-mem-desc-line = '52';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___types_1ga264d4997745ed0f043d482f639085137';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = 'daos_eq_query_t';
      enum-mem-enum = { enum-name = DAOS_EQR_COMPLETED; enum-value = '= (1)'; };
      enum-mem-enum = { enum-name = DAOS_EQR_WAITING; enum-value = '= (1 << 1)'; };
      enum-mem-enum = { enum-name = DAOS_EQR_ALL; enum-value = '= (DAOS_EQR_COMPLETED | DAOS_EQR_WAITING)'; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      enum-mem-desc-line = '149';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___types_1gac4858b484414914c2b78f4586db79c07';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = 'daos_ev_status_t';
      enum-mem-enum = { enum-name = DAOS_EVS_READY; };
      enum-mem-enum = { enum-name = DAOS_EVS_RUNNING; };
      enum-mem-enum = { enum-name = DAOS_EVS_COMPLETED; };
      enum-mem-enum = { enum-name = DAOS_EVS_ABORTED; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      enum-mem-desc-line = '158';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___types_1ga39fca1837c5ce7715cbf571669660c13';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = '@22';
      enum-mem-enum = { enum-name = DAOS_HTYPE_EQ; enum-value = '= 1'; };
      enum-mem-enum = { enum-name = DAOS_HTYPE_POOL; enum-value = '= 3'; };
      enum-mem-enum = { enum-name = DAOS_HTYPE_CO; enum-value = '= 5'; };
      enum-mem-enum = { enum-name = DAOS_HTYPE_OBJ; enum-value = '= 7'; };
      enum-mem-enum = { enum-name = DAOS_HTYPE_ARRAY; enum-value = '= 9'; };
      enum-mem-enum = { enum-name = DAOS_HTYPE_TX; enum-value = '= 11'; };
      enum-mem-enum = { enum-name = DAOS_HTYPE_KV; enum-value = '= 13'; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      enum-mem-desc-line = '186';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
DAOS Hash Table Handle Types
The handle type, uses the least significant 4-bits in the 64-bits hhash key.
The bit 0 is only used for D_HYTPE_PTR (pointer type), all other types MUST
set bit 0 to 1.
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___types_1gaec792ed23d2f275f421fc6fad40e1b92';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static bool
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_handle_is_inval';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'hdl';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      func-mem-desc-line = '84';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___types_1gae7776703346ac65a684f631db86c170b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static bool
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'daos_handle_is_valid';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'hdl';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
      func-mem-desc-line = '90';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_types.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'daos__uns_8h';
  file-name = 'daos_uns.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___u_n_s_1gaae9d29885dfb321968f20d86baff6e48';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DUNS_XATTR_NAME';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
"user.daos"
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_uns.h';
      define-mem-desc-line = '123';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
extended attribute name that will store the UNS info 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___u_n_s_1ga5358fccff57eb95f1cce94c2ad65becf';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DUNS_MAX_XATTR_LEN';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
170
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_uns.h';
      define-mem-desc-line = '125';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Length of the extended attribute 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group___u_n_s_1ga958a18f280f87a719addfe31f31aeaf2';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DUNS_XATTR_FMT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
"DAOS.%s://%36s/%36s"
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_uns.h';
      define-mem-desc-line = '127';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    enum = {
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'group___u_n_s_1ga94798fdadfbf49a7c658ace669a1d310';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = '@24';
      enum-mem-enum = { enum-name = DUNS_NO_PREFIX; enum-value = '= (1 << 0)'; };
      enum-mem-enum = { enum-name = DUNS_NO_REVERSE_LOOKUP; enum-value = '= (1 << 1)'; };
      enum-mem-enum = { enum-name = DUNS_NO_CHECK_PATH; enum-value = '= (1 << 2)'; };
      enum-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_uns.h';
      enum-mem-desc-line = '27';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
Flags for duns_resolve_path 
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___u_n_s_1gaed5d956858070fac62f6effe9c6540e1';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'duns_create_path';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'path';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct duns_attr_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'attrp';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_uns.h';
      func-mem-desc-line = '149';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Create a special directory (POSIX) or file (HDF5) depending on the container type, and create a
new DAOS container. The uuid of the container can be either passed in \a attrp->da_cuuid
(deprecated) or generated internally and returned in \a da_cont.
The extended attributes are set on the dir/file created that points to pool uuid, container
uuid. This is to be used in a unified namespace solution to be able to map a path in the unified
namespace to a location in the DAOS tier.  The container and pool can have labels, but the UNS
stores the uuids only and so labels are ignored in \a attrp.
The user is not required to call duns_destory_attrs on \a attrp as this call does not allocate
any buffers in attrp.

@param [in]  poh Pool handle
@param [in]  path    Valid path in an existing namespace.
@param [in,out]
    attrp   Struct containing the attributes. The uuid of the
        container created is returned in da_cuuid.

\return     0 on Success. errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___u_n_s_1gabdbf8f5eb7ab131249f3675fc1b3c653';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'duns_resolve_path';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'path';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct duns_attr_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'attr';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_uns.h';
      func-mem-desc-line = '178';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Retrieve the pool and container uuids from a path corresponding to a DAOS location. If this was a
path created with duns_create_path(), then this call would return the pool, container, and type
values in the \a attr struct (the rest of the values are not populated.  By default, this call
does a reverse lookup on the realpath until it finds an entry in the path that has the UNS
attr. The rest of the path from that entry point is returned in \a attr.da_rel_path.  If the
entire path does not have the entry, ENODATA error is returned. To avoid doing the reverse lookup
and check only that last entry, set \a attr.da_no_reverse_lookup.

To avoid going through the UNS if the user knows the pool and container uuids, a special format
can be passed as a prefix for a "fast path", and this call would parse those out in the \a attr
struct and return whatever is left from the path in \a attr.da_rel_path. This mode is provided as
a convenience to IO middleware libraries and to settle on a unified format for a mode where users
know the pool and container uuids and would just like to pass them directly instead of a
traditional path. The format of this path should be:
 daos://pool_uuid/container_uuid/xyz
xyz here can be a path relative to the root of a POSIX container if the user is accessing a posix
container, or it can be empty for example in the case of an HDF5 file.

User is responsible to call duns_destroy_attr on \a attr to free the internal buffers allocated.

@param [in]      path    Valid path in an existing namespace.
@param [in,out]  attr    Struct containing the attrs on the path.

\return     0 on Success. errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___u_n_s_1ga5cd91a183d4b7ccf5d948739dff143c4';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'duns_destroy_path';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_handle_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'poh';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'path';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_uns.h';
      func-mem-desc-line = '189';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Destroy a container and remove the path associated with it in the UNS.

@param [in]  poh Pool handle
@param [in]  path    Valid path in an existing namespace.

\return     0 on Success. errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___u_n_s_1ga678a3b99eceb1403bae24b874e45d8fd';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'duns_parse_attr';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'str';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
daos_size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'len';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct duns_attr_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'attr';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_uns.h';
      func-mem-desc-line = '201';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Convert a string into duns_attr_t.

@param [in]  str Input string
@param [in]  len Length of input string
@param [out] attr    Struct containing the attrs on the path.

\return     0 on Success. errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___u_n_s_1ga20cba354b6b1d19ed5ba3e36530e293d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'duns_set_sys_name';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct duns_attr_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'attrp';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'sys';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_uns.h';
      func-mem-desc-line = '213';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Set the system name in the duns struct in case it was obtained in a different way than
using duns_resolve_path().

@param [in]  attrp   Attr pointer
@param [in]  sys DAOS System name

\return              0 on Success. errno code on failure.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group___u_n_s_1ga48aea4ccb3ac85b26f186daa47d98654';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'duns_destroy_attr';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct duns_attr_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'attrp';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_uns.h';
      func-mem-desc-line = '221';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Free internal buffers allocated by the DUNS on the \a attr struct.

@param [in]  attrp   Attr pointer that was passed in to duns_resolve_path.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = 'C:/Users/wcdurfey/OneDrive - Intel Corporation/Documents/new/daos/src/include/daos_uns.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
DAOS Unified Namespace API

The unified namespace API provides functions and tools to be able to link files and directories
in a system namespace to a location in the DAOS tier (pool and container), in addition to other
properties such as object class.
_EnD_oF_dEf_TeXt_;
}; /* file */
